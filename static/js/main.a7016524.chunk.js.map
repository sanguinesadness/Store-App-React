{"version":3,"sources":["types/scroll.ts","hooks/useTypedSelector.ts","types/customer.ts","components/ScrollBar.tsx","icons/fakestore_logo_short.svg","lib/commerce.ts","icons/girl.svg","components/inputs/TextInput.tsx","store/actions/customer.ts","types/commerceCart.ts","types/loading.ts","components/Account.tsx","icons/hand-cart.svg","types/localCart.ts","store/actions/commerceCart.ts","types/category.ts","components/CartProduct.tsx","components/CartProducts.tsx","components/Cart.tsx","components/Wishlist.tsx","components/UserActions.tsx","components/ProductCategories.tsx","components/DoubleStateButton.tsx","components/BurgerMenu.tsx","components/Header.tsx","icons/github-dark.svg","icons/vk-dark.svg","icons/facebook-dark.svg","icons/instagram-dark.svg","components/Footer.tsx","icons/idea.svg","icons/idea-bg.svg","icons/github.svg","icons/wheel-cart.svg","components/About.tsx","icons/updated.svg","components/CategoryPicker.tsx","components/pages/HomePage.tsx","types/wishList.ts","components/AddToCartButton.tsx","components/SaveProductButton.tsx","types/sortingOption.ts","components/ProductCard.tsx","types/product.ts","components/SortingOption.tsx","components/SortingOptions.tsx","components/ProductsGrid.tsx","components/pages/CategoryPage.tsx","store/actions/product.ts","components/pages/WishlistPage.tsx","components/ImageViewer.tsx","components/ProductInfo.tsx","components/RelatedProducts.tsx","components/pages/ProductPage.tsx","components/ScrollToTop.tsx","components/ContentBlock.tsx","components/inputs/SelectInputOptions.tsx","components/inputs/SelectInput.tsx","components/inputs/RadioInputOptions.tsx","components/inputs/RadioInput.tsx","components/inputs/CreditCardInput.tsx","icons/chec_logo.svg","icons/dude.svg","components/pages/CheckoutPage.tsx","icons/account_front.svg","icons/account_bg.svg","icons/checked_sign.svg","components/pages/LoginResultPage.tsx","App.tsx","store/actions/category.ts","store/reducers/productReducer.ts","store/reducers/categoryReducer.ts","store/reducers/scrollReducer.ts","store/reducers/localCartReducer.ts","store/reducers/wishListReducer.ts","store/reducers/sortingOptionReducer.ts","store/reducers/loadingReducer.ts","store/reducers/commerceCartReducer.ts","store/reducers/customerReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["ScrollActionTypes","useTypedSelector","useSelector","setScrollPercentAction","percent","type","SET_SCROLL_PERCENT","payload","CustomerActionTypes","calculateScrollPercent","doc","document","documentElement","body","scrollTop","scrollHeight","clientHeight","Math","round","ScrollBar","root","scroll","dispatch","useDispatch","useEffect","window","addEventListener","className","style","width","apiKey","process","commerce","Commerce","TextInput","props","inputRef","useRef","errorRef","setError","error","gsap","fromTo","current","yPercent","opacity","duration","ease","wrapperClassName","label","labelClassName","inputClassName","value","onChange","event","onValueChange","call","onKeyPress","placeholder","ref","onClick","setValue","focus","fetchCustomerAction","FETCH_CUSTOMER","fetchCustomerSuccessAction","customer","jwt","FETCH_CUSTOMER_SUCCESS","fetchCustomerErrorAction","FETCH_CUSTOMER_ERROR","clearStateAction","CLEAR_STATE","CommerceCartActionTypes","LoadingActionTypes","Account","useState","isLoginModalOpen","setIsLoginModalOpen","isLogoutModalOpen","setIsLogoutModalOpen","email","setEmail","loading","setLoading","success","setSuccess","isPopupVisible","setIsPopupVisible","a","isLoggedIn","about","then","catch","login","response","data","errors","finally","openLoginModal","closeLoginModal","hidePopup","onMouseEnter","onMouseLeave","firstname","disabled","isOpen","logout","alt","src","girlPicture","loader","key","e","currentTarget","fetchCartErrorAction","FETCH_CART_ERROR","LocalCartActionTypes","incLoadingsAction","INC_LOADINGS","decLoadingsAction","DEC_LOADINGS","addToLocalCartAction","product","quantity","ADD_TO_CART","removeFromLocalCartAction","productId","REMOVE_FROM_CART","clearLocalCartAction","CLEAR_CART","CategoryActionTypes","fetchCommerceCart","FETCH_CART","cart","contents","items","lineItems","FETCH_CART_SUCCESS","updateCommerceCart","existingItem","find","item","product_id","id","update","removeFromCommerceCart","remove","CartProduct","cartProduct","cartProductRef","removeAll","animateAndRemoveAll","to","scale","onComplete","media","source","price","formatted_with_symbol","name","CartProducts","cartProducts","localCart","lcartProducts","map","Cart","totalPrice","totalQuantity","cartLoading","commerceCart","productsLoading","popupBodyRef","history","useHistory","length","scrollTo","color","size","empty","push","Wishlist","products","wishList","linkRef","tl","timeline","removeAttribute","activeClassName","UserActions","setSelectedCategoryAction","category","SET_SELECTED_CATEGORY","ActionResults","ButtonStateNames","ProductCategories","categories","currentCategory","setCurrentCategory","slug","isActive","match","setTimeout","BurgerMenu","isExpanded","setIsExpanded","location","useLocation","pathname","exact","fk_logo","Header","navbarRef","isMobileScreen","useMediaQuery","query","isBurgerExpanded","setIsBurgerExpanded","lastScrollTop","setLastScrollTop","headerState","setHeaderState","showHeader","navbarHeight","offsetHeight","hasScrolled","scrollY","abs","max","Footer","Date","getFullYear","href","target","rel","vk","github","facebook","instagram","About","onClickScroll","infoRef","pictureRef","xPercent","visibility","idea","idea_bg","CategoryPicker","categoryIcons","category_icons","reference","icon","c","description","HomePage","categoryRef","scrollIntoView","WishListActionTypes","DoubleStateButton","firstState","buttonState","setButtonState","FIRST","buttonStateName","setButtonStateName","buttonStateIcon","setButtonStateIcon","changeState","setChangeState","toggleState","secondState","SECOND","Promise","resolve","beforeAction","action","additionalClickHandler","result","SUCCESS","title","AddToCartButton","cp","isInCart","Boolean","wasInCart","cartButtonStates","FiPlus","add","addToCommerceCart","HiCheck","isFirstRender","setIsFirstRender","cartButtonChangeState","setCartButtonChangeState","SortingNames","SortingActionTypes","SaveProductButton","wishlistProduct","wp","isInWishlist","wasInWishlist","saveButtonStates","IoMdHeartEmpty","ADD_TO_WISHLIST","addToWishlistAction","IoMdHeart","REMOVE_FROM_WISHLIST","ProductCard","cardRef","includes","reject","setAvailableSortingOptionsAction","sortingOptions","SET_AVAILABLE_OPTIONS","setActiveSortingOptionAction","sortingOption","SET_ACTIVE_OPTION","ProductActionTypes","SortingOption","setSelectedOption","isSelected","optionState","setOptionState","ascending","SortingOptions","sorting","availableOptions","activeOption","selectedOption","option","ProductsGrid","emptyErrorMsg","sortingState","productState","cartState","sortingDisabled","setSortingDisabled","sort","product1","product2","num1","num2","CREATED","created","PRICE","raw","NAME","categoryPageSortingOptions","CategoryPage","selectedCategory","categoryProducts","setCategoryProducts","cProducts","forEach","wishlistPageSortingOptions","WishlistPage","ImageViewer","images","switcherRef","selectedImage","setSelectedImage","backArrowDisabled","setBackArrowDisabled","forwardArrowDisabled","setForwardArrowDisabled","setNextImage","index","setPrevImage","top","behavior","image","zoomFactor","mgShape","mgTouchOffsetX","mgMouseOffsetY","ProductInfo","productImages","assets","asset","url","isMediumScreen","maxWidth","minWidth","dangerouslySetInnerHTML","__html","RelatedProducts","allProducts","getProductCategorySlug","prod","p","listRef","updateCarouselArrows","scrollPos","scrollPercent","scrollWidth","clientWidth","isPercentNan","isNaN","scrollLeft","left","related_products","nextPos","ProductPage","params","useParams","selectedProduct","setSelectedProduct","ScrollToTop","isScrollSmooth","prevPathname","setPrevPathname","querySelector","setAttribute","ContentBlock","children","SelectInputOptions","options","hidden","SelectInput","selectedOptionId","visibleOptions","setVisibleOptions","op","searchValue","setSearchValue","wrapperRef","handleClickOutside","contains","removeEventListener","filteredOptions","filter","toLocaleString","toLowerCase","RadioInputOptions","subTitle","React","createElement","RadioInput","CreditCardInput","number","setNumber","setName","expiry","setExpiry","cvc","setCvc","setFocus","onFocusEventHandler","focused","htmlFor","pattern","maxLength","required","onFocus","emptyBillingObj","lastname","country","zipcode","gateway","card","cardholder","CheckoutPage","itemsLoading","availableCountries","setAvailableCountries","isModalOpen","setIsModalOpen","paymentLoading","setPaymentLoading","paymentError","setPaymentError","mounted","countriesObject","countriesArray","services","localeListCountries","countries","Object","values","i","keys","getAvailableCountries","billing","setBilling","openModal","goHome","isSmallScreen","goBack","colSpan","ImCreditCard","toString","split","expiry_month","substr","expiry_year","postal_zip_code","checkoutData","line_items","payment","cartId","checkout","generateToken","token","capture","message","confirmPayment","checLogo","dudePicture","LoginResultPage","isRendered","setIsRendered","getToken","checked_sign","account_front","account_bg","Modal","setAppElement","App","FETCH_CATEGORIES","list","FETCH_CATEGORIES_SUCCESS","FETCH_CATEGORIES_ERROR","FETCH_PRODUCTS","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_ERROR","availableProducts","lCartProducts","lCartProduct","FILL_CART","commerceCartToLocal","settings","path","component","render","initialState","calculateCartPrice","reduce","b","countItemsInCart","calculateProductPrice","numOfLoadings","rootReducer","combineReducers","state","newLCartProducts","CLEAR_WISH_LIST","SET_LOADINGS","CLEAR_LOADINGS","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"2JAIYA,E,+CCDCC,EAAoDC,I,gBDa1D,SAASC,EAAuBC,GACnC,MAAO,CAAEC,KAAML,EAAkBM,mBAAoBC,QAASH,I,SAbtDJ,K,yCAAAA,M,SESAQ,E,OCPNC,EAAyB,WAC3B,IAAIC,EAAMC,SAASC,gBACfC,EAAOF,SAASE,KAChBT,GAAWM,EAAII,WAAaD,EAAKC,aAAeJ,EAAIK,cAAgBF,EAAKE,cAAgBL,EAAIM,cAAgB,IAEjH,OAAOC,KAAKC,MAAMd,IAmBPe,EAhBO,WAClB,IAAQf,EAAYH,GAAiB,SAAAmB,GAAI,OAAIA,EAAKC,UAA1CjB,QACFkB,EAAWC,cAOjB,OALAC,qBAAU,WACNF,EAASnB,EAAuBM,MAChCgB,OAAOC,iBAAiB,UAAU,kBAAMJ,EAASnB,EAAuBM,WACzE,IAGC,qBAAKkB,UAAU,aAAf,SACI,sBAAMA,UAAU,cAAcC,MAAO,CAAEC,MAAM,GAAD,OAAKzB,EAAL,W,iBCzBzC,MAA0B,iD,wBCEnC0B,EAA6BC,mDAEtBC,EAAW,I,OAAIC,GAAkBH,GAAa,G,kCCJ5C,MAA0B,iC,wBCyG1BI,EAjFuB,SAACC,GACnC,IAoBMC,EAAWC,iBAAyB,MACpCC,EAAWD,iBAAuB,MAExCb,qBAAU,WACFW,EAAMI,UACFJ,EAAMK,OACNC,IAAKC,OAAOJ,EAASK,QAAS,CAC1BC,UAAW,IACXC,QAAS,GACV,CACCD,SAAU,EACVC,QAAS,EACTC,SAAU,GACVC,KAAM,iBAInB,CAACZ,EAAMK,QAOV,OACI,sBAAKb,UAAS,qBAAgBQ,EAAMa,kBAApC,UAEQb,EAAMc,MACF,sBAAMtB,UAAS,gBAAWQ,EAAMe,gBAAhC,SAAmDf,EAAMc,QAC3D,6BAEN,sBAAKtB,UAAS,sBAAiBQ,EAAMK,MAAQ,mBAAqB,IAAlE,UACI,uBAAOb,UAAS,gBAAWQ,EAAMgB,gBAC1BC,MAAOjB,EAAMiB,MACbC,SAfQ,SAACC,GAAgD,IAAD,EACvE,UAAAnB,EAAMoB,qBAAN,SAAqBC,KAAK,KAAMF,GA9B5BnB,EAAMI,UACNJ,EAAMI,SAAS,KA4CJkB,WAAYtB,EAAMsB,WAClBC,YAAavB,EAAMuB,YACnBrD,KAAM8B,EAAM9B,KACZsD,IAAKvB,IACZ,qBAAKT,UAAU,UAAf,SAEQ,sBAAMA,UAAU,eACZiC,QA/CQ,WAAO,IAAD,EAd9BzB,EAAM0B,SACN1B,EAAM0B,SAAS,IAEVzB,EAASO,UACdP,EAASO,QAAQS,MAAQ,IAY7B,UAAAhB,EAASO,eAAT,SAAkBmB,SA4CF,SAEI,cAAC,IAAD,CAAkBnC,UAAU,sBAMxCQ,EAAMK,OAASL,EAAMI,SACjB,sBAAKZ,UAAU,QAAQgC,IAAKrB,EAA5B,UACI,cAAC,IAAD,CAAmBX,UAAU,eAC7B,sBAAMA,UAAU,aAAhB,SAA8BQ,EAAMK,WAEtC,iC,gCLvDf,SAASuB,IACZ,MAAO,CAAE1D,KAAMG,EAAoBwD,gBAGhC,SAASC,EAA2BC,EAAoBC,GAC3D,MAAO,CACH9D,KAAMG,EAAoB4D,uBAC1B7D,QAAS,CAAE2D,WAAUC,QAItB,SAASE,EAAyB7B,GACrC,MAAO,CACHnC,KAAMG,EAAoB8D,qBAC1B/D,QAASiC,GAIV,SAAS+B,IACZ,MAAO,CAAElE,KAAMG,EAAoBgE,c,SAlD3BhE,K,gCAAAA,E,gDAAAA,E,4CAAAA,E,2BAAAA,M,KMTL,ICIKiE,ECDAC,EC4LGC,EApLK,WAChB,MAAgDC,oBAAkB,GAAlE,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkDF,oBAAkB,GAApE,mBAAOG,EAAP,KAA0BC,EAA1B,KAEA,EAA0BJ,mBAAiB,IAA3C,mBAAOK,EAAP,KAAcC,EAAd,KAEA,EAA8BN,oBAAkB,GAAhD,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA0BR,mBAAiB,IAA3C,mBAAOpC,EAAP,KAAcD,EAAd,KACA,EAA8BqC,oBAAkB,GAAhD,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAA4CV,oBAAkB,GAA9D,mBAAOW,EAAP,KAAuBC,EAAvB,KAEQtB,EAAajE,GAAiB,SAAAmB,GAAI,OAAIA,EAAK8C,YAA3CA,SACF5C,EAAWC,cAEjBC,qBAAU,WACNF,EHHJ,uCAAO,WAAOA,GAAP,SAAAmE,EAAA,sDACCzD,EAASkC,SAASwB,cAClBpE,EAASyC,KAET/B,EAASkC,SAASyB,QAAQC,MAAK,SAAA1B,GAC3B5C,EAAS2C,EAA2BC,OAEvC2B,OAAM,kBAAMvE,EAASiD,SAGtBjD,EAASiD,KAVV,2CAAP,uDGIIa,GAAW,KACZ,CAACpD,EAASkC,SAASwB,eAGtB,IAAMI,EAAQ,WACLb,GAKLG,GAAW,GAEXpD,EAASkC,SAAS4B,MAAMb,EAAO,yCACbW,MAAK,SAACG,GAAD,OAAcT,EAAWS,EAASV,YACvCQ,OAAM,SAACE,GAAD,OAAcxD,EAASwD,EAASC,KAAKxD,MAAMyD,OAAOhB,UACxDiB,SAAQ,kBAAMd,GAAW,OATvC7C,EAAS,0BA6BX4D,EAAiB,kBAAMrB,GAAoB,IAC3CsB,EAAkB,WACpBtB,GAAoB,GACpBI,EAAS,IACTE,GAAW,GACX7C,EAAS,IACT+C,GAAW,IASTe,EAAY,kBAAMb,GAAkB,IAG1C,OACI,sBAAK7D,UAAU,UACV2E,aAJS,kBAAMd,GAAkB,IAKjCe,aAAcF,EAFnB,UAGI,qBAAK1E,UAAU,8BAA8BiC,QA5BzB,WACnBM,GACDiC,KA0BA,SACI,cAAC,IAAD,CAAQxE,UAAU,WAGlBuC,EACI,qCACI,sBAAKvC,UAAS,sBAAiB4D,EAAiB,UAAY,UAA5D,UACI,yBAAQ5D,UAAU,sBAAlB,UACI,qBAAIA,UAAU,iBAAd,iBAAoCuC,EAASsC,UAAYtC,EAASsC,UAAY,cAC9E,cAAC,IAAD,CAAgB7E,UAAU,sBAE9B,sBAAKA,UAAU,oBAAf,UACI,yBAAQA,UAAU,2CAA2C8E,UAAQ,EAArE,UACI,8CACA,cAAC,IAAD,OAEJ,yBAAQ9E,UAAU,kCAAkC8E,UAAQ,EAA5D,UACI,6CACA,cAAC,IAAD,OAEJ,yBAAQ9E,UAAU,sCAAsCiC,QAjC5D,WACpBoB,GAAqB,GACrBqB,KA+BwB,UACI,2CACA,cAAC,IAAD,aAIZ,cAAC,IAAD,CAAO1E,UAAU,eAAe+E,OAAQ3B,EAAxC,SAESI,EAYG,sBAAKxD,UAAU,yBAAf,UACI,oBAAIA,UAAU,cAAd,wBACA,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAActB,KAAK,OAAOsB,UAAU,yBAd5C,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,cAAd,qBACA,qBAAKA,UAAU,aAAf,SACI,uEAEJ,sBAAKA,UAAU,gBAAf,UACI,wBAAQA,UAAU,aAAaiC,QA5C9C,kBAAMoB,GAAqB,IA4CZ,oBACA,wBAAQrD,UAAU,iBAAiBiC,QA3E5D,WACXwB,GAAW,GACXpD,EAASkC,SAASyC,UAyEkB,4BAcxB,cAAC,IAAD,CAAOD,OAAQ7B,EAAkBlD,UAAU,cAA3C,SAEQwD,EACI,sBAAKxD,UAAU,yBAAf,UACI,oBAAIA,UAAU,cAAd,wBACA,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAActB,KAAK,OAAOsB,UAAU,yBAG1C0D,EACE,sBAAK1D,UAAU,uBAAf,UACI,oBAAIA,UAAU,oBAAd,sCACA,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBAAMA,UAAU,OAAhB,UACI,sFACA,uEAGR,qBAAKA,UAAU,aAAf,SACI,cAAC,MAAD,CAAKA,UAAU,eACXiF,IAAI,GACJC,IAAKC,EACLC,OAAQ,cAAC,IAAD,CAAc1G,KAAK,OAAOsB,UAAU,2BAGxD,qBAAKA,UAAU,gBAAf,SACI,wBAAQA,UAAU,sCAAsCiC,QAASwC,EAAjE,wBAIR,sBAAKzE,UAAU,qBAAf,UACI,oBAAIA,UAAU,cAAd,mBACA,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CAAWyB,MAAO6B,EACdpB,SAAUqB,EACVjC,MAAM,+CACNQ,WAzHvB,SAACH,GACD,SAAbA,EAAM0D,KACNlB,KAwHoCvC,cAAe,SAAC0D,GAAD,OAAO/B,EAAS+B,EAAEC,cAAc9D,QAC/CM,YAAY,sBACZlB,MAAOA,EACPD,SAAUA,EACVlC,KAAK,YAEb,sBAAKsB,UAAU,gBAAf,UACI,wBAAQA,UAAU,2BAA2BiC,QAASwC,EAAtD,oBACA,wBAAQzE,UAAU,kCAAkCiC,QAASkC,EAA7D,iCCzL7B,MAA0B,sCH0ClC,SAASqB,EAAqB3E,GACjC,MAAO,CACHnC,KAAMoE,EAAwB2C,iBAC9B7G,QAASiC,I,SArCLiC,K,wBAAAA,E,wCAAAA,E,qCAAAA,M,cCDAC,K,mCAAAA,E,2BAAAA,E,2BAAAA,E,iCAAAA,M,KA2BL,IGpBK2C,EHwBCC,EAAoB,WAC7B,MAAO,CAAEjH,KAAMqE,EAAmB6C,eAGzBC,EAAoB,WAC7B,MAAO,CAAEnH,KAAMqE,EAAmB+C,eGA/B,SAASC,EAAqBC,EAAkBC,GACnD,MAAO,CACHvH,KAAMgH,EAAqBQ,YAC3BtH,QAAS,CAAEoH,UAASC,aAIrB,SAASE,EAA0BC,EAAmBH,GACzD,MAAO,CACHvH,KAAMgH,EAAqBW,iBAC3BzH,QAAS,CAAEwH,YAAWH,aAIvB,SAASK,IACZ,MAAO,CAAE5H,KAAMgH,EAAqBa,a,SA5C5Bb,K,0BAAAA,E,oCAAAA,E,wBAAAA,E,uBAAAA,M,KCNL,ICCKc,GDDCC,GAAoB,WAC7B,8CAAO,WAAO9G,GAAP,SAAAmE,EAAA,sDACHnE,ELsBG,CAAEjB,KAAMoE,EAAwB4D,aKpBnCrG,EAASsG,KAAKC,WACb3C,MAAK,SAAA4C,GAAK,OAAIlH,GLsBgBmH,EKtBgBD,ELuB5C,CACHnI,KAAMoE,EAAwBiE,mBAC9BnI,QAASkI,KAHV,IAAgCA,KKrB9B5C,OAAM,SAAArD,GAAK,OAAIlB,EAAS6F,EAAqB3E,OAL3C,2CAAP,uDAgDSmG,GAAqB,SAAChB,EAAkBC,GACjD,8CAAO,WAAOtG,GAAP,SAAAmE,EAAA,sDACHnE,EAASgG,KAETtF,EAASsG,KAAKC,WAAW3C,MAAK,SAAA4C,GAC1B,IAAMI,EAAeJ,EAAMK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,aAAepB,EAAQqB,MAEhEJ,GACA5G,EAASsG,KAAKW,OAAOL,EAAaI,GAAI,CAAEpB,aACnChC,MAAK,SAAAG,GACEA,EAASV,SACT/D,EAASkG,WAV1B,2CAAP,uDAkBS0B,GAAyB,SAACvB,GACnC,8CAAO,WAAOrG,GAAP,SAAAmE,EAAA,sDACHnE,EAASgG,KAETtF,EAASsG,KAAKC,WAAW3C,MAAK,SAAA4C,GAC1B,IAAMI,EAAeJ,EAAMK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,aAAepB,EAAQqB,MAEhEJ,GACA5G,EAASsG,KAAKa,OAAOP,EAAaI,IAC7BpD,MAAK,SAAAG,GACEA,EAASV,SACT/D,EAASkG,WAV1B,2CAAP,uDEMW4B,GAvE2B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnC/H,EAAWC,cACX+H,EAAiBjH,iBAAuB,MAoBxCkH,EAAY,WACdjI,EAASwG,EAA0BuB,EAAY1B,QAAQqB,GAAIK,EAAYzB,WACvEtG,EAAS4H,GAAuBG,EAAY1B,WAG1C6B,EAAsB,WACxB/G,IAAKgH,GAAGH,EAAe3G,QAAS,CAC5BE,QAAS,EACT6G,MAAO,GACP5G,SAAU,GACVC,KAAM,gBACN4G,WAAYJ,KAIpB,OACI,sBAAK5H,UAAU,eAAegC,IAAK2F,EAAnC,UACI,yBAAS3H,UAAU,eAAnB,SACI,qBAAKA,UAAU,gBAAgBkF,IAAKwC,EAAY1B,QAAQiC,MAAMC,OAAQjD,IAAI,OAE9E,0BAASjF,UAAU,gBAAnB,UACI,sBAAMA,UAAU,gBAAhB,SAAiC0H,EAAY1B,QAAQmC,MAAMC,wBAC3D,sBAAMpI,UAAU,eAAhB,SAAgC0H,EAAY1B,QAAQqC,OACpD,sBAAKrI,UAAU,yBAAf,UACI,uBAAMA,UAAU,aAAhB,UACI,sBAAMA,UAAU,OAAhB,uBACA,sBAAMA,UAAU,QAAhB,SAAyB0H,EAAYzB,cAEzC,uBAAMjG,UAAU,uBAAhB,UACI,wBAAQA,UAAU,8BAA8BiC,QAxClD,WACe,IAAzByF,EAAYzB,SACZ4B,KAGAlI,EAASwG,EAA0BuB,EAAY1B,QAAQqB,GAAI,IAC3D1H,EAASqH,GAAmBU,EAAY1B,QAAS0B,EAAYzB,SAAW,MAkC5D,SACI,cAAC,IAAD,MAEJ,wBAAQjG,UAAU,8BAA8BiC,QAjDrD,WACXtC,EAASoG,EAAqB2B,EAAY1B,QAAS,IACnDrG,EAASqH,GAAmBU,EAAY1B,QAAS0B,EAAYzB,SAAW,KA+CxD,SACI,cAAC,IAAD,YAIZ,yBAAQjG,UAAU,uCACViC,QAAS4F,EADjB,UAEI,sBAAM7H,UAAU,eAAhB,SACI,cAAC,IAAD,MAEJ,sBAAMA,UAAU,QAAhB,8BC5DLsI,GAZU,WACrB,IAAuBC,EAAiBjK,GAAiB,SAAAmB,GAAI,OAAIA,EAAK+I,aAA9DC,cAER,OACI,qBAAKzI,UAAU,gBAAf,SACKuI,EAAaG,KAAI,SAAAhB,GAAW,OACzB,cAAC,GAAD,CAA0CA,YAAaA,GAArCA,EAAY1B,QAAQqB,U,SCyFvCsB,GArFE,WACb,MAAmErK,GAAiB,SAAAmB,GAAI,OAAIA,EAAK+I,aAA1ED,EAAvB,EAAQE,cAA6BG,EAArC,EAAqCA,WAAYC,EAAjD,EAAiDA,cAEhCC,EAAgBxK,GAAiB,SAAAmB,GAAI,OAAIA,EAAKsJ,gBAAvDvF,QACSwF,EAAoB1K,GAAiB,SAAAmB,GAAI,OAAIA,EAAKuG,WAA3DxC,QAEF7D,EAAWC,cAEjB,EAA4CqD,oBAAkB,GAA9D,mBAAOW,EAAP,KAAuBC,EAAvB,KAEMoF,EAAevI,iBAAuB,MAEtCgE,EAAY,WACdb,GAAkB,IAahBqF,EAAUC,cAYhB,OANAtJ,qBAAU,WACsB,IAAxB0I,EAAaa,QACb1E,MAEL,CAAC6D,IAGA,qBAAKvI,UAAU,OACV2E,aAxBS,WAAO,IAAD,EACpB,UAAAsE,EAAajI,eAAb,SAAsBqI,SAAS,EAAG,GAClCxF,GAAkB,IAuBbe,aAAcF,EAFnB,SAIQoE,GAAeE,EACX,qBAAKhJ,UAAU,cAAf,SACI,cAAC,cAAD,CAAYsJ,MAAM,UAAUC,KAAM,OAGtC,qCACI,sBAAKvJ,UAAU,8BAAf,UACI,qBAAKA,UAAU,OAAOkF,IAAKyB,EAAM1B,IAAI,SACrC,sBAAMjF,UAAS,iCAAoD,IAAxBuI,EAAaa,OAAe,SAAW,IAAlF,SACI,sBAAMpJ,UAAU,gBAAhB,SAAiCuI,EAAaa,cAGrDb,EAAaa,OAAS,EACnB,sBAAKpJ,UAAS,oCAA+B4D,EAAiB,UAAY,UAA1E,UACI,yBAAQ5D,UAAU,sBAAlB,UACI,sBAAMA,UAAU,gBAAhB,qBACA,uBAAMA,UAAU,iBAAhB,UAAkC6I,EAAlC,IAAoE,IAAlBA,EAAsB,OAAS,cAErF,qBAAK7G,IAAKiH,EAAcjJ,UAAU,oBAAlC,SACI,cAAC,GAAD,MAEJ,yBAAQA,UAAU,sBAAlB,UACI,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,OAAhB,0BACA,uBAAMA,UAAU,QAAhB,cAA0B4I,QAE9B,sBAAK5I,UAAU,UAAf,UACI,wBAAQA,UAAU,yBAAyBiC,QAjD7D,WACdtC,EAAS2G,KACT3G,EJlBJ,uCAAO,WAAOA,GAAP,SAAAmE,EAAA,sDACHnE,EAASgG,KAETtF,EAASsG,KAAK6C,QAAQvF,MAAK,SAAAG,GACnBA,EAASV,SACT/D,EAASkG,QALd,2CAAP,wDIiEoC,wBACA,wBAAQ7F,UAAU,wBAAwBiC,QA3CzD,WACjBiH,EAAQO,KAAK,cA0CmB,+BAKZ,qBAAKzJ,UAAS,0CAAqC4D,EAAiB,UAAY,UAAhF,iCC9Db8F,GArBM,WACjB,IAAQC,EAAarL,GAAiB,SAAAmB,GAAI,OAAIA,EAAKmK,YAA3CD,SACFE,EAAUnJ,iBAA0B,MACpCoJ,EAAKhJ,IAAKiJ,WAQhB,OANAlK,qBAAU,WACNiK,EAAGhC,GAAG+B,EAAQ7I,QAAS,CAAE+G,MAAO,IAAKuB,MAAO,UAAWnI,SAAU,KACjE2I,EAAGhC,GAAG+B,EAAQ7I,QAAS,CAAE+G,MAAO,EAAGuB,MAAO,UAAWnI,SAAU,GACtC6G,WAAY,kCAAM6B,EAAQ7I,eAAd,aAAM,EAAiBgJ,gBAAgB,cAC7E,CAACL,IAGA,cAAC,IAAD,CAAS7B,GAAG,YACH9H,UAAU,uBACViK,gBAAgB,WAChBjI,IAAK6H,EAHd,SAII,cAAC,IAAD,CAAS7J,UAAU,YCRhBkK,GAVS,WACpB,OACI,sBAAKlK,UAAU,eAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QL2CL,SAASmK,GAA0BC,GACtC,MAAO,CAAE1L,KAAM8H,GAAoB6D,sBAAuBzL,QAASwL,I,SA7C3D5D,K,oCAAAA,E,oDAAAA,E,gDAAAA,E,+CAAAA,Q,KMFZ,ICiBY8D,GAKPC,GDUUC,GAhCe,WAC1B,IAAQC,EAAenM,GAAiB,SAAAmB,GAAI,OAAIA,EAAK2K,YAA7CK,WACR,EAA8CxH,qBAA9C,mBAAOyH,EAAP,KAAwBC,EAAxB,KACMhL,EAAWC,cAQjB,OANAC,qBAAU,WACF6K,GACA/K,EAASwK,GAA0BO,MAExC,CAACA,IAGA,qBAAK1K,UAAU,qBAAf,SACKyK,EAAW/B,KAAI,SAAA0B,GAAQ,OACpB,cAAC,IAAD,CAAStC,GAAE,WAAMsC,EAASQ,MAAQ5K,UAAU,mBACxC6K,SAAU,SAACC,GACP,QAAKA,IAKLC,YAAW,kBAAMJ,EAAmBP,KAAW,IAExC,IATf,SAWKA,EAAS/B,MAXsD+B,EAAS/C,UE4B9E2D,GApCyB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAG7CC,EAAWC,cAMjB,OAJAvL,qBAAU,WACNqL,GAAc,KACf,CAACC,EAASE,WAGT,sBAAKrL,UAAS,sBAAiBiL,EAAa,WAAa,IAAzD,UACI,sBAAKjL,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAciC,QAXpB,kBAAMiJ,GAAeD,IAW9B,UACI,sBAAMjL,UAAU,aAChB,sBAAMA,UAAU,gBAChB,sBAAMA,UAAU,mBAEpB,cAAC,GAAD,OAGJ,qBAAKA,UAAU,qBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,eAAC,IAAD,CAAS8H,GAAG,IAAIwD,OAAK,EAArB,UACI,sBAAMtL,UAAU,OAAhB,kBACA,qBAAKA,UAAU,OAAOkF,IAAKqG,EAAStG,IAAI,UAGhD,sBAAMjF,UAAU,cAChB,cAAC,GAAD,aC8CLwL,GA3EI,WAAO,IAAD,EACb/M,EAAYH,GAAiB,SAAAmB,GAAI,OAAIA,EAAKC,UAA1CjB,QACFgN,EAAY/K,iBAAuB,MACnCyK,EAAWC,cAEXM,EAAiBC,wBAAc,CAAEC,MAAO,uBAC9C,EAAgD3I,oBAAkB,GAAlE,mBAAO4I,EAAP,KAAyBC,EAAzB,KAEA,EAA0C7I,mBAAiB,GAA3D,mBAAO8I,EAAP,KAAsBC,EAAtB,KACA,EAAsC/I,mBAA+B,UAArE,mBAAOgJ,EAAP,KAAoBC,EAApB,KAEMC,EAAa,kBAAMD,EAAe,YAIlCE,GAAe,UAAAX,EAAUzK,eAAV,eAAmBqL,eAAgB,EAExDxM,qBAAU,WACNyM,MACD,CAACxM,OAAOyM,UAEX1M,qBAAU,WACNsM,MACD,CAAChB,EAASE,WAEb,IAQMiB,EAAc,WAChB,IAAMnN,EAAYW,OAAOyM,QAErBjN,KAAKkN,IAAIT,EAAgB5M,IAtBnB,IA0BNA,EAAY4M,GAAiB5M,EAAYiN,EA5BxBF,EAAe,UA+BzB/M,EAjBJG,KAAKmN,IACRzN,SAASE,KAAKE,aAAcJ,SAASC,gBAAgBG,aACrDJ,SAASE,KAAKmN,aAAcrN,SAASC,gBAAgBoN,aACrDrN,SAASE,KAAKG,aAAcL,SAASC,gBAAgBI,eAgBrD8M,IAGJH,EAAiB7M,KAGrB,OACI,yBAAQ6C,IAAKyJ,EACLzL,UAAS,iBAAYvB,EAAU,EAAI,iBAAmB,aAA7C,YAA6DoN,EAAmB,kBAAoB,GAApG,YAA0GH,EAAiBO,EAAc,IAD1J,UAEI,cAAC,EAAD,IACA,qBAAKjM,UAAU,YAAf,SAEQ0L,EACI,cAAC,GAAD,CAAYT,WAAYY,EAAkBX,cAAeY,IAEzD,sBAAK9L,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CAAS8H,GAAG,IAAIwD,OAAK,EAArB,SACI,sBAAMtL,UAAU,kBAGxB,cAAC,GAAD,IACA,cAAC,GAAD,aChFb,OAA0B,wCCA1B,OAA0B,oCCA1B,OAA0B,0CCA1B,OAA0B,2CCmC1B0M,GA7BI,WACf,OACI,wBAAQ1M,UAAU,SAAlB,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,UAAf,SACI,kDAAsB,IAAI2M,MAAOC,mBAErC,qBAAK5M,UAAU,UAAf,SACI,0DAAkB,4CAAlB,sBAEJ,sBAAKA,UAAU,eAAf,UACI,mBAAGA,UAAU,iBAAiB6M,KAAK,6BAA6BC,OAAO,SAASC,IAAI,sBAApF,SACI,qBAAK7H,IAAK8H,GAAI/H,IAAI,OAEtB,mBAAGjF,UAAU,qBAAqB6M,KAAK,qCAAqCC,OAAO,SAASC,IAAI,sBAAhG,SACI,qBAAK7H,IAAK+H,GAAQhI,IAAI,OAE1B,mBAAGjF,UAAU,uBAAuB6M,KAAK,uBAAuBC,OAAO,SAASC,IAAI,sBAApF,SACI,qBAAK7H,IAAKgI,GAAUjI,IAAI,OAE5B,mBAAGjF,UAAU,wBAAwB6M,KAAK,wBAAwBC,OAAO,SAASC,IAAI,sBAAtF,SACI,qBAAK7H,IAAKiI,GAAWlI,IAAI,gBC3BlC,OAA0B,iCCA1B,OAA0B,oCCA1B,OAA0B,mCCA1B,OAA0B,uCC+D1BmI,GAnDe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvBC,EAAU5M,iBAAuB,MACjC6M,EAAa7M,iBAAuB,MAgB1C,OAdAb,qBAAU,WACNiB,IAAKC,OAAO,CAACuM,EAAQtM,SAAU,CAAEwM,UAAW,KAAO,CAC/CC,WAAY,UACZD,SAAU,EACVpM,KAAM,iBAGVN,IAAKC,OAAO,CAACwM,EAAWvM,SAAU,CAAEwM,SAAU,KAAO,CACjDC,WAAY,UACZD,SAAU,EACVpM,KAAM,mBAEX,IAGC,qBAAKpB,UAAU,cAAf,SACI,sBAAKA,UAAU,YAAf,UACI,0BAASA,UAAU,eAAegC,IAAKsL,EAAvC,UACI,qBAAItN,UAAU,QAAd,4BACmB,sBAAMA,UAAU,WAAhB,wBADnB,iBAGA,sBAAKA,UAAU,OAAf,UACI,kIACA,6GACgF,oCADhF,KAC4F,sCAD5F,KAC0G,wCAD1G,aACkI,4CADlI,qCAIJ,sBAAKA,UAAU,UAAf,UACI,oBAAGA,UAAU,wBAAwB6M,KAAK,qDAAqDC,OAAO,SAASC,IAAI,sBAAnH,UACI,kDACA,qBAAK7H,IAAK+H,GAAQhI,IAAI,QAE1B,yBAAQjF,UAAU,kBAAkBiC,QAASoL,EAA7C,UACI,kDACA,qBAAKnI,IAAKyB,GAAM1B,IAAI,cAIhC,0BAASjF,UAAU,kBAAkBgC,IAAKuL,EAA1C,UACI,qBAAKvN,UAAU,UAAUkF,IAAKwI,GAAMzI,IAAI,KACxC,qBAAKjF,UAAU,aAAakF,IAAKyI,GAAS1I,IAAI,cCxDnD,OAA0B,oC,SC8C1B2I,GAhCiC,SAACpN,GAC7C,IAAQiK,EAAenM,GAAiB,SAAAmB,GAAI,OAAIA,EAAK2K,YAA7CK,WACFoD,EAAoCC,GAEpCnO,EAAWC,cAEjB,OACI,qBAAKI,UAAU,kBAAkBgC,IAAKxB,EAAMuN,UAA5C,SACI,sBAAK/N,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,4CACA,qBAAKA,UAAU,kBAAf,SACKyK,EAAW/B,KAAI,SAAA0B,GAAa,IAAD,EAClB4D,EAAI,UAAGH,EAAc3G,MAAK,SAAA+G,GAAC,OAAIA,EAAE5G,IAAM+C,EAAS/C,aAA5C,aAAG,EAA8C2G,KAE3D,OAAQ,eAAC,IAAD,CAASlG,GAAE,WAAMsC,EAASQ,MAAQ5K,UAAU,gBAAkCiC,QAAS,WAC3FtC,EAASwK,GAA0BC,IACnCzK,EAASnB,EAAuB,KAF5B,UAIJ,qBAAK0G,IAAG,UAAK9E,mBAAL,kCAAqD4N,GAAQ/I,IAAI,KACzE,+BAAOmF,EAAS8D,YAAc9D,EAAS8D,YAAc9D,EAAS/B,SALO+B,EAAS/C,SAS1F,sBAAKrH,UAAU,eAAf,UACI,qBAAKkF,IAAKoC,GAAQrC,IAAI,KACtB,wECbLkJ,GAlBM,WACjB,IAAMC,EAAc1N,iBAAuB,MAGrCf,EAAWC,cAMjB,OAJAC,qBAAU,WACNF,EAASnB,EAAuB,MACjC,IAGC,sBAAK6I,GAAG,YAAR,UACI,cAAC,GAAD,CAAOgG,cAVO,kCAAMe,EAAYpN,eAAlB,aAAM,EAAqBqN,oBAWzC,cAAC,GAAD,CAAgBN,UAAWK,Q,4BfG3B9D,K,kBAAAA,E,aAAAA,Q,cAKPC,K,oBAAAA,E,uBAAAA,Q,KAKL,IgB5BY+D,GhB8FGC,GAlEuC,SAAC/N,GACnD,MAAsCyC,mBAA4BzC,EAAMgO,YAAxE,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CzL,mBAA2BsH,GAAiBoE,OAA1F,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA8C5L,mBAAmBzC,EAAMgO,WAAWR,MAAlF,mBAAOc,EAAP,KAAwBC,EAAxB,KAEAlP,qBAAU,WACFW,EAAMwO,aAAexO,EAAMyO,iBAC3BC,IACA1O,EAAMyO,gBAAe,MAE1B,CAACzO,EAAMwO,cAEV,IAAME,EAAc,WAChB,OAAQN,GACJ,KAAKrE,GAAiBoE,MAClBD,EAAelO,EAAM2O,aACrBN,EAAmBtE,GAAiB6E,QACpCL,EAAmBvO,EAAM2O,YAAYnB,MACrC,MACJ,KAAKzD,GAAiB6E,OAClBV,EAAelO,EAAMgO,YACrBK,EAAmBtE,GAAiBoE,OACpCI,EAAmBvO,EAAMgO,WAAWR,QAiChD,OACI,sBAAKhO,UAAS,wDACIQ,EAAMR,UADV,sCAEIyO,EAAYxE,gBAAkBwE,EAAYxE,gBAAkB,IAC9DhI,QAhCC,WAAO,IAAD,EACvBoN,QAAQC,QAAR,UAAgB9O,EAAM+O,oBAAtB,aAAgB,OAAA/O,IAAwByD,MAAK,WAAO,IAAD,EAG3CuL,EAWQ,EATZ,OAJA,UAAAhP,EAAMiP,8BAAN,SAA8B5N,KAAK,IAI3B+M,GACJ,KAAKrE,GAAiBoE,MAClBa,EAAShP,EAAMgO,WAAWgB,OAC1B,MACJ,KAAKjF,GAAiB6E,OAClBI,EAAShP,EAAM2O,YAAYK,OAI/BA,EACAH,QAAQC,QAAR,UAAgBE,SAAhB,aAAgB,KAAYvL,MAAK,SAAAyL,GACzBA,IAAWpF,GAAcqF,SACzBT,OAKRA,QAMR,UAIG,sBAAMlP,UAAU,eAAhB,SAAgC8O,IAChC,sBAAM9O,UAAU,QAAhB,SAAyByO,EAAYmB,YiBjBjCC,GA9DmC,SAAC,GAAoD,IAAlD7J,EAAiD,EAAjDA,QAAShG,EAAwC,EAAxCA,UAAWyP,EAA6B,EAA7BA,uBAC/D9P,EAAWC,cAGX8H,EADkCpJ,GAAiB,SAAAmB,GAAI,OAAIA,EAAK+I,aAA9DC,cACyBvB,MAAK,SAAA4I,GAAE,OAAIA,EAAG9J,QAAQqB,KAAOrB,EAAQqB,MAChE0I,EAAWC,QAAQtI,GAGzB,EAAoBzE,mBAAkB8M,GAA/BE,EAAP,oBAcMC,EAA2D,CAE7D,CACIlC,KAAMmC,KACNP,MAAO,cACP3F,gBAAiB,cACjBuF,OAlBiB,WAGrB,OAFA7P,EAASoG,EAAqBC,EAAS,IACvCrG,EzBEyB,SAACqG,EAAkBC,GAChD,8CAAO,WAAOtG,GAAP,SAAAmE,EAAA,sDACHnE,EAASgG,KAETtF,EAASsG,KAAKC,WAAW3C,MAAK,SAAA4C,GAC1B,IAAMI,EAAeJ,EAAMK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,aAAepB,EAAQqB,MAEhEJ,EACA5G,EAASsG,KAAKW,OAAOL,EAAaI,GAAI,CAAEpB,SAAUgB,EAAahB,SAAWA,IACrEhC,MAAK,SAAAG,GACEA,EAASV,SACT/D,EAASkG,QAKrBxF,EAASsG,KAAKyJ,IAAIpK,EAAQqB,GAAIpB,GACzBhC,MAAK,SAAAG,GACEA,EAASV,SACT/D,EAASkG,WAlB1B,2CAAP,sDyBHawK,CAAkBrK,EAAS,IAC7BsE,GAAcqF,UAkBrB,CACI3B,KAAMsC,KACNV,MAAM,UACN3F,gBAAiB,UACjBuF,OAnB0B,WAG9B,OAFA7P,EAASwG,EAA0BH,EAAQqB,GAAIK,EAAcA,EAAYzB,SAAW,IACpFtG,EAAS4H,GAAuBvB,IACzBsE,GAAcqF,WAoBzB,EAA0C1M,oBAAkB,GAA5D,mBAAOsN,EAAP,KAAsBC,EAAtB,KACA,EAA0DvN,oBAAkB,GAA5E,mBAAOwN,EAAP,KAA8BC,EAA9B,KAYA,OAVA7Q,qBAAU,WACN2Q,GAAiB,KAClB,IAEH3Q,qBAAU,WACDkQ,GAAaQ,GACdG,GAAyB,KAE9B,CAACX,IAGA,cAAC,GAAD,CAAmBf,YAAayB,EACbxB,eAAgByB,EAChB1Q,UAAS,6BAAwBA,GACjCwO,WAAYyB,EAAYC,EAAiB,GAAKA,EAAiB,GAC/Df,YAAac,EAAYC,EAAiB,GAAKA,EAAiB,GAChET,uBAAwBA,M,SDpEvCnB,K,kCAAAA,E,4CAAAA,E,oCAAAA,Q,KESZ,ICfYqC,GAgBAC,GD6CGC,GA9CuC,SAAC,GAAkE,IAAhE7K,EAA+D,EAA/DA,QAAShG,EAAsD,EAAtDA,UAAWyP,EAA2C,EAA3CA,uBAAwBF,EAAmB,EAAnBA,aAE3FuB,EADiCxS,GAAiB,SAAAmB,GAAI,OAAIA,EAAKmK,YAA7DD,SACiCzC,MAAK,SAAA6J,GAAE,OAAIA,EAAG1J,KAAOrB,EAAQqB,MAChE2J,EAAehB,QAAQc,GAG7B,EAAwB7N,mBAAkB+N,GAAnCC,EAAP,oBAEMtR,EAAWC,cAYXsR,EAA2D,CAE7D,CACIlD,KAAMmD,IACNvB,MAAO,OACP3F,gBAAiB,OACjBuF,OAhBqB,WAEzB,OADA7P,EFGD,SAA6BqG,GAChC,MAAO,CACHtH,KAAM4P,GAAoB8C,gBAC1BxS,QAASoH,GENAqL,CAAoBrL,IACtBsE,GAAcqF,UAiBrB,CACI3B,KAAMsD,IACN1B,MAAO,QACP3F,gBAAiB,QACjBuF,OAlB0B,WFM/B,IAAkCpJ,EEJjC,OADAzG,GFKiCyG,EELCJ,EAAQqB,GFMvC,CACH3I,KAAM4P,GAAoBiD,qBAC1B3S,QAASwH,KEPFkE,GAAcqF,WAoBzB,OACI,cAAC,GAAD,CAAmB3P,UAAS,8BAAyBA,GAClCwO,WAAYyC,EAAgBC,EAAiB,GAAKA,EAAiB,GACnE/B,YAAa8B,EAAgBC,EAAiB,GAAKA,EAAiB,GACpEzB,uBAAwBA,EACxBF,aAAcA,KEM1BiC,GAjD2B,SAAC,GAAiB,IAAfxL,EAAc,EAAdA,QACjCqF,EAAaD,cAAbC,SACFoG,EAAU/Q,iBAAuB,MAiBvC,OACI,qBAAKV,UAAU,eAAegC,IAAKyP,EAAnC,SACI,sBAAKzR,UAAU,YAAf,UACI,eAAC,IAAD,CAAM8H,GAAE,UAAK9B,EAAQyE,WAAW,GAAGG,KAA3B,YAAmC5E,EAAQqB,IAAMrH,UAAU,qBAAnE,UACI,qBAAKA,UAAU,2BAAf,SACI,cAAC,MAAD,CAAKA,UAAU,kBACVkF,IAAKc,EAAQiC,MAAMC,OACnBjD,IAAI,GACJG,OAAQ,cAAC,cAAD,CAAYkE,MAAM,gBAEnC,qBAAKtJ,UAAU,yBAAf,SACI,sBAAMA,UAAU,gBAAhB,SAAiCgG,EAAQqC,SAE7C,qBAAKrI,UAAU,gBAAf,SAAgCgG,EAAQmC,MAAMC,2BAElD,yBAAQpI,UAAU,uBAAlB,UAEQqL,EAASqG,SAAS,YACd,cAAC,GAAD,CAAmB1R,UAAU,eAAegG,QAASA,EAClCuJ,aAxBjB,kBAAM,IAAIF,SAAQ,SAACC,EAASqC,GAV/B7Q,IAAKC,OAAO0Q,EAAQzQ,QAAS,CAChD+G,MAAO,EACP7G,QAAS,GACV,CACC6G,MAAO,EACP7G,QAAS,EACTC,SAAU,GACVC,KAAM,kBAIK6C,MAAK,kBAAMqL,EAAQ,0BACfpL,OAAM,kBAAMyN,EAAO,0CAwBd,cAAC,GAAD,CAAmB3R,UAAU,eAAegG,QAASA,IAE7D,cAAC,GAAD,CAAiBhG,UAAU,eAAegG,QAASA,aDtBhE,SAAS4L,GAAiCC,GAC7C,MAAO,CACHnT,KAAMkS,GAAmBkB,sBACzBlT,QAASiT,GAIV,SAASE,GAA6BC,GACzC,MAAO,CACHtT,KAAMkS,GAAmBqB,kBACzBrT,QAASoT,I,SA5CLrB,K,cAAAA,E,qBAAAA,E,aAAAA,Q,cAgBAC,K,8CAAAA,E,uCAAAA,Q,SERAsB,G,iBCoCGC,GAhC+B,SAAC,GAAgE,IAA9DH,EAA6D,EAA7DA,cAAeI,EAA8C,EAA9CA,kBAAmBC,EAA2B,EAA3BA,WAAYvN,EAAe,EAAfA,SACrFnF,EAAWC,cACjB,EAAsCqD,mBAA4B+O,GAAlE,mBAAOM,EAAP,KAAoBC,EAApB,KAEA1S,qBAAU,WACNF,EAASoS,GAA6BO,MACvC,CAACA,IAgBJ,OACI,sBAAKtS,UAAS,yBAAoB8E,EAAW,WAAauN,EAAa,WAAa,IAAMpQ,QAfzE,WACb6C,IAIAuN,EACAE,EAAe,6BAAKD,GAAN,IAAmBE,WAAYF,EAAYE,cAGzDJ,EAAkBE,GAClB3S,EAASoS,GAA6BO,OAK1C,UACI,sBAAMtS,UAAU,OAAhB,SAAwBsS,EAAYjK,OACpC,sBAAMrI,UAAU,OAAhB,SACKsS,EAAYE,UAAY,cAAC,IAAD,IAAsB,cAAC,IAAD,UCLhDC,GAtBiC,SAAC,GAAkB,IAAhB3N,EAAe,EAAfA,SAC/C,EAA2CxG,GAAiB,SAAAmB,GAAI,OAAIA,EAAKiT,WAAjEC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,aAE1B,EAA4C3P,mBAAmC2P,GAA/E,mBAAOC,EAAP,KAAuBT,EAAvB,KAMA,OAJAvS,qBAAU,WACNuS,EAAkBQ,KACnB,CAACA,IAGA,qBAAK5S,UAAU,kBAAf,SACK2S,EAAiBjK,KAAI,SAAAoK,GAAM,OACxB,cAAC,GAAD,CACed,cAAec,EACfV,kBAAmBA,EACnBC,WAAYrC,QAAQ6C,GAAkBC,EAAOzK,OAASwK,EAAexK,MACrEvD,SAAUA,GAJLgO,EAAOzK,YCoF5B0K,GA5F6B,SAAC,GAAuC,IAArC1K,EAAoC,EAApCA,KAAMsB,EAA8B,EAA9BA,SAAUqJ,EAAoB,EAApBA,cACrDC,EAAe3U,GAAiB,SAAAmB,GAAI,OAAIA,EAAKiT,WAC7CQ,EAAe5U,GAAiB,SAAAmB,GAAI,OAAIA,EAAKuG,WAC7CmN,EAAY7U,GAAiB,SAAAmB,GAAI,OAAIA,EAAKsJ,gBA8BhD,EAA8C9F,oBAAkB,GAAhE,mBAAOmQ,EAAP,KAAwBC,EAAxB,KAoBA,OAlBAxT,qBAAU,WACFqT,EAAa1P,QACb6P,GAAmB,GAGnBA,EAAmBrD,QAA4B,IAApBrG,EAASP,WAEzC,CAAC8J,EAAavJ,WAEjB9J,qBAAU,WACkB,IAApB8J,EAASP,OACTiK,GAAmB,GAGnBA,GAAmB,KAExB,CAAC1J,EAASP,SAGT,qCACI,yBAAQpJ,UAAU,uBAAlB,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAMA,UAAU,QAAhB,SAAyBqI,IACzB,sBAAMrI,UAAU,SAAhB,SAA0B2J,EAASP,YAEvC,cAAC,GAAD,CAAgBtE,SAAUsO,OAE9B,qBAAKpT,UAAU,yBAAf,SAEQkT,EAAa1P,SAAW2P,EAAU3P,QAC9B,qBAAKxD,UAAU,eAAf,SACI,cAAC,IAAD,CAActB,KAAK,UAAUsB,UAAU,4CAG/CkT,EAAarS,MACT,sBAAKb,UAAU,iCAAf,UACI,cAAC,KAAD,CAAkBA,UAAU,SAC5B,sBAAMA,UAAU,UAAhB,SAA2BkT,EAAarS,WAGhD8I,EAASP,OAAS,EACd,qBAAKpJ,UAAU,gBAAf,SACK2J,EAAS2J,MAxEX,SAACC,EAAmBC,GACvC,IAAKP,EAAaL,aACd,OAAO,EAGX,IAAIa,EAAMC,EAWV,OATIT,EAAaL,aAAaJ,WAC1BiB,EAAO,EACPC,GAAQ,IAGRD,GAAQ,EACRC,EAAO,GAGHT,EAAaL,aAAavK,MAC9B,KAAKsI,GAAagD,QACd,OAAOJ,EAASK,QAAUJ,EAASI,QAAUH,EAAOC,EACxD,KAAK/C,GAAakD,MACd,OAAON,EAASpL,MAAM2L,IAAMN,EAASrL,MAAM2L,IAAML,EAAOC,EAC5D,KAAK/C,GAAaoD,KACd,OAAOR,EAASlL,KAAOmL,EAASnL,KAAOoL,EAAOC,EAClD,QACI,OAAO,MAgDoChL,KAAI,SAAA1C,GAAO,OACtC,cAAC,GAAD,CAA8BA,QAASA,GAArBA,EAAQqB,SAIlC,sBAAKrH,UAAU,yCAAf,UACI,cAAC,KAAD,CAAkBA,UAAU,SAC5B,sBAAMA,UAAU,OAAhB,SAAwBgT,GAAiB,2BCvF/DgB,GAA8C,CAChD,CACI3L,KAAMsI,GAAagD,QACnBnB,WAAW,GAEf,CACInK,KAAMsI,GAAakD,MACnBrB,WAAW,IAiDJyB,GA7CU,WACrB,IAAQC,EAAqB5V,GAAiB,SAAAmB,GAAI,OAAIA,EAAK2K,YAAnD8J,iBACAvK,EAAarL,GAAiB,SAAAmB,GAAI,OAAIA,EAAKuG,WAA3C2D,SAGR,EAAgD1G,mBAAoB,IAApE,mBAAOkR,EAAP,KAAyBC,EAAzB,KAEMlL,EAAUC,cACVxJ,EAAWC,cAuBjB,OArBAC,qBAAU,WAKN,GAJAF,EAASiS,GAAiCoC,KAC1CrU,EAASoS,GAA6BiC,GAA2B,KACjErU,EAASnB,EAAuB,IAE5B0V,EAAkB,CAClB,IAAMG,EAAuB,GAG7B1K,EAAS2K,SAAQ,SAAAtO,GACbA,EAAQyE,WAAW6J,SAAQ,SAAAlK,GACnBA,EAAS/C,KAAO6M,EAAiB7M,IACjCgN,EAAU5K,KAAKzD,SAK3BoO,EAAoBC,MAEzB,CAAC1K,IAECuK,EAMD,qBAAK7M,GAAG,gBAAR,SACI,cAAC,GAAD,CAAcsC,SAAUwK,EACVnB,cAAc,mCACd3K,MAAsB,OAAhB6L,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB7L,OAAQ,QARlDa,EAAQO,KAAK,KACN,gC,SJhDHyI,K,gCAAAA,E,gDAAAA,E,6CAAAA,Q,KKJL,ICKDqC,GAA8C,CAChD,CACIlM,KAAMsI,GAAaoD,KACnBvB,WAAW,GAEf,CACInK,KAAMsI,GAAakD,MACnBrB,WAAW,IAwBJgC,GApBU,WACrB,IAAQ7K,EAAarL,GAAiB,SAAAmB,GAAI,OAAIA,EAAKmK,YAA3CD,SAEFhK,EAAWC,cAQjB,OANAC,qBAAU,WACNF,EAASiS,GAAiC2C,KAC1C5U,EAASoS,GAA6BwC,GAA2B,KACjE5U,EAASnB,EAAuB,MACjC,IAGC,qBAAK6I,GAAG,gBAAR,SACI,cAAC,GAAD,CAAcsC,SAAUA,EACVqJ,cAAc,oBACd3K,KAAK,sB,SCyGhBoM,GA1H2B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQhW,EAAW,EAAXA,KAC3CiW,EAAcjU,iBAAuB,MAK3C,EAA0CuC,mBAAuByR,EAAO,IAAxE,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAkD5R,oBAAkB,GAApE,mBAAO6R,EAAP,KAA0BC,EAA1B,KACA,EAAwD9R,oBAAkB,GAA1E,mBAAO+R,EAAP,KAA6BC,EAA7B,KAmCMC,EAAe,WACbN,EAAcO,OAAST,EAAOtL,OAAS,GAI3CyL,EAAiBH,EAAOE,EAAcO,MAAQ,KAG5CC,EAAe,WACbR,EAAcO,MAAQ,GAI1BN,EAAiBH,EAAOE,EAAcO,MAAQ,KAWlD,OARAtV,qBAAU,WA9CNkV,EAA6C,IAAxBH,EAAcO,OACnCF,EAAwBL,EAAcO,QAAUT,EAAOtL,OAAS,KA+CjE,CAACwL,IAEJ/U,qBAAU,WACNgV,EAAiBH,EAAO,MACzB,CAACA,IAGA,qBAAK1U,UAAS,uBAAkBtB,GAAhC,SAEiB,aAATA,EACI,qCACI,sBAAKsB,UAAU,WAAf,UACI,sBAAMA,UAAS,8BAAyB8U,EAAoB,WAAa,IACrE7S,QAzDT,WACV0S,EAAY3T,UAIjBoU,IAEAT,EAAY3T,QAAQqI,SAAS,CACzBgM,IAAKV,EAAY3T,QAAQ7B,UArBN,IAsBnBmW,SAAU,aA+CM,SAEI,cAAC,KAAD,CAAgBtV,UAAU,YAE9B,qBAAKA,UAAU,WAAWgC,IAAK2S,EAA/B,SACKD,EAAOhM,KAAI,SAAA6M,GAAK,OACb,sBAAuBvV,UAAS,yBArEvCkF,EAqE0EqQ,EAAMrN,OArEhE0M,EAAc1M,SAAWhD,EAqEiD,WAAa,KAC5FjD,QAAS,kBAAM4S,EAAiBU,IADpC,UAEI,sBAAMvV,UAAU,wBAChB,qBAAKkF,IAAKqQ,EAAMrN,OAAQjD,IAAI,GAAGjF,UAAU,YAHnCuV,EAAMJ,OArExB,IAACjQ,OA4ED,sBAAMlF,UAAS,iCAA4BgV,EAAuB,WAAa,IAC3E/S,QAzDN,WACb0S,EAAY3T,UAIjBkU,IAEAP,EAAY3T,QAAQqI,SAAS,CACzBgM,IAAKV,EAAY3T,QAAQ7B,UAlCN,IAmCnBmW,SAAU,aA+CM,SAEI,cAAC,KAAD,CAAgBtV,UAAU,eAGlC,qBAAKA,UAAU,0BAAf,SACI,cAAC,KAAD,CAAWkF,IAAK0P,EAAc1M,OAC1BsN,WAAY,IACZC,QAAQ,SACRC,eAAgB,EAChBC,eAAgB,SAI5B,qCACI,sBAAM3V,UAAS,8BAAyB8U,EAAoB,WAAa,IACrE7S,QAASmT,EADb,SAEI,cAAC,KAAD,CAAgBpV,UAAU,YAE9B,qBAAKA,UAAU,0BAAf,SACI,cAAC,KAAD,CAAWkF,IAAK0P,EAAc1M,OAC1BsN,WAAY,IACZC,QAAQ,SACRC,eAAgB,EAChBC,eAAgB,MAExB,sBAAM3V,UAAS,iCAA4BgV,EAAuB,WAAa,IAC3E/S,QAASiT,EADb,SAEI,cAAC,KAAD,CAAgBlV,UAAU,kBCjEvC4V,GAtD2B,SAAC,GAAiB,IAAf5P,EAAc,EAAdA,QACrC6P,EAAgC7P,EAAQ8P,OAAOpN,KAAI,SAACqN,EAAOZ,GAAR,MACnD,CAAEA,MAAOA,EAAOjN,OAAQ6N,EAAMC,QAG5BC,EAAiBtK,wBAAc,CAAEC,MAAO,wBAExC0B,EAAU5M,iBAAuB,MAWvC,OATAb,qBAAU,WACNiB,IAAKC,OAAOuM,EAAQtM,QAAS,CACzBE,QAAS,GACV,CACCA,QAAS,EACTE,KAAM,oBAEX,CAAC4E,IAGA,qBAAKhG,UAAU,eAAegC,IAAKsL,EAAnC,SACI,sBAAKtN,UAAU,WAAf,UACI,0BAASA,UAAU,eAAnB,UACI,cAAC,IAAD,CAAYkW,SAAU,IAAtB,SACI,sBAAKlW,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BgG,EAAQmC,MAAMC,wBAC3C,sBAAMpI,UAAU,sBAAhB,oCAGR,cAAC,GAAD,CAAa0U,OAAQmB,EACRnX,KAAMuX,EAAiB,aAAe,gBAEvD,0BAASjW,UAAU,gBAAnB,UACI,cAAC,IAAD,CAAYmW,SAAU,IAAtB,SACI,sBAAKnW,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BgG,EAAQmC,MAAMC,wBAC3C,sBAAMpI,UAAU,sBAAhB,oCAGR,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,QAAd,qBACA,qBAAKA,UAAU,gBAAf,SACI,sBAAMA,UAAU,OAAOoW,wBAAyB,CAACC,OAAQrQ,EAAQkI,oBAGzE,sBAAKlO,UAAU,gBAAf,UACI,cAAC,GAAD,CAAmBA,UAAU,cAAcgG,QAASA,IACpD,cAAC,GAAD,CAAiBhG,UAAU,eAAegG,QAASA,gBCoF5DsQ,GA/HmC,SAAC,GAAuB,IAArBtQ,EAAoB,EAApBA,QAAStH,EAAW,EAAXA,KACxC6X,EAAgBjY,GAAiB,SAAAmB,GAAI,OAAIA,EAAKuG,WAAxD2D,SAEF6M,EAAyB,SAACC,GAA2B,IAAD,EAEtD,OADY,UAAGF,EAAYrP,MAAK,SAAAwP,GAAC,OAAIA,EAAErP,KAAOoP,EAAKpP,aAAvC,aAAG,EAAyCoD,WAAW,GAAGG,OACrD,IAGrB,EAAkD3H,oBAAkB,GAApE,mBAAO6R,EAAP,KAA0BC,EAA1B,KACA,EAAwD9R,oBAAkB,GAA1E,mBAAO+R,EAAP,KAA6BC,EAA7B,KAKM0B,EAAUjW,iBAAuB,MAEjCkW,EAAuB,SAACC,GAAuB,IAAD,IAChD,GAAKF,EAAQ3V,QAAb,CAIA,IAAM8V,EAAgBD,IAAa,UAAAF,EAAQ3V,eAAR,eAAiB+V,cAAjB,UAA+BJ,EAAQ3V,eAAvC,aAA+B,EAAiBgW,cAAe,IAC5FC,EAAeC,MAAMJ,GAE3B/B,EAAqBkC,GAAgBH,GAAiB,GACtD7B,EAAwBgC,GAAgBH,GAAiB,OA8C7D,OAfAjX,qBAAU,WACgB,IAAD,EAAjB8W,EAAQ3V,SACR4V,EAAoB,UAACD,EAAQ3V,eAAT,aAAC,EAAiBmW,cAE3C,IAEHtX,qBAAU,WACNiB,IAAKC,OAAO4V,EAAQ3V,QAAS,CACzBE,QAAS,GACV,CACCA,QAAS,EACTE,KAAM,oBAEX,CAAC4E,IAGA,sBAAKhG,UAAS,oCAA+BtB,GAA7C,UACI,oBAAIsB,UAAU,QAAd,8BACA,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAS,8BAAyB8U,EAAoB,WAAa,IACrE7S,QAhDG,WACV0U,EAAQ3V,UAAW8T,IAIxB6B,EAAQ3V,QAAQqI,SAAS,CACrB+N,KAAM,EACN9B,SAAU,WAGdsB,EAAqB,KAqCb,SAEI,cAAC,KAAD,CAAgB5W,UAAU,YAE9B,qBAAKA,UAAU,mBAAmBgC,IAAK2U,EAAvC,SACK3Q,EAAQqR,iBAAiB3O,KAAI,SAAC+N,EAAMtB,GAAP,OAC1B,eAAC,IAAD,CAAMrN,GAAE,WAAM0O,EAAuBC,GAA7B,YAAsCA,EAAKpP,IAAkBrH,UAAU,kBAA/E,UACI,qBAAKA,UAAU,YAAf,SAEiB,SAATtB,EACI,qCACI,sBAAKsB,UAAU,eAAf,UACI,sBAAMA,UAAU,eAAhB,SAAgCyW,EAAKpO,OACrC,sBAAMrI,UAAU,gBAAhB,SAAiCyW,EAAKtO,MAAMC,2BAEhD,qBAAKpI,UAAU,gBAAf,SACI,qBAAKA,UAAU,2BAAf,SACI,cAAC,MAAD,CAAKA,UAAU,kBACXkF,IAAKuR,EAAKxO,MAAMC,OAChBjD,IAAI,GACJG,OAAQ,cAAC,cAAD,CAAYkE,MAAM,qBAK1C,qCACI,qBAAKtJ,UAAU,2BAAf,SACI,cAAC,MAAD,CAAKA,UAAU,kBACXkF,IAAKuR,EAAKxO,MAAMC,OAChBjD,IAAI,GACJG,OAAQ,cAAC,cAAD,CAAYkE,MAAM,gBAElC,sBAAMtJ,UAAU,eAAhB,SAAgCyW,EAAKpO,OACrC,sBAAMrI,UAAU,gBAAhB,SAAiCyW,EAAKtO,MAAMC,6BAI5D,sBAAMpI,UAAU,0BA/B0CmV,QAmCtE,sBAAMnV,UAAS,2BAAsB8U,EAAoB,SAAW,MACpE,sBAAM9U,UAAS,4BAAuBgV,EAAuB,SAAW,MACxE,sBAAMhV,UAAS,iCAA4BgV,EAAuB,WAAa,IAC3E/S,QA9EM,WAClB,GAAK0U,EAAQ3V,UAAWgU,EAAxB,CAIA,IAAIsC,EAAUX,EAAQ3V,QAAQmW,WAjCZ,IAmClBR,EAAQ3V,QAAQqI,SAAS,CACrB+N,KAAME,EACNhC,SAAU,WAGdsB,EAAqBU,KAiEb,SAEI,cAAC,KAAD,CAAgBtX,UAAU,mBCnE/BuX,GAlDS,WACpB,IAAQlM,EAAaD,cAAbC,SACFmM,EAASC,cACT9X,EAAWC,cAEX8L,EAAiBC,wBAAc,CAAEC,MAAO,uBAE9C,EAAqCtN,GAAiB,SAAAmB,GAAI,OAAIA,EAAKuG,WAA3D2D,EAAR,EAAQA,SAAUnG,EAAlB,EAAkBA,QAAS3C,EAA3B,EAA2BA,MACnBqT,EAAqB5V,GAAiB,SAAAmB,GAAI,OAAIA,EAAK2K,YAAnD8J,iBAER,EAA8CjR,qBAA9C,mBAAOyU,EAAP,KAAwBC,EAAxB,KAUA,OARA9X,qBAAU,WACN8X,EAAmBhO,EAASzC,MAAK,SAAAlB,GAAO,OAAIA,EAAQqB,KAAOmQ,EAAOnQ,SACnE,CAACsC,EAAU0B,IAEdxL,qBAAU,WACNF,EAASnB,EAAuB,MACjC,IAGC,qBAAK6I,GAAG,eAAR,SAEQ7D,EACI,qBAAKxD,UAAU,eAAf,SACI,cAAC,IAAD,CAActB,KAAK,UAAUsB,UAAU,2CAE7C0X,EACE,sBAAK1X,UAAU,UAAf,UACI,yBAAQA,UAAU,sBAAlB,UACI,cAAC,IAAD,CAASA,UAAU,gBAAgB8H,GAAE,kBAAMoM,QAAN,IAAMA,OAAN,EAAMA,EAAkBtJ,MAA7D,UACqB,OAAhBsJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB7L,OAAQ,KAE/B,cAAC,KAAD,CAAgBrI,UAAU,cAC1B,sBAAMA,UAAU,eAAhB,SAAgC0X,EAAgBrP,UAEpD,cAAC,GAAD,CAAarC,QAAS0R,IACtB,cAAC,GAAD,CAAiB1R,QAAS0R,EACThZ,KAAMgN,EAAiB,OAAS,gBAGrD,sBAAK1L,UAAU,gCAAf,UACI,cAAC,KAAD,CAAkBA,UAAU,SAC5B,sBAAMA,UAAU,UAAhB,SAA2Ba,GAAS,qEChB7C+W,GAnC2B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACjCxM,EAAaD,cAAbC,SASR,EAAwCpI,mBAAiBoI,GAAzD,mBAAOyM,EAAP,KAAqBC,EAArB,KAsBA,OAjBAlY,qBAAU,WAAO,IAAD,EACiC,EAIxC,EAJDgY,GAH0BxM,EAASqG,SAAS,SAAWoG,EAAapG,SAAS,QAK7E,UAAA1S,SAASgZ,cAAc,eAAvB,SAAgCC,aAAa,QAAS,4BAItD,UAAAjZ,SAASgZ,cAAc,eAAvB,SAAgCC,aAAa,QAAS,0BAlB1DnY,OAAOuJ,SAAS,CACZgM,IAAK,EACLC,SAAU,SAqBd,UAAAtW,SAASgZ,cAAc,eAAvB,SAAgChO,gBAAgB,SAEhD+N,EAAgB1M,KACjB,CAACA,IAEG,M,SCnBI6M,GAf6B,SAAC,GAAqC,IAAnCtI,EAAkC,EAAlCA,MAAO5P,EAA2B,EAA3BA,UAAWmY,EAAgB,EAAhBA,SAC7D,OACI,sBAAKnY,UAAS,wBAAmBA,GAAjC,UAEQ4P,EACA,sBAAM5P,UAAU,uBAAhB,SAAwC4P,IAExC,6BAGJ,qBAAK5P,UAAU,sBAAf,SAAsCmY,QCUnCC,GApByC,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,QAASjG,EAAwC,EAAxCA,kBAAmBS,EAAqB,EAArBA,eACnF,OACI,qBAAK7S,UAAU,iBAAf,SAEQqY,EAAQjP,OAAS,EACjBiP,EAAQ3P,KAAI,SAAAoK,GAAM,OACd,uBAAM9S,UAAS,yBAAiC,OAAd6S,QAAc,IAAdA,OAAA,EAAAA,EAAgBxL,MAAOyL,EAAOzL,GAAK,WAAa,IAC5EpF,QAAS,kBAAMmQ,EAAkBU,IADvC,UAGI,sBAAM9S,UAAU,KAAKsY,QAAM,EAA3B,SAA6BxF,EAAOzL,KACpC,sBAAMrH,UAAU,QAAhB,SAAyB8S,EAAOrR,UAFzBqR,EAAOzL,OAMtB,sBAAMrH,UAAU,cAAhB,0BCyFDuY,GA1F2B,SAAC,GAAiE,IAQ7EvW,EARcV,EAA8D,EAA9DA,MAAO+W,EAAuD,EAAvDA,QAAStW,EAA8C,EAA9CA,YAAayW,EAAiC,EAAjCA,iBAAkB9W,EAAe,EAAfA,SACxF,EAA4CuB,mBAAyBoV,GAArE,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA4CzV,mBAAmCoV,EAAQnR,MAAK,SAAAyR,GAAE,OAAIA,EAAGtR,KAAOmR,MAA5G,mBAAO3F,EAAP,KAAuBT,EAAvB,KACA,EAAoCnP,oBAAkB,GAAtD,mBAAOgI,EAAP,KAAmBC,EAAnB,KACA,EAAsCjI,mBAAiB,IAAvD,mBAAO2V,EAAP,KAAoBC,EAApB,KAEMC,EAAapY,iBAAuB,MA8C1C,OA5C2BsB,EAkBT8W,EAjBdjZ,qBAAU,WAEN,SAASkZ,EAAmBpX,GACpBK,EAAIhB,UAAYgB,EAAIhB,QAAQgY,SAASrX,EAAMmL,SAC3C5B,GAAc,GAMtB,OADAlM,SAASe,iBAAiB,QAASgZ,GAC5B,WAEH/Z,SAASia,oBAAoB,QAASF,MAE3C,CAAC/W,IAKRnC,qBAAU,WACN6Y,EAAkBL,KACnB,CAACA,IAEJxY,qBAAU,WACNqL,GAAc,GAEN,OAARxJ,QAAQ,IAARA,KAAUG,KAAK,KAAM,CAAEiR,OAAQD,MAChC,CAACA,IAEJhT,qBAAU,WACN,IAAMqZ,EAAkBb,EAAQc,QAAO,SAAAR,GAAE,OACrCA,EAAGlX,MAAM2X,iBAAiBC,cAAc3H,SAASkH,EAAYS,kBAGjEX,EAAkBQ,KACnB,CAACN,IAEJ/Y,qBAAU,WACFoL,GACA4N,EAAe,MAEpB,CAAC5N,IAGA,sBAAKjL,UAAS,uBAAkBiL,EAAa,WAAa,IACrDjJ,IAAK8W,EADV,UAEI,sBAAK9Y,UAAU,kBAAf,UAEQsB,EACI,sBAAMtB,UAAU,QAAhB,SAAyBsB,IAC3B,6BAEN,sBAAKtB,UAAU,uBACViC,QAAS,kBAAMiJ,GAAeD,IADnC,UAEI,sBAAMjL,UAAU,iBAAhB,SAEQ6S,EACI,sBAAM7S,UAAU,QAAhB,SAAyB6S,EAAepR,QAExC,sBAAMzB,UAAU,cAAhB,SAA+B+B,GAAe,wBAG1D,cAAC,KAAD,CAAqB/B,UAAU,sBAGvC,qBAAKA,UAAU,qBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,uBAAOA,UAAU,eACVtB,KAAK,OACLqD,YAAY,SACZN,MAAOmX,EACPlX,SAAU,SAAC4D,GAAD,OAAOuT,EAAevT,EAAEC,cAAc9D,UACvD,cAAC,GAAD,CAAoB4W,QAASI,EACT5F,eAAgBA,EAChBT,kBAAmBA,aC9D5CkH,GAjCuC,SAAC,GAAoD,IAAlDjB,EAAiD,EAAjDA,QAASxF,EAAwC,EAAxCA,eAAgBT,EAAwB,EAAxBA,kBAC9E,OACI,qBAAKpS,UAAU,gBAAf,SAEQqY,EAAQ3P,KAAI,SAAAoK,GAAM,OACd,sBACK9S,UAAS,wBAAgC,OAAd6S,QAAc,IAAdA,OAAA,EAAAA,EAAgBxL,MAAOyL,EAAOzL,GAAK,WAAa,IAC3EpF,QAAS,kBAAMmQ,EAAkBU,IAFtC,UAGI,qBAAK9S,UAAU,wBAAf,SACI,qBAAKA,UAAU,mBAEnB,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,aAAhB,SAA8B8S,EAAOlD,QACnCkD,EAAOyG,SAAW,sBAAMvZ,UAAU,YAAhB,SAA6B8S,EAAOyG,WAAmB,gCAE/E,qBAAKvZ,UAAU,aAAf,SAEQ8S,EAAO9E,KACH,sBAAMhO,UAAU,OAAhB,SACKwZ,IAAMC,cAAc3G,EAAO9E,QAElC,oCAjBR8E,EAAOzL,UCgCtBqS,GAvByB,SAAC,GAAoD,IAAlDpY,EAAiD,EAAjDA,MAAO+W,EAA0C,EAA1CA,QAAS3W,EAAiC,EAAjCA,SAAU8W,EAAuB,EAAvBA,iBACjE,EAA4CvV,mBACxCoV,EAAQnR,MAAK,SAAAyR,GAAE,OAAIA,EAAGtR,KAAOmR,MADjC,mBAAO3F,EAAP,KAAuBT,EAAvB,KAQA,OAJAvS,qBAAU,WACE,OAAR6B,QAAQ,IAARA,KAAUG,KAAK,KAAM,CAAEiR,OAAQD,MAChC,CAACA,IAGA,sBAAK7S,UAAU,cAAf,UAEQsB,EACI,sBAAMtB,UAAU,QAAhB,SAAyBsB,IAC3B,6BAEN,cAAC,GAAD,CAAmB+W,QAASA,EACTxF,eAAgBA,EAChBT,kBAAmBA,Q,kBCiDnCuH,I,OA1EmC,SAAC,GAAkB,IAAhBjY,EAAe,EAAfA,SACjD,EAA4BuB,mBAA0B,IAAtD,mBAAO2W,EAAP,KAAeC,EAAf,KACA,EAAwB5W,mBAAiB,IAAzC,mBAAOoF,EAAP,KAAayR,EAAb,KACA,EAA4B7W,mBAA0B,IAAtD,mBAAO8W,EAAP,KAAeC,EAAf,KACA,EAAsB/W,mBAA0B,IAAhD,mBAAOgX,EAAP,KAAYC,EAAZ,KACA,EAA0BjX,qBAA1B,mBAAOd,EAAP,KAAcgY,EAAd,KAEMC,EAAsB,SAACzY,GACzBwY,EAASxY,EAAMmL,OAAOzE,OAO1B,OAJAxI,qBAAU,WACE,OAAR6B,QAAQ,IAARA,KAAUG,KAAK,KAAM,CAAE+X,SAAQvR,OAAM0R,SAAQE,UAC9C,CAACL,EAAQvR,EAAM0R,EAAQE,IAGtB,sBAAKja,UAAU,oBAAf,UACI,cAAC,KAAD,CAAOia,IAAKA,EACRF,OAAQA,EACR1R,KAAMA,EACNuR,OAAQA,EACRS,QAASlY,IACb,uBAAMkG,KAAK,mBAAX,UACI,sBAAKrI,UAAU,cAAf,UACI,uBAAOsa,QAAQ,SAAf,yBACA,uBAAO5b,KAAK,MACL2J,KAAK,SACLtG,YAAY,sBACZwY,QAAQ,iBACRC,UAAW,GACXC,UAAQ,EACRhZ,MAAOmY,EACPc,QAASN,EACT1Y,SAAU,SAAC4D,GAAD,OAAOuU,EAAUvU,EAAEwH,OAAOrL,aAE/C,sBAAKzB,UAAU,cAAf,UACI,uBAAOsa,QAAQ,OAAf,wBACA,uBAAO5b,KAAK,OACL2J,KAAK,OACLtG,YAAY,aACZ0Y,UAAQ,EACRhZ,MAAO4G,EACPqS,QAASN,EACT1Y,SAAU,SAAC4D,GAAD,OAAOwU,EAAQxU,EAAEwH,OAAOrL,aAE7C,sBAAKzB,UAAU,cAAf,UACI,uBAAOsa,QAAQ,UAAf,qBACA,uBAAO5b,KAAK,OACL2J,KAAK,SACLkS,QAAQ,gBACRxY,YAAY,UACZ0Y,UAAQ,EACRD,UAAW,EACX/Y,MAAOsY,EACPW,QAASN,EACT1Y,SAAU,SAAC4D,GAAD,OAAO0U,EAAU1U,EAAEwH,OAAOrL,aAE/C,sBAAKzB,UAAU,cAAf,UACI,uBAAOsa,QAAQ,MAAf,uBACA,uBAAO5b,KAAK,OACL2J,KAAK,MACLtG,YAAY,MACZwY,QAAQ,WACRE,UAAQ,EACRD,UAAW,EACX/Y,MAAOwY,EACPS,QAASN,EACT1Y,SAAU,SAAC4D,GAAD,OAAO4U,EAAO5U,EAAEwH,OAAOrL,qBCpF7C,OAA0B,sCCA1B,OAA0B,iCC0BnCkZ,GAA2B,CAC7BpY,SAAU,CAAEsC,UAAW,GAAI+V,SAAU,GAAItX,MAAO,IAChDuX,QAAS,CAAExT,GAAI,GAAIgB,KAAM,IACzByS,QAAS,GACTC,QAAS,GACTC,KAAM,CAAEpB,OAAQ,GAAIqB,WAAY,GAAIhB,IAAK,GAAIF,OAAQ,KAyW1CmB,GAtWU,WACrB,MAAmE5c,GAAiB,SAAAmB,GAAI,OAAIA,EAAK+I,aAA1ED,EAAvB,EAAQE,cAA6BG,EAArC,EAAqCA,WAAYC,EAAjD,EAAiDA,cAChCsS,EAAiB7c,GAAiB,SAAAmB,GAAI,OAAIA,EAAK+D,WAAxDA,QAEF0F,EAAUC,cACVxJ,EAAWC,cAEjB,EAAoDqD,qBAApD,mBAAOmY,EAAP,KAA2BC,EAA3B,KACA,EAAsCpY,oBAAkB,GAAxD,mBAAOqY,EAAP,KAAoBC,EAApB,KAEA,EAA4CtY,oBAAkB,GAA9D,mBAAOuY,EAAP,KAAuBC,EAAvB,KACA,EAAwCxY,mBAAwB,MAAhE,mBAAOyY,EAAP,KAAqBC,EAArB,KAEA9b,qBAAU,WACN,IAAI+b,GAAU,EA0Bd,OAxBA,WACI,IAAIC,EACAC,EAAiC,GAErCzb,EAAS0b,SAASC,sBAAsB/X,MAAK,SAAAG,GACzCyX,EAAkBzX,EAAS6X,aAC5BhY,MAAK,WACJ,GAAI2X,EAAS,CAGT,IAFA,IAAIxS,EAAS8S,OAAOC,OAAON,GAAiBzS,OAEnCgT,EAAI,EAAGA,EAAIhT,EAAQgT,IAAK,CAC7B,IAAM/U,EAAK6U,OAAOG,KAAKR,GAAiBO,GAClC3a,EAAQya,OAAOC,OAAON,GAAiBO,GAE7CN,EAAerS,KAAK,CAAEpC,KAAI5F,UAG9B4Z,EAAsBS,OAKlCQ,GAEO,WACHV,GAAU,KAEf,IAEH,MAA8B3Y,mBAAkB0X,IAAhD,mBAAO4B,EAAP,KAAgBC,EAAhB,KAgFMC,EAAY,kBAAMlB,GAAe,IAEjCmB,EAAS,kBAAMxT,EAAQO,KAAK,MAS5BkT,EAAgBhR,wBAAc,CAAEC,MAAO,uBAO7C,OAJ4B,IAAxBrD,EAAaa,QACbsT,IAIA,sBAAKrV,GAAG,gBAAR,UACI,yBAAQrH,UAAU,wBAAlB,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,SACI,qBAAKA,UAAU,UAAUkF,IAAKqG,EAAStG,IAAI,GACtChD,QAAS,kBAAMiH,EAAQO,KAAK,UAErC,yBAAQzJ,UAAU,iEACViC,QAAS,kBAAMiH,EAAQ0T,UAD/B,UAEI,cAAC,KAAD,CAAiB5c,UAAU,SAC3B,sBAAMA,UAAU,OAAhB,0BAGR,oBAAIA,UAAU,iBAAd,yBAGAuI,EAAaa,OAAS,EAClB+R,EACI,qBAAKnb,UAAU,eAAf,SACI,cAAC,IAAD,CAActB,KAAK,UAAUsB,UAAU,uCAG3C,qCACI,sBAAKA,UAAU,sBAAf,UACI,cAAC,GAAD,CAAc4P,MAAM,yBAAyB5P,UAAU,OAAvD,SAEQ2c,EACI,sBAAK3c,UAAU,qBAAf,UACI,qBAAKA,UAAU,YAAf,SACKuI,EAAaG,KAAI,SAAAoH,GAAE,OAChB,sBAAyB9P,UAAU,iBAAnC,UACI,qBAAKA,UAAU,mBAAf,SACI,cAAC,MAAD,CAAKA,UAAU,UACXkF,IAAK4K,EAAG9J,QAAQiC,MAAMC,OACtBjD,IAAI,GACJG,OAAQ,cAAC,cAAD,CAAYkE,MAAM,gBAElC,sBAAKtJ,UAAU,OAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwB8P,EAAG9J,QAAQqC,OACnC,sBAAKrI,UAAU,iBAAf,UACI,sBAAMA,UAAU,QAAhB,wBACA,sBAAMA,UAAU,WAAhB,SAA4B8P,EAAG7J,cAEnC,uBAAMjG,UAAU,QAAhB,cAA0B8P,EAAG3H,cAb3B2H,EAAG9J,QAAQqB,SAkB7B,sBAAKrH,UAAU,eAAf,UACI,sBAAMA,UAAU,cAAhB,mBACA,sBAAKA,UAAU,iBAAf,UACI,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4B6I,OAEhC,uBAAM7I,UAAU,QAAhB,cAA0B4I,WAIlC,wBAAO5I,UAAU,sBAAjB,UACI,gCACI,qBAAIA,UAAU,mBAAd,UACI,oBAAI6c,QAAS,EAAG7c,UAAU,eAA1B,qBACA,oBAAIA,UAAU,gBAAd,sBACA,oBAAIA,UAAU,aAAd,mBACA,oBAAIA,UAAU,aAAa6c,QAAS,SAG5C,kCACKtU,EAAaG,KAAI,SAAAoH,GAAE,OAChB,qBAAwB9P,UAAU,cAAlC,UACI,oBAAIA,UAAU,eACd,oBAAIA,UAAU,eAAd,SACI,cAAC,MAAD,CAAKA,UAAU,UACXkF,IAAK4K,EAAG9J,QAAQiC,MAAMC,OACtBjD,IAAI,GACJG,OAAQ,cAAC,cAAD,CAAYkE,MAAM,gBAElC,oBAAItJ,UAAU,YAAd,SAA2B8P,EAAG9J,QAAQqC,OACtC,oBAAIrI,UAAU,gBAAd,SAA+B8P,EAAG7J,WAClC,qBAAIjG,UAAU,aAAd,cAA6B8P,EAAG3H,SAChC,oBAAInI,UAAU,YAAd,SAA0B,cAAC,IAAD,CAAQA,UAAU,gBAC5C,oBAAIA,UAAU,iBAZT8P,EAAG9J,QAAQqB,OAexB,qBAAIrH,UAAU,UAAd,UACI,oBAAIA,UAAU,aAAa6c,QAAS,IACpC,oBAAI7c,UAAU,aAAd,mBACA,oBAAIA,UAAU,gBAAd,SAA+B6I,IAC/B,qBAAI7I,UAAU,aAAd,cAA6B4I,KAC7B,oBAAI5I,UAAU,aAAa6c,QAAS,eAM5D,eAAC,GAAD,CAAcjN,MAAM,4BAA4B5P,UAAU,UAA1D,UACI,qBAAKA,UAAU,eAAf,SACI,uBAAMqI,KAAK,oBAAX,UACI,qBAAKrI,UAAU,cAAf,SACI,cAAC,EAAD,CACIsB,MAAM,gBACNM,cAtM1B,SAACD,GACnB6a,EAAW,6BAAKD,GAAN,IAAeha,SAAS,6BAAMga,EAAQha,UAAf,IAAyBe,MAAO3B,EAAM4D,cAAc9D,YAsMzCM,YAAY,sBACZrD,KAAK,YAEb,qBAAKsB,UAAU,cAAf,SACI,cAAC,GAAD,CAAYsB,MAAM,iBAAiB+W,QAAS,CACxC,CAAEhR,GAAI,eAAgBuI,MAAO,cAAe2J,SAAU,iBAAkBvL,KAAM8O,OAC/EtE,iBAAkB,eAAgB9W,SArLzD,SAACC,GAA4B,IAAD,EAChD6a,EAAW,6BAAKD,GAAN,IAAexB,QAAO,UAAEpZ,EAAMmR,cAAR,aAAE,EAAczL,WAsLZ,qBAAKrH,UAAU,cAAf,SACI,cAAC,GAAD,CAAasB,MAAM,kBACf+W,QAAS+C,GAA0C,GACnD1Z,SA9MxB,SAACC,GAA6B,IAAD,IACjD6a,EAAW,6BAAKD,GAAN,IAAe1B,QAAS,CAAExT,GAAE,UAAE1F,EAAMmR,cAAR,aAAE,EAAczL,GAAcgB,KAAI,UAAE1G,EAAMmR,cAAR,aAAE,EAAcrR,eA+MpD,qBAAKzB,UAAU,cAAf,SACI,cAAC,EAAD,CACIsB,MAAM,gBACNM,cA/MxB,SAACD,GACrB6a,EAAW,6BAAKD,GAAN,IAAezB,QAASnZ,EAAM4D,cAAc9D,UA+MVM,YAAY,QACZrD,KAAK,gBAIrB,qBAAKsB,UAAU,mBAAf,SACI,cAAC,GAAD,CAAiB0B,SAlNhC,SAACC,GAClB6a,EAAW,6BAAKD,GAAN,IAAevB,KAAM,CAC3BpB,OAAQjY,EAAMiY,OAAOmD,WACrB9B,WAAYtZ,EAAM0G,KAClB0R,OAAQpY,EAAMoY,OAAOgD,WACrB9C,IAAKtY,EAAMsY,IAAI8C,YAChBxa,SAAS,6BAAKga,EAAQha,UAAd,IACPsC,UAAWlD,EAAM0G,KAAK2U,MAAM,KAAK,GACjCpC,SAAUjZ,EAAM0G,KAAK2U,MAAM,KAAK,gBA6MZ,eAAC,GAAD,CAAchd,UAAU,eAAxB,UACI,sBAAKA,UAAU,cAAf,UACI,sBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,QAAhB,UACI,uBAAMA,UAAU,QAAhB,cAA0B4I,KAC1B,sBAAM5I,UAAU,YAAhB,uBAGR,sBAAKA,UAAU,gBAAf,UACI,yBAAQA,UAAU,mDACViC,QAlKhB,WACxBwa,IA9CmB,WACnBhB,GAAkB,GAElB,IAAMT,EAAY,CACdpB,OAAQ2C,EAAQvB,KAAKpB,OACrBK,IAAKsC,EAAQvB,KAAKf,IAClBgD,aAAcV,EAAQvB,KAAKjB,OAAOmD,OAAO,EAAG,GAC5CC,YAAaZ,EAAQvB,KAAKjB,OAAOmD,OAAO,EAAG,GAC3CE,gBAAiBb,EAAQzB,SAGvBuC,EAAgC,CAClCC,WAAY,GACZ/a,SAAU,CACNsC,UAAW0X,EAAQha,SAASsC,UAC5B+V,SAAU2B,EAAQha,SAASqY,SAC3BtX,MAAOiZ,EAAQha,SAASe,OAE5BiZ,QAAS,CACLlU,KAAMkU,EAAQvB,KAAKC,WACnBmC,gBAAiBb,EAAQzB,QACzBD,QAAS0B,EAAQ1B,QAAQxT,IAE7BkW,QAAS,CACLxC,QAAS,eACTC,KAAMA,IAIRwC,EAAiBnd,EAASsG,KAAKU,MAAQ,GAE7ChH,EAASod,SAASC,cAAcF,EAAQ,CAAE9e,KAAM,SAAUuF,MAAK,SAAA0Z,GAC3Dtd,EAASod,SAASG,QAAQD,EAAMtW,GAAIgW,GACfnZ,OAAM,SAAAE,GACHqX,GAAkB,GAClBE,EAAgBvX,EAASC,KAAKxD,MAAMgd,YACrC5Z,MAAK,WACJwX,GAAkB,SAE3CvX,OAAM,SAAAE,GACLqX,GAAkB,GAClBE,EAAgBvX,EAASC,KAAKxD,MAAMgd,YAMxCC,IA+JgC,UAEI,cAAC,IAAD,IACA,sDAEJ,sBAAM9d,UAAU,aAAhB,sFAMZ,wBAAQA,UAAU,wBAAlB,SACI,oBAAGA,UAAU,kBAAkB6M,KAAK,0BAA0BC,OAAO,SAArE,UACI,qBAAK9M,UAAU,OAAOkF,IAAK6Y,GAAU9Y,IAAI,KACzC,uBAAMjF,UAAU,OAAhB,wBAAkC,sBAAMA,UAAU,OAAhB,6BAKlD,sBAAKA,UAAU,oCAAf,UACI,cAAC,IAAD,CAAQA,UAAU,SAClB,uBAAMA,UAAU,OAAhB,UACI,6DACA,8BACI,sBAAMA,UAAU,OAAOiC,QAAS,kBAAMiH,EAAQ0T,UAA9C,6BACA,2DAMpB,cAAC,IAAD,CAAO5c,UAAU,iBAAiB+E,OAAQuW,EAA1C,SAEQE,EACI,sBAAKxb,UAAU,yBAAf,UACI,oBAAIA,UAAU,cAAd,wBACA,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAActB,KAAK,OAAOsB,UAAU,yBAIhD0b,EACI,sBAAK1b,UAAU,wBAAf,UACI,oBAAIA,UAAU,kBAAd,8BACA,sBAAKA,UAAU,aAAf,UACI,sBAAMA,UAAU,aAAhB,SAA8B0b,IAC9B,sBAAM1b,UAAU,eAAhB,sDAEJ,qBAAKA,UAAU,gBAAf,SACI,wBAAQA,UAAU,oCAAoCiC,QA5M/D,kBAAMsZ,GAAe,IA4MZ,4BAIR,sBAAKvb,UAAU,0BAAf,UACI,oBAAIA,UAAU,oBAAd,gCACA,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,YAAf,UACI,uBAAMA,UAAU,OAAhB,UACI,gEACA,iFAEJ,sBAAMA,UAAU,iBAAhB,iCAEJ,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,eAAeiF,IAAI,GAAGC,IAAK8Y,UAGlD,qBAAKhe,UAAU,gBAAf,SACI,wBAAQA,UAAU,sCAAsCiC,QA5NpD,WAC5BtC,EAAS2G,KACTqV,EAAgB,MAChBF,GAAkB,GAClBiB,KAwNwB,8BC/XjB,OAA0B,0CCA1B,OAA0B,uCCA1B,OAA0B,yCCwF1BuB,GAtES,WACpB,IAAMzG,EAASC,cACT9X,EAAWC,cACXsJ,EAAUC,cAEhB,EAA4B7K,GAAiB,SAAAmB,GAAI,OAAIA,EAAK8C,YAAlD4B,EAAR,EAAQA,MAAO5B,EAAf,EAAeA,SACf,EAAoCU,oBAAkB,GAAtD,mBAAOib,EAAP,KAAmBC,EAAnB,KASA,OALAte,qBAAU,W3DxBe,IAAC8d,E2DyBtBhe,G3DzBsBge,E2DyBCnG,EAAOmG,M3DxBlC,uCAAO,WAAOhe,GAAP,SAAAmE,EAAA,yDACE6Z,EADF,uBAECjb,EAAyB,6BAF1B,6BAMH/C,EAASyC,MAEL/B,EAASkC,SAASwB,aARnB,uBASCpE,EAAS+C,EAAyB,8BATnC,0BAaHrC,EAASkC,SAAS6b,SAAST,GACV1Z,MAAK,SAAAG,GACF/D,EAASkC,SAASyB,QACDC,MAAK,SAAA1B,GAAQ,OAAI5C,EAAS2C,EAA2BC,EAAU6B,EAAS5B,SACxE0B,OAAM,kBAAMvE,EAAS+C,EAAyB,gCAClEwB,OAAM,kBAAMvE,EAAS+C,EAAyB,iCAlB5D,2CAAP,wD2DyBIyb,GAAc,KACf,IAGC,qBAAK9W,GAAG,wBAAR,SAEQlD,EAAMX,UAAY0a,EACd,qBAAKle,UAAU,eAAf,SACI,cAAC,IAAD,CAActB,KAAK,UAAUsB,UAAU,sBAEzCuC,EACE,qBAAKvC,UAAU,cAAf,SACI,sBAAKA,UAAU,YAAf,UACI,0BAASA,UAAU,eAAnB,UACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAOkF,IAAKmZ,GAAcpZ,IAAI,KAC7C,oBAAIjF,UAAU,OAAd,iCAEJ,sBAAKA,UAAU,OAAf,UACI,0KACA,4BAAG,4DAEP,sBAAKA,UAAU,UAAf,UACI,yBAAQA,UAAU,4BAAlB,UACI,gDACA,cAAC,IAAD,OAEJ,yBAAQA,UAAU,kBAAkBiC,QA/BzD,kBAAMiH,EAAQO,KAAK,MA+BE,UACI,qDACA,cAAC,IAAD,aAIZ,0BAASzJ,UAAU,kBAAnB,UACI,qBAAKA,UAAU,UAAUkF,IAAKoZ,GAAerZ,IAAI,KACjD,qBAAKjF,UAAU,aAAakF,IAAKqZ,GAAYtZ,IAAI,aAK7D,sBAAKjF,UAAU,aAAf,UACI,cAAC,KAAD,CAAkBA,UAAU,SAC5B,sBAAMA,UAAU,OAAhB,SACI,4BAEQmE,EAAMtD,MACFsD,EAAMtD,MAEN,qC,SC1D5C2d,IAAMC,cAAc,SAEpB,IA+CeC,GA/CC,WACZ,IAAQxK,EAAqB5V,GAAiB,SAAAmB,GAAI,OAAIA,EAAK2K,YAAnD8J,iBACApN,EAAcxI,GAAiB,SAAAmB,GAAI,OAAIA,EAAKsJ,gBAA5CjC,UACA6C,EAAarL,GAAiB,SAAAmB,GAAI,OAAIA,EAAKuG,WAA3C2D,SAEFhK,EAAWC,cAEjBC,qBAAU,WACNF,ECzBJ,uCAAO,WAAOA,GAAP,eAAAmE,EAAA,sEAECnE,EtDmCD,CAAEjB,KAAM8H,GAAoBmY,mBsDrC5B,SAIwBte,EAASoK,WAAWmU,OAJ5C,OAIOxa,EAJP,OAMCzE,GtDkCiC8K,EsDlCKrG,EAASC,KtDmChD,CAAE3F,KAAM8H,GAAoBqY,yBAA0BjgB,QAAS6L,KsDzC/D,gDASC9K,GtDmC+BkB,EsDnCK,EAAD,GtDoCpC,CAAEnC,KAAM8H,GAAoBsY,uBAAwBlgB,QAASiC,KsD7C7D,kCtD4CJ,IAAoCA,EAJE4J,IsDxClC,oBAAP,uDD0BI9K,EpB1BJ,uCAAO,WAAOA,GAAP,eAAAmE,EAAA,sEAECnE,ELyBD,CAAEjB,KAAMwT,GAAmB6M,iBK3B3B,SAIwB1e,EAASsJ,SAASiV,OAJ1C,OAIOxa,EAJP,OAMCzE,GLwB+BgK,EKxBKvF,EAASC,KLyB9C,CAAE3F,KAAMwT,GAAmB8M,uBAAwBpgB,QAAS+K,KK/B5D,gDASChK,GLyB6BkB,EKzBK,KAAMgd,QL0BzC,CAAEnf,KAAMwT,GAAmB+M,qBAAsBrgB,QAASiC,KKnC1D,kCLkCJ,IAAkCA,EAJE8I,IK9BhC,oBAAP,uDoB2BIhK,EAAS8G,QACV,IAEH5G,qBAAU,WACNF,EtD2D2B,SAACuf,EAA8BpY,GAC9D,8CAAO,WAAOnH,GAAP,eAAAmE,EAAA,sDACCqb,EAAgC,GAEpCrY,EAAUwN,SAAQ,SAAAnN,GACd,IAAMnB,EAAUkZ,EAAkBhY,MAAK,SAAAwP,GAAC,OAAIA,EAAErP,KAAOF,EAAKC,cAC1D,GAAIpB,EAAS,CACT,IAAMoZ,EAA6B,CAC/BpZ,QAASA,EACTC,SAAUkB,EAAKlB,SACfkC,MAAOnC,EAAQmC,MAAM2L,IAAM3M,EAAKlB,UAGpCkZ,EAAc1V,KAAK2V,OAI3Bzf,GDnD4BgK,ECmDCwV,EDlD1B,CACHzgB,KAAMgH,EAAqB2Z,UAC3BzgB,QAAS+K,KCgCN,iCDnCJ,IAA6BA,ICmCzB,OAAP,sDsD5Da2V,CAAoB3V,EAAU7C,MACxC,CAAC6C,EAAU7C,IAEdjH,qBAAU,WACNF,EAAS8G,QACV,CAACpG,EAASkC,SAASwB,eAEHwb,GAAS,YAE5B,OACI,eAAC,IAAD,WACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,YAAYlU,OAAK,EAACmU,UAAWvE,KACzC,cAAC,IAAD,CAAOsE,KAAK,IAAIE,OAAQ,kBACpB,qCACI,cAAC,GAAD,IACA,qBAAKrY,GAAG,iBAAR,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmY,KAAK,IAAIlU,OAAK,EAACmU,UAAWtR,KACjC,cAAC,IAAD,CAAOqR,KAAI,kBAAMtL,QAAN,IAAMA,OAAN,EAAMA,EAAkBtJ,MAAQU,OAAK,EAACmU,UAAWxL,KAC5D,cAAC,IAAD,CAAOuL,KAAI,kBAAMtL,QAAN,IAAMA,OAAN,EAAMA,EAAkBtJ,KAAxB,QAAoCU,OAAK,EAACmU,UAAWlI,KAChE,cAAC,IAAD,CAAOiI,KAAK,YAAYlU,OAAK,EAACmU,UAAWjL,KACzC,cAAC,IAAD,CAAOgL,KAAK,yBAAyBlU,OAAK,EAACmU,UAAWxB,UAG9D,cAAC,GAAD,iB,SE5DlB0B,GAA6B,CAC/BhW,SAAU,GACVnG,SAAS,EACT3C,MAAO,MCHL8e,GAA8B,CAChClV,WAAY,GACZjH,SAAS,EACT3C,MAAO,KACPqT,iBAAkB,MCJhByL,GAA4B,CAC9BlhB,QAAS,G,SCAPkhB,GAA+B,CACjClX,cAAe,GACfG,WAAY,EACZC,cAAe,GAGb+W,GAAqB,SAACrX,GACxB,IAAMJ,EAAQI,EAAasX,QAAO,SAAC/b,EAAGgc,GAAJ,OAAUhc,GAAKgc,EAAE3X,OAAS,KAAI,GAChE,OAAO7I,KAAKC,MAAc,IAAR4I,GAAe,KAG/B4X,GAAmB,SAACxX,GAAD,OACrBA,EAAasX,QAAO,SAAC/b,EAAGgc,GAAJ,OAAUhc,GAAKgc,EAAE7Z,UAAY,KAAI,IAGnD+Z,GAAwB,SAACha,EAAkBC,GAC7C,IAAMkC,EAAQnC,EAAQmC,MAAM2L,IAAM7N,EAClC,OAAO3G,KAAKC,MAAc,IAAR4I,GAAe,KClB/BwX,GAA8B,CAChChW,SAAU,ICDRgW,GAAmC,CACrChN,iBAAkB,GAClBC,aAAc,MCFZ+M,GAA6B,CAC/BM,cAAe,EACfzc,SAAS,GCFPmc,GAAkC,CACpC7Y,UAAW,GACXtD,SAAS,EACT3C,MAAO,MCHL8e,GAA8B,CAChCxb,MAAO,CAAEX,SAAS,ICQT0c,GAAcC,aAAgB,CACvCna,QTJ0B,WAAgE,IAA/Doa,EAA8D,uDAAtDT,GAAcnQ,EAAwC,uCACzF,OAAQA,EAAO9Q,MACX,KAAKwT,GAAmB6M,eACpB,MAAO,CAAEpV,SAAU,GAAInG,SAAS,EAAM3C,MAAO,MACjD,KAAKqR,GAAmB+M,qBACpB,MAAO,CAAEtV,SAAU,GAAInG,SAAS,EAAO3C,MAAO2O,EAAO5Q,SACzD,KAAKsT,GAAmB8M,uBACpB,MAAO,CAAErV,SAAU6F,EAAO5Q,QAAS4E,SAAS,EAAO3C,MAAO,MAC9D,QACI,OAAOuf,ISJfhW,SRJ2B,WAAkE,IAAjEgW,EAAgE,uDAAxDT,GAAcnQ,EAA0C,uCAC5F,OAAQA,EAAO9Q,MACX,KAAK8H,GAAoBmY,iBACrB,MAAO,CAAElU,WAAY,GAAIjH,SAAS,EAAM3C,MAAO,MACnD,KAAK2F,GAAoBsY,uBACrB,MAAO,CAAErU,WAAY,GAAIjH,SAAS,EAAO3C,MAAO2O,EAAO5Q,SAC3D,KAAK4H,GAAoBqY,yBACrB,MAAO,CAAEpU,WAAY+E,EAAO5Q,QAAS4E,SAAS,EAAO3C,MAAO,MAChE,KAAK2F,GAAoB6D,sBACrB,OAAO,6BAAK+V,GAAZ,IAAmBlM,iBAAkB1E,EAAO5Q,UAChD,QACI,OAAOwhB,IQNf1gB,OPRyB,WAA8D,IAA7D0gB,EAA4D,uDAApDT,GAAcnQ,EAAsC,uCACtF,OAAQA,EAAO9Q,MACX,KAAKL,EAAkBM,mBACnB,MAAO,CAAEF,QAAS+Q,EAAO5Q,SAC7B,QACI,OAAOwhB,IOIf5X,UNQ4B,WAAoE,IAC5F4W,EACAiB,EAFyBD,EAAkE,uDAA1DT,GAAcnQ,EAA4C,uCAI/F,OAAQA,EAAO9Q,MACX,KAAKgH,EAAqBQ,YAItB,OAHAkZ,EAAegB,EAAM3X,cAAcvB,MAAK,SAAA4I,GAAE,OAAIA,EAAG9J,QAAQqB,KAAOmI,EAAO5Q,QAAQoH,QAAQqB,SAMnFgZ,EAAmBD,EAAM3X,cAAcC,KAAI,SAACoH,GAAD,OACvCA,EAAG9J,QAAQqB,KAAOmI,EAAO5Q,QAAQoH,QAAQqB,GAAzC,6BACOyI,GADP,IACW7J,SAAU6J,EAAG7J,SAAWuJ,EAAO5Q,QAAQqH,WAE5C6J,MAEOwE,SAAQ,SAAAxE,GAAE,OACvBA,EAAG3H,MAAQ6X,GAAsBlQ,EAAG9J,QAAS8J,EAAG7J,aAG7C,6BACAma,GADP,IAEQ3X,cAAe4X,EACfzX,WAAYgX,GAAmBS,GAC/BxX,cAAekX,GAAiBM,OAMxCA,EAAgB,uBAAOD,EAAM3X,eAAb,8BACT+G,EAAO5Q,SADE,IAEZuJ,MAAO6X,GAAsBxQ,EAAO5Q,QAAQoH,QAASwJ,EAAO5Q,QAAQqH,cAGjE,6BACAma,GADP,IAEQ3X,cAAe4X,EACfzX,WAAYgX,GAAmBS,GAC/BxX,cAAekX,GAAiBM,MAGhD,KAAK3a,EAAqBW,iBAGtB,OAFA+Y,EAAegB,EAAM3X,cAAcvB,MAAK,SAAA4I,GAAE,OAAIA,EAAG9J,QAAQqB,KAAOmI,EAAO5Q,QAAQwH,cAIvEgZ,EAAanZ,SAAWuJ,EAAO5Q,QAAQqH,UAAY,IAGnDoa,EAAmBD,EAAM3X,cAAc0Q,QAAO,SAAArJ,GAAE,aAAIA,EAAG9J,QAAQqB,MAAX,UAAkB+X,SAAlB,aAAkB,EAAcpZ,QAAQqB,QAE3EiN,SAAQ,SAAAxE,GAAE,OACvBA,EAAG3H,MAAQ6X,GAAsBlQ,EAAG9J,QAAS8J,EAAG7J,aAG7C,6BAAIma,GAAX,IACI3X,cAAe4X,EACfzX,WAAYgX,GAAmBS,GAC/BxX,cAAekX,GAAiBM,QAMpCA,EAAmBD,EAAM3X,cAAcC,KAAI,SAACoH,GAAD,OACvCA,EAAG9J,QAAQqB,KAAOmI,EAAO5Q,QAAQwH,UAAjC,6BACS0J,GADT,IACa7J,SAAU6J,EAAG7J,SAAWuJ,EAAO5Q,QAAQqH,WAC9C6J,MAGOwE,SAAQ,SAAAxE,GAAE,OACvBA,EAAG3H,MAAQ6X,GAAsBlQ,EAAG9J,QAAS8J,EAAG7J,aAG7C,6BACAma,GADP,IAEI3X,cAAe4X,EACfzX,WAAYgX,GAAmBS,GAC/BxX,cAAekX,GAAiBM,MAKjCD,EAEf,KAAK1a,EAAqB2Z,UACtB,MAAO,CACH5W,cAAe+G,EAAO5Q,QACtBgK,WAAYgX,GAAmBpQ,EAAO5Q,SACtCiK,cAAekX,GAAiBvQ,EAAO5Q,UAE/C,KAAK8G,EAAqBa,WACtB,MAAO,CACHkC,cAAe,GACfG,WAAY,EACZC,cAAe,GAEvB,QACI,OAAOuX,IM5GfrX,aFR+B,WAA0E,IAAzEqX,EAAwE,uDAAhET,GAAcnQ,EAAkD,uCACxG,OAAQA,EAAO9Q,MACX,KAAKoE,EAAwB4D,WACzB,MAAO,CAAEI,UAAW,GAAItD,SAAS,EAAM3C,MAAO,MAClD,KAAKiC,EAAwBiE,mBACzB,MAAO,CAAED,UAAW0I,EAAO5Q,QAAS4E,SAAS,EAAO3C,MAAO,MAC/D,KAAKiC,EAAwB2C,iBACzB,MAAO,CAAEqB,UAAW,GAAItD,SAAS,EAAO3C,MAAO2O,EAAO5Q,SAC1D,QACI,OAAOwhB,IEAfxW,SLX2B,WAAkE,IAAjEwW,EAAgE,uDAAxDT,GAAcnQ,EAA0C,uCAC5F,OAAQA,EAAO9Q,MACX,KAAK4P,GAAoB8C,gBACrB,OAAIgP,EAAMzW,SAASzC,MAAK,SAAAwP,GAAC,OAAIA,EAAErP,KAAOmI,EAAO5Q,QAAQyI,MAC1C+Y,EAGA,6BAAIA,GAAX,IAAkBzW,SAAS,GAAD,oBAAOyW,EAAMzW,UAAb,CAAuB6F,EAAO5Q,YAEhE,KAAK0P,GAAoBiD,qBACrB,OAAO,6BAAI6O,GAAX,IAAkBzW,SAAUyW,EAAMzW,SAASwP,QAAO,SAAAzC,GAAC,OAAIA,EAAErP,KAAOmI,EAAO5Q,aAC3E,KAAK0P,GAAoBgS,gBACrB,OAAO,6BAAIF,GAAX,IAAkBzW,SAAU,KAChC,QACI,OAAOyW,IKFf1N,QJX0B,WAA4E,IAA3E0N,EAA0E,uDAAlET,GAAcnQ,EAAoD,uCACrG,OAAQA,EAAO9Q,MACX,KAAKkS,GAAmBqB,kBAEpB,OAAImO,EAAMzN,iBAAiBzL,MAAK,SAAA4L,GAAM,OAAIA,EAAOzK,OAASmH,EAAO5Q,QAAQyJ,QAC9D,6BAAK+X,GAAZ,IAAmBxN,aAAcpD,EAAO5Q,UAEjCwhB,EACf,KAAKxP,GAAmBkB,sBACpB,MAAO,CAAEa,iBAAkBnD,EAAO5Q,QAASgU,aAAc,MAC7D,QACI,OAAOwN,IICf5c,QHZ0B,WAAgE,IAA/D4c,EAA8D,uDAAtDT,GAAcnQ,EAAwC,uCACzF,OAAQA,EAAO9Q,MACX,KAAKqE,EAAmBwd,aACpB,OAAI/Q,EAAO5Q,QAAU,EACV,CAAEqhB,cAAe,EAAGzc,SAAS,GAG7B,CAAEyc,cAAezQ,EAAO5Q,QAAS4E,QAASgM,EAAO5Q,QAAU,GAE1E,KAAKmE,EAAmByd,eACpB,MAAO,CAAEP,cAAe,EAAGzc,SAAS,GACxC,KAAKT,EAAmB6C,aACpB,MAAO,CAAEqa,cAAeG,EAAMH,cAAgB,EAAGzc,SAAS,GAC9D,KAAKT,EAAmB+C,aACpB,OAA4B,IAAxBsa,EAAMH,cACCG,EAGA,CAAEH,cAAeG,EAAMH,cAAgB,EAAGzc,QAAS4c,EAAMH,cAAgB,GAExF,QACI,OAAOG,IGRf7d,SDd2B,WAAkE,IAAjE6d,EAAgE,uDAAxDT,GAAcnQ,EAA0C,uCAC5F,OAAQA,EAAO9Q,MACX,KAAKG,EAAoBwD,eACrB,OAAO,6BAAK+d,GAAZ,IAAmBjc,MAAO,CAAEX,SAAS,KACzC,KAAK3E,EAAoB4D,uBACrB,MAAO,CACHF,SAAUiN,EAAO5Q,QAAQ2D,SACzBC,IAAKgN,EAAO5Q,QAAQ4D,IACpB2B,MAAO,CAAEX,SAAS,IAE1B,KAAK3E,EAAoB8D,qBACrB,OAAO,6BAAKyd,GAAZ,IAAmBjc,MAAO,CAAEX,SAAS,EAAO3C,MAAO2O,EAAO5Q,WAC9D,KAAKC,EAAoBgE,YACrB,OAAO8c,GACX,QACI,OAAOS,M,SEjBNK,GAAQC,aAAYR,GAAaS,aAAgBC,O,OCG9DC,IAASnB,OACL,cAAC,IAAD,CAAUe,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJzhB,SAAS8hB,eAAe,U","file":"static/js/main.a7016524.chunk.js","sourcesContent":["export interface ScrollState {\r\n    percent: number;\r\n}\r\n\r\nexport enum ScrollActionTypes {\r\n    SET_SCROLL_PERCENT = \"SET_SCROLL_PERCENT\"\r\n}\r\n\r\ninterface SetScrollPercent {\r\n    type: ScrollActionTypes.SET_SCROLL_PERCENT;\r\n    payload: number;\r\n}\r\n\r\nexport type ScrollAction = SetScrollPercent;\r\n\r\n// action-wrappers\r\nexport function setScrollPercentAction(percent: number): SetScrollPercent {\r\n    return { type: ScrollActionTypes.SET_SCROLL_PERCENT, payload: percent }\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Customer } from \"@chec/commerce.js/types/customer\";\r\n\r\nexport interface LoginState {\r\n    loading: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport interface CustomerState {\r\n    customer?: Customer;\r\n    jwt?: string;\r\n    login: LoginState;\r\n}\r\n\r\nexport enum CustomerActionTypes {\r\n    FETCH_CUSTOMER = \"FETCH_CUSTOMER\",\r\n    FETCH_CUSTOMER_SUCCESS = \"FETCH_CUSTOMER_SUCCESS\",\r\n    FETCH_CUSTOMER_ERROR = \"FETCH_CUSTOMER_ERROR\",\r\n    CLEAR_STATE = \"CLEAR_STATE\"\r\n}\r\n\r\ninterface FetchCustomerAction {\r\n    type: CustomerActionTypes.FETCH_CUSTOMER;\r\n}\r\n\r\ninterface FetchCustomerSuccessAction {\r\n    type: CustomerActionTypes.FETCH_CUSTOMER_SUCCESS;\r\n    payload: {\r\n        customer: Customer;\r\n        jwt?: string;\r\n    }\r\n}\r\n\r\ninterface FetchCustomerErrorAction {\r\n    type: CustomerActionTypes.FETCH_CUSTOMER_ERROR;\r\n    payload: string;\r\n}\r\n\r\ninterface ClearStateAction {\r\n    type: CustomerActionTypes.CLEAR_STATE;\r\n}\r\n\r\nexport type CustomerAction = FetchCustomerAction | FetchCustomerSuccessAction | FetchCustomerErrorAction | ClearStateAction;\r\n\r\n// action-wrappers\r\nexport function fetchCustomerAction(): FetchCustomerAction {\r\n    return { type: CustomerActionTypes.FETCH_CUSTOMER };\r\n}\r\n\r\nexport function fetchCustomerSuccessAction(customer: Customer, jwt?: string): FetchCustomerSuccessAction {\r\n    return { \r\n        type: CustomerActionTypes.FETCH_CUSTOMER_SUCCESS,\r\n        payload: { customer, jwt }\r\n    };\r\n}\r\n\r\nexport function fetchCustomerErrorAction(error: string): FetchCustomerErrorAction {\r\n    return {\r\n        type: CustomerActionTypes.FETCH_CUSTOMER_ERROR,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport function clearStateAction(): ClearStateAction {\r\n    return { type: CustomerActionTypes.CLEAR_STATE };\r\n}","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { setScrollPercentAction } from '../types/scroll';\r\n\r\nconst calculateScrollPercent = (): number => {\r\n    let doc = document.documentElement;\r\n    let body = document.body;\r\n    let percent = (doc.scrollTop || body.scrollTop) / ((doc.scrollHeight || body.scrollHeight) - doc.clientHeight) * 100;\r\n\r\n    return Math.round(percent);\r\n}\r\n\r\nconst ScrollBar: FC = () => {\r\n    const { percent } = useTypedSelector(root => root.scroll);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setScrollPercentAction(calculateScrollPercent()));\r\n        window.addEventListener('scroll', () => dispatch(setScrollPercentAction(calculateScrollPercent())))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"scroll-bar\">\r\n            <span className=\"display-bar\" style={{ width: `${percent}%` }}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScrollBar\r\n","export default __webpack_public_path__ + \"static/media/fakestore_logo_short.5a93729e.svg\";","import Commerce from '@chec/commerce.js';\r\n\r\nconst apiKey: string | undefined = process.env.REACT_APP_CHEC_PUBLIC_KEY; \r\n\r\nexport const commerce = new Commerce(apiKey ? apiKey : \"\", true);\r\n\r\nexport interface Customer {\r\n    firstname: string;\r\n    lastname: string;\r\n    email: string;\r\n}\r\n\r\nexport interface Country {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport interface CreditCard {\r\n    number: string;\r\n    cardholder: string;\r\n    cvc: string,\r\n    expiry: string;\r\n}\r\n\r\nexport interface Billing {\r\n    customer: Customer;\r\n    country: Country;\r\n    zipcode: string;\r\n    card: CreditCard;\r\n    gateway: string;\r\n}","export default __webpack_public_path__ + \"static/media/girl.90b5c220.svg\";","import React, { SetStateAction } from 'react';\r\nimport { FC } from 'react';\r\nimport { RiInformationFill } from 'react-icons/ri';\r\nimport { IoIosCloseCircle } from 'react-icons/io';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport gsap from 'gsap';\r\nimport { useState } from 'react';\r\n\r\ninterface TextInputProps {\r\n    label?: string;\r\n    value?: string;\r\n    setValue?: React.Dispatch<SetStateAction<string>>;\r\n    onValueChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\r\n    wrapperClassName?: string;\r\n    labelClassName?: string;\r\n    inputClassName?: string;\r\n    error?: string;\r\n    setError?: React.Dispatch<SetStateAction<string>>;\r\n    placeholder?: string;\r\n    type: \"text\" | \"email\" | \"tel\";\r\n}\r\n\r\nconst TextInput: FC<TextInputProps> = (props) => {\r\n    const clearInput = () => {\r\n        if (props.setValue) {\r\n            props.setValue(\"\");\r\n        }\r\n        else if (inputRef.current) {\r\n            inputRef.current.value = \"\";\r\n        }\r\n    }\r\n\r\n    const clearError = () => {\r\n        if (props.setError) {\r\n            props.setError(\"\");\r\n        }\r\n    }\r\n\r\n    const clearButtonClickHandler = () => {\r\n        clearInput();\r\n        inputRef.current?.focus();\r\n    }\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const errorRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (props.setError) {\r\n            if (props.error) {\r\n                gsap.fromTo(errorRef.current, {\r\n                    yPercent: -100,\r\n                    opacity: 0\r\n                }, {\r\n                    yPercent: 0,\r\n                    opacity: 1,\r\n                    duration: 0.2,\r\n                    ease: \"power1.out\"\r\n                });\r\n            }\r\n        }\r\n    }, [props.error]);\r\n\r\n    const onInputValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        props.onValueChange?.call(null, event);\r\n        clearError();\r\n    }\r\n\r\n    return (\r\n        <div className={`text-input ${props.wrapperClassName}`}>\r\n            {\r\n                props.label ?\r\n                    <span className={`label ${props.labelClassName}`}>{props.label}</span>\r\n                : <></>\r\n            }\r\n            <div className={`input-field ${props.error ? \"validation-error\" : \"\"}`}>\r\n                <input className={`input ${props.inputClassName}`}\r\n                       value={props.value} \r\n                       onChange={onInputValueChange}\r\n                       onKeyPress={props.onKeyPress}\r\n                       placeholder={props.placeholder}\r\n                       type={props.type}\r\n                       ref={inputRef}/>\r\n                <div className=\"overlay\">\r\n                    {\r\n                        <span className=\"clear-button\"\r\n                            onClick={clearButtonClickHandler}>\r\n                            <IoIosCloseCircle className=\"clear-icon\" />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                props.error && props.setError ?\r\n                    <div className=\"error\" ref={errorRef}>\r\n                        <RiInformationFill className=\"error-icon\"/>\r\n                        <span className=\"error-text\">{props.error}</span>\r\n                    </div>\r\n                    : <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput\r\n","import { Dispatch } from \"react\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { CustomerAction, fetchCustomerAction, fetchCustomerSuccessAction, fetchCustomerErrorAction, clearStateAction } from \"../../types/customer\"\r\n\r\nexport const fetchCustomer = (token: string | null) => {\r\n    return async (dispatch: Dispatch<CustomerAction>) => {\r\n        if (!token) {\r\n            fetchCustomerErrorAction(\"Invalid or outdated token\");\r\n            return;\r\n        }\r\n\r\n        dispatch(fetchCustomerAction());\r\n\r\n        if (commerce.customer.isLoggedIn()) {\r\n            dispatch(fetchCustomerErrorAction(\"You are already Logged in\"));\r\n            return;\r\n        }\r\n\r\n        commerce.customer.getToken(token)\r\n                        .then(response => {\r\n                            commerce.customer.about()\r\n                                            .then(customer => dispatch(fetchCustomerSuccessAction(customer, response.jwt)))                   \r\n                                            .catch(() => dispatch(fetchCustomerErrorAction(\"Unknown error occured\")))})\r\n                        .catch(() => dispatch(fetchCustomerErrorAction(\"Invalid or outdated token\")));\r\n    }\r\n}\r\n\r\nexport const refreshCurrentCustomer = () => {\r\n    return async (dispatch: Dispatch<CustomerAction>) => {\r\n        if (commerce.customer.isLoggedIn()) {\r\n            dispatch(fetchCustomerAction());\r\n\r\n            commerce.customer.about().then(customer => {\r\n                dispatch(fetchCustomerSuccessAction(customer));\r\n            })\r\n            .catch(() => dispatch(clearStateAction()));\r\n        }\r\n        else {\r\n            dispatch(clearStateAction());\r\n        }\r\n    }\r\n}","import { LineItem } from '@chec/commerce.js/types/line-item';\r\n\r\nexport interface CommerceCartState {\r\n    lineItems: LineItem[];\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\nexport enum CommerceCartActionTypes {\r\n    FETCH_CART = \"FETCH_CART\",\r\n    FETCH_CART_SUCCESS = \"FETCH_CART_SUCCESS\",\r\n    FETCH_CART_ERROR = \"FETCH_CART_ERROR\"\r\n}\r\n\r\ninterface FetchCartAction {\r\n    type: CommerceCartActionTypes.FETCH_CART;\r\n}\r\n\r\ninterface FetchCartSuccessAction {\r\n    type: CommerceCartActionTypes.FETCH_CART_SUCCESS;\r\n    payload: LineItem[];\r\n}\r\n\r\ninterface FetchCartErrorAction {\r\n    type: CommerceCartActionTypes.FETCH_CART_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type CommerceCartAction = FetchCartAction | FetchCartSuccessAction | FetchCartErrorAction;\r\n\r\n// action-wrappers\r\nexport function fetchCartAction(): FetchCartAction {\r\n    return { type: CommerceCartActionTypes.FETCH_CART };\r\n}\r\n\r\nexport function fetchCartSuccessAction(lineItems: LineItem[]): FetchCartSuccessAction {\r\n    return {\r\n        type: CommerceCartActionTypes.FETCH_CART_SUCCESS,\r\n        payload: lineItems\r\n    };\r\n}\r\n\r\nexport function fetchCartErrorAction(error: string): FetchCartErrorAction {\r\n    return {\r\n        type: CommerceCartActionTypes.FETCH_CART_ERROR,\r\n        payload: error\r\n    };\r\n}","export interface LoadingState {\r\n    // number of active third-party loadings in the moment\r\n    numOfLoadings: number;\r\n    // shows is there any active loadings in the moment\r\n    loading: boolean;\r\n}\r\n\r\nexport enum LoadingActionTypes {\r\n    SET_LOADINGS = \"SET_NUM_OF_LOADINGS\",\r\n    INC_LOADINGS = \"INC_LOADING\",\r\n    DEC_LOADINGS = \"DEC_LOADING\",\r\n    CLEAR_LOADINGS = \"CLEAR_LOADINGS\"\r\n}\r\n\r\ninterface SetLoadingsAction {\r\n    type: LoadingActionTypes.SET_LOADINGS;\r\n    payload: number;\r\n}\r\n\r\ninterface IncLoadingsAction {\r\n    type: LoadingActionTypes.INC_LOADINGS;\r\n}\r\n\r\ninterface DecLoadingsAction {\r\n    type: LoadingActionTypes.DEC_LOADINGS;\r\n}\r\n\r\ninterface ClearLoadingsAction {\r\n    type: LoadingActionTypes.CLEAR_LOADINGS;\r\n}\r\n\r\nexport type LoadingAction = SetLoadingsAction | IncLoadingsAction | DecLoadingsAction | ClearLoadingsAction;\r\n\r\n// action-wrappers\r\nexport const setLoadingsAction = (number: number): SetLoadingsAction => {\r\n    return { type: LoadingActionTypes.SET_LOADINGS, payload: number };\r\n}\r\n\r\nexport const incLoadingsAction = (): IncLoadingsAction => {\r\n    return { type: LoadingActionTypes.INC_LOADINGS };\r\n}\r\n\r\nexport const decLoadingsAction = (): DecLoadingsAction => {\r\n    return { type: LoadingActionTypes.DEC_LOADINGS };\r\n}\r\n\r\nexport const clearLoadingsAction = (): ClearLoadingsAction => {\r\n    return { type: LoadingActionTypes.CLEAR_LOADINGS };\r\n}","import React, { FC } from 'react';\r\nimport { FaBox, FaRegHandPeace, FaUser } from 'react-icons/fa';\r\nimport { IoLogOut } from 'react-icons/io5';\r\nimport { commerce } from '../lib/commerce';\r\nimport Modal from 'react-modal';\r\nimport { useState } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport girlPicture from '../icons/girl.svg';\r\nimport TextInput from './inputs/TextInput';\r\nimport { Img } from 'react-image';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useEffect } from 'react';\r\nimport { refreshCurrentCustomer } from '../store/actions/customer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Account: FC = () => {\r\n    const [isLoginModalOpen, setIsLoginModalOpen] = useState<boolean>(false);\r\n    const [isLogoutModalOpen, setIsLogoutModalOpen] = useState<boolean>(false);\r\n\r\n    const [email, setEmail] = useState<string>(\"\");\r\n\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [success, setSuccess] = useState<boolean>(false);\r\n\r\n    const [isPopupVisible, setIsPopupVisible] = useState<boolean>(false);\r\n\r\n    const { customer } = useTypedSelector(root => root.customer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(refreshCurrentCustomer());\r\n        setLoading(false);\r\n    }, [commerce.customer.isLoggedIn()]);\r\n\r\n\r\n    const login = () => {\r\n        if (!email) {\r\n            setError(\"The field is required\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        commerce.customer.login(email, \"http://localhost:3000/login/callback/\")\r\n                         .then((response) => setSuccess(response.success))\r\n                         .catch((response) => setError(response.data.error.errors.email))\r\n                         .finally(() => setLoading(false));\r\n    }\r\n\r\n    const logout = () => {\r\n        setLoading(true);\r\n        commerce.customer.logout();\r\n    }\r\n\r\n    const onEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key == \"Enter\") {\r\n            login();\r\n        }\r\n    }\r\n\r\n    const accountClickHandler = () => {\r\n        if (!customer) {\r\n            openLoginModal();\r\n        }\r\n    }\r\n\r\n    const openLoginModal = () => setIsLoginModalOpen(true);\r\n    const closeLoginModal = () => {\r\n        setIsLoginModalOpen(false);\r\n        setEmail(\"\");\r\n        setLoading(false);\r\n        setError(\"\");\r\n        setSuccess(false);\r\n    }\r\n\r\n    const openLogoutModal = () => {\r\n        setIsLogoutModalOpen(true);\r\n        hidePopup();\r\n    }\r\n    const closeLogoutModal = () => setIsLogoutModalOpen(false);\r\n\r\n    const hidePopup = () => setIsPopupVisible(false);\r\n    const showPopup = () => setIsPopupVisible(true);\r\n\r\n    return (\r\n        <div className=\"account\"\r\n             onMouseEnter={showPopup}\r\n             onMouseLeave={hidePopup}>\r\n            <div className=\"user-action visible-content\" onClick={accountClickHandler}>\r\n                <FaUser className=\"icon\" />\r\n            </div>\r\n            {\r\n                customer ?\r\n                    <>\r\n                        <div className={`popup-panel ${isPopupVisible ? \"visible\" : \"hidden\"}`}>\r\n                            <header className=\"popup-panel__header\">\r\n                                <h4 className=\"greetings-text\">Hi, {customer.firstname ? customer.firstname : \"Stranger\"}</h4>\r\n                                <FaRegHandPeace className=\"greetings-icon\" />\r\n                            </header>\r\n                            <div className=\"popup-panel__body\">\r\n                                <button className=\"flat-style with-icon icon-right disabled\" disabled>\r\n                                    <span>My Profile</span>\r\n                                    <FaUser />\r\n                                </button>\r\n                                <button className=\"flat-style with-icon icon-right\" disabled>\r\n                                    <span>My Orders</span>\r\n                                    <FaBox />\r\n                                </button>\r\n                                <button className=\"flat-style with-icon icon-right red\" onClick={openLogoutModal}>\r\n                                    <span>Log Out</span>\r\n                                    <IoLogOut />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <Modal className=\"logout-modal\" isOpen={isLogoutModalOpen}>\r\n                            {\r\n                                !loading ?\r\n                                    <div className=\"logout-modal__confirm\">\r\n                                        <h3 className=\"modal-title\">Log Out</h3>\r\n                                        <div className=\"modal-body\">\r\n                                            <span>Are you sure you want to log out?</span>\r\n                                        </div>\r\n                                        <div className=\"modal-buttons\">\r\n                                            <button className=\"flat-style\" onClick={closeLogoutModal}>Cancel</button>\r\n                                            <button className=\"flat-style red\" onClick={logout}>Yes</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"loading-modal__wrapper\">\r\n                                        <h3 className=\"modal-title\">Loading...</h3>\r\n                                        <div className=\"modal-body\">\r\n                                            <ReactLoading type=\"spin\" className=\"loading-spinner\" />\r\n                                        </div>\r\n                                    </div>\r\n                            }                        \r\n                        </Modal>\r\n                    </>\r\n                    :\r\n                    <Modal isOpen={isLoginModalOpen} className=\"login-modal\">\r\n                        {\r\n                            loading ?\r\n                                <div className=\"loading-modal__wrapper\">\r\n                                    <h3 className=\"modal-title\">Loading...</h3>\r\n                                    <div className=\"modal-body\">\r\n                                        <ReactLoading type=\"spin\" className=\"loading-spinner\" />\r\n                                    </div>\r\n                                </div>\r\n                                : success ?\r\n                                    <div className=\"login-modal__success\">\r\n                                        <h3 className=\"modal-title green\">Login link has been sent</h3>\r\n                                        <div className=\"modal-body\">\r\n                                            <div className=\"left-side\">\r\n                                                <span className=\"info\">\r\n                                                    <p>We’ve spent a one-time login link to your email.</p>\r\n                                                    <p>Check the Inbox and Spam folders.</p>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"right-side\">\r\n                                                <Img className=\"girl-picture\"\r\n                                                    alt=\"\"\r\n                                                    src={girlPicture}\r\n                                                    loader={<ReactLoading type=\"spin\" className=\"loading-spinner\" />} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"modal-buttons\">\r\n                                            <button className=\"close-modal-button flat-style green\" onClick={closeLoginModal}>Close</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"login-modal__input\">\r\n                                        <h3 className=\"modal-title\">Login</h3>\r\n                                        <div className=\"modal-body\">\r\n                                            <TextInput value={email}\r\n                                                setValue={setEmail}\r\n                                                label=\"Enter the Email You provided during checkout\"\r\n                                                onKeyPress={onEnterPress}\r\n                                                onValueChange={(e) => setEmail(e.currentTarget.value)}\r\n                                                placeholder=\"myemail@example.com\"\r\n                                                error={error}\r\n                                                setError={setError}\r\n                                                type=\"email\" />\r\n                                        </div>\r\n                                        <div className=\"modal-buttons\">\r\n                                            <button className=\"cancel-button flat-style\" onClick={closeLoginModal}>Cancel</button>\r\n                                            <button className=\"confirm-button flat-style green\" onClick={login}>Confirm</button>\r\n                                        </div>\r\n                                    </div>\r\n                        }\r\n                    </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","export default __webpack_public_path__ + \"static/media/hand-cart.c17a7ab3.svg\";","import { Product } from '@chec/commerce.js/types/product';\r\n\r\nexport interface LCartProduct {\r\n    product: Product;\r\n    quantity: number;\r\n    price: number;\r\n}\r\n\r\nexport interface LocalCartState {\r\n    lcartProducts: LCartProduct[];\r\n    totalPrice: number;\r\n    totalQuantity: number;\r\n}\r\n\r\nexport enum LocalCartActionTypes {\r\n    ADD_TO_CART = \"ADD_TO_CART\",\r\n    REMOVE_FROM_CART = \"REMOVE_FROM_CART\",\r\n    CLEAR_CART = \"CLEAR_CART\",\r\n    FILL_CART = \"FILL_CART\"\r\n}\r\n\r\ninterface AddToLocalCartAction {\r\n    type: LocalCartActionTypes.ADD_TO_CART;\r\n    payload: { product: Product, quantity: number };\r\n}\r\n\r\ninterface RemoveFromLocalCartAction {\r\n    type: LocalCartActionTypes.REMOVE_FROM_CART;\r\n    payload: { productId: string, quantity: number };\r\n}\r\n\r\ninterface ClearLocalCartAction {\r\n    type: LocalCartActionTypes.CLEAR_CART;\r\n}\r\n\r\ninterface FillLocalCartAction {\r\n    type: LocalCartActionTypes.FILL_CART;\r\n    payload: LCartProduct[];\r\n}\r\n\r\nexport type LocalCartAction = AddToLocalCartAction | RemoveFromLocalCartAction | ClearLocalCartAction | FillLocalCartAction;\r\n\r\n// action-wrappers\r\nexport function addToLocalCartAction(product: Product, quantity: number): AddToLocalCartAction {\r\n    return {\r\n        type: LocalCartActionTypes.ADD_TO_CART,\r\n        payload: { product, quantity }\r\n    };\r\n}\r\n\r\nexport function removeFromLocalCartAction(productId: string, quantity: number): RemoveFromLocalCartAction {\r\n    return {\r\n        type: LocalCartActionTypes.REMOVE_FROM_CART,\r\n        payload: { productId, quantity }\r\n    };\r\n}\r\n\r\nexport function clearLocalCartAction(): ClearLocalCartAction {\r\n    return { type: LocalCartActionTypes.CLEAR_CART };\r\n}\r\n\r\nexport function fillLocalCartAction(products: LCartProduct[]): FillLocalCartAction {\r\n    return {\r\n        type: LocalCartActionTypes.FILL_CART,\r\n        payload: products\r\n    };\r\n}","import { LineItem } from \"@chec/commerce.js/types/line-item\";\r\nimport { Product } from \"@chec/commerce.js/types/product\";\r\nimport { Dispatch } from \"react\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { CommerceCartAction, fetchCartAction, fetchCartErrorAction, fetchCartSuccessAction } from \"../../types/commerceCart\";\r\nimport { decLoadingsAction, incLoadingsAction, LoadingAction } from \"../../types/loading\";\r\nimport { fillLocalCartAction, LCartProduct, LocalCartAction } from \"../../types/localCart\";\r\n\r\nexport const fetchCommerceCart = () => {\r\n    return async (dispatch: Dispatch<CommerceCartAction>) => {\r\n        dispatch(fetchCartAction());\r\n\r\n        commerce.cart.contents()\r\n        .then(items => dispatch(fetchCartSuccessAction(items)))\r\n        .catch(error => dispatch(fetchCartErrorAction(error)));\r\n    }\r\n}\r\n\r\nexport const clearCommerceCart = () => {\r\n    return async (dispatch: Dispatch<LoadingAction>) => {\r\n        dispatch(incLoadingsAction());\r\n\r\n        commerce.cart.empty().then(response => {\r\n            if (response.success) {\r\n                dispatch(decLoadingsAction());\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const addToCommerceCart = (product: Product, quantity: number) => {\r\n    return async (dispatch: Dispatch<LoadingAction>) => {\r\n        dispatch(incLoadingsAction());\r\n\r\n        commerce.cart.contents().then(items => {\r\n            const existingItem = items.find(item => item.product_id === product.id);\r\n\r\n            if (existingItem) {\r\n                commerce.cart.update(existingItem.id, { quantity: existingItem.quantity + quantity })\r\n                    .then(response => {\r\n                        if (response.success) {\r\n                            dispatch(decLoadingsAction());\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                commerce.cart.add(product.id, quantity)\r\n                    .then(response => {\r\n                        if (response.success) {\r\n                            dispatch(decLoadingsAction());\r\n                        }\r\n                    });;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateCommerceCart = (product: Product, quantity: number) => {\r\n    return async (dispatch: Dispatch<LoadingAction>) => {\r\n        dispatch(incLoadingsAction());\r\n\r\n        commerce.cart.contents().then(items => {\r\n            const existingItem = items.find(item => item.product_id === product.id);\r\n    \r\n            if (existingItem) {\r\n                commerce.cart.update(existingItem.id, { quantity })\r\n                    .then(response => {\r\n                        if (response.success) {\r\n                            dispatch(decLoadingsAction());\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const removeFromCommerceCart = (product: Product) => {\r\n    return async (dispatch: Dispatch<LoadingAction>) => {\r\n        dispatch(incLoadingsAction());\r\n\r\n        commerce.cart.contents().then(items => {\r\n            const existingItem = items.find(item => item.product_id === product.id);\r\n    \r\n            if (existingItem) {\r\n                commerce.cart.remove(existingItem.id)\r\n                    .then(response => {\r\n                        if (response.success) {\r\n                            dispatch(decLoadingsAction());\r\n                        }\r\n                    });;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const commerceCartToLocal = (availableProducts: Product[], lineItems: LineItem[]) => {\r\n    return async (dispatch: Dispatch<LocalCartAction>) => {\r\n        let lCartProducts: LCartProduct[] = [];\r\n\r\n        lineItems.forEach(item => {\r\n            const product = availableProducts.find(p => p.id === item.product_id);\r\n            if (product) {\r\n                const lCartProduct: LCartProduct = {\r\n                    product: product,\r\n                    quantity: item.quantity,\r\n                    price: product.price.raw * item.quantity\r\n                }\r\n\r\n                lCartProducts.push(lCartProduct);\r\n            }\r\n        });\r\n\r\n        dispatch(fillLocalCartAction(lCartProducts));\r\n    }\r\n}\r\n\r\n","import { Category } from '@chec/commerce.js/types/category';\r\n\r\nexport interface CategoryState {\r\n    categories: Category[];\r\n    loading: boolean;\r\n    error: string | null;\r\n    selectedCategory?: Category | null;\r\n}\r\n\r\nexport enum CategoryActionTypes {\r\n    FETCH_CATEGORIES = \"FETCH_CATEGORIES\",\r\n    FETCH_CATEGORIES_SUCCESS = \"FETCH_CATEGORIES_SUCCESS\",\r\n    FETCH_CATEGORIES_ERROR = \"FETCH_CATEGORIES_ERROR\",\r\n    SET_SELECTED_CATEGORY = \"SET_SELECTED_CATEGORY\"\r\n}\r\n\r\ninterface FetchCategoriesAction {\r\n    type: CategoryActionTypes.FETCH_CATEGORIES;\r\n}\r\n\r\ninterface FetchCategoriesSuccessAction {\r\n    type: CategoryActionTypes.FETCH_CATEGORIES_SUCCESS;\r\n    payload: Category[];\r\n}\r\n\r\ninterface FetchCategoriesErrorAction {\r\n    type: CategoryActionTypes.FETCH_CATEGORIES_ERROR;\r\n    payload: string;\r\n}\r\n\r\ninterface SetSelectedCategoryAction {\r\n    type: CategoryActionTypes.SET_SELECTED_CATEGORY;\r\n    payload: Category;\r\n}\r\n\r\nexport type CategoryAction = FetchCategoriesAction \r\n                            | FetchCategoriesErrorAction\r\n                            | FetchCategoriesSuccessAction\r\n                            | SetSelectedCategoryAction;\r\n\r\n// action-wrappers\r\nexport function fetchCategoriesAction(): FetchCategoriesAction {\r\n    return { type: CategoryActionTypes.FETCH_CATEGORIES }\r\n}\r\n\r\nexport function fetchCategoriesSuccessAction(categories: Category[]): FetchCategoriesSuccessAction {\r\n    return { type: CategoryActionTypes.FETCH_CATEGORIES_SUCCESS, payload: categories }\r\n}\r\n\r\nexport function fetchCategoriesErrorAction(error: string): FetchCategoriesErrorAction {\r\n    return { type: CategoryActionTypes.FETCH_CATEGORIES_ERROR, payload: error }\r\n}\r\n\r\nexport function setSelectedCategoryAction(category: Category): SetSelectedCategoryAction {\r\n    return { type: CategoryActionTypes.SET_SELECTED_CATEGORY, payload: category }\r\n}","import React, { FC } from 'react';\r\nimport { useRef } from 'react';\r\nimport { IoMdAdd, IoMdRemove, IoMdRemoveCircle } from 'react-icons/io'; \r\nimport { useDispatch } from 'react-redux';\r\nimport { addToLocalCartAction, LCartProduct as CartProductType, removeFromLocalCartAction } from '../types/localCart';\r\nimport gsap from 'gsap';\r\nimport { removeFromCommerceCart, updateCommerceCart } from '../store/actions/commerceCart';\r\n\r\ninterface CartProductProps {\r\n    cartProduct: CartProductType;\r\n}\r\n\r\nconst CartProduct: FC<CartProductProps> = ({ cartProduct }) => {\r\n    const dispatch = useDispatch();\r\n    const cartProductRef = useRef<HTMLDivElement>(null);\r\n\r\n    // adds a Product of a certain type in a quantity of one piece in Cart\r\n    const addOne = () => {\r\n        dispatch(addToLocalCartAction(cartProduct.product, 1));\r\n        dispatch(updateCommerceCart(cartProduct.product, cartProduct.quantity + 1));\r\n    }\r\n\r\n    // removes a Product of a certain type in a quantity of one piece from Cart\r\n    const removeOne = () => {\r\n        if (cartProduct.quantity === 1) {\r\n            animateAndRemoveAll();\r\n        }\r\n        else {\r\n            dispatch(removeFromLocalCartAction(cartProduct.product.id, 1));\r\n            dispatch(updateCommerceCart(cartProduct.product, cartProduct.quantity - 1));\r\n        }\r\n    }\r\n\r\n    // removes a Product of a certain type in FULL from Cart\r\n    const removeAll = () => {\r\n        dispatch(removeFromLocalCartAction(cartProduct.product.id, cartProduct.quantity));\r\n        dispatch(removeFromCommerceCart(cartProduct.product));\r\n    }\r\n\r\n    const animateAndRemoveAll = () => {\r\n        gsap.to(cartProductRef.current, {\r\n            opacity: 0,\r\n            scale: 0.5,\r\n            duration: 0.4,\r\n            ease: \"back.inOut(2)\",\r\n            onComplete: removeAll\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart-product\" ref={cartProductRef}>\r\n            <section className=\"left-section\">\r\n                <img className=\"product-image\" src={cartProduct.product.media.source} alt=\"\"/>        \r\n            </section>\r\n            <section className=\"right-section\">\r\n                <span className=\"product-price\">{cartProduct.product.price.formatted_with_symbol}</span>\r\n                <span className=\"product-name\">{cartProduct.product.name}</span>\r\n                <div className=\"product-quantity-block\">\r\n                    <span className=\"text-value\">\r\n                        <span className=\"text\">Quantity:</span>\r\n                        <span className=\"value\">{cartProduct.quantity}</span>\r\n                    </span>\r\n                    <span className=\"change-value-buttons\">\r\n                        <button className=\"decrease-product flat-style\" onClick={removeOne}>\r\n                            <IoMdRemove/>\r\n                        </button>\r\n                        <button className=\"increase-product flat-style\" onClick={addOne}>\r\n                            <IoMdAdd/>\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n                <button className=\"remove-product-button flat-style red\" \r\n                        onClick={animateAndRemoveAll}>\r\n                    <span className=\"icon-wrapper\">\r\n                        <IoMdRemoveCircle/>\r\n                    </span>\r\n                    <span className=\"title\">Remove</span>\r\n                </button>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartProduct\r\n","import React, { FC } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport CartProduct from './CartProduct';\r\n\r\nconst CartProducts: FC = () => {\r\n    const { lcartProducts: cartProducts } = useTypedSelector(root => root.localCart);\r\n\r\n    return (\r\n        <div className=\"cart-products\">\r\n            {cartProducts.map(cartProduct => \r\n                <CartProduct key={cartProduct.product.id} cartProduct={cartProduct}/>    \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartProducts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport cart from '../icons/hand-cart.svg';\r\nimport { clearCommerceCart } from '../store/actions/commerceCart';\r\nimport { clearLocalCartAction } from '../types/localCart';\r\nimport CartProducts from './CartProducts';\r\nimport { PuffLoader } from 'react-spinners';\r\n\r\nconst Cart: FC = () => {\r\n    const { lcartProducts: cartProducts, totalPrice, totalQuantity } = useTypedSelector(root => root.localCart);\r\n\r\n    const { loading: cartLoading } = useTypedSelector(root => root.commerceCart);\r\n    const { loading: productsLoading } = useTypedSelector(root => root.product);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [isPopupVisible, setIsPopupVisible] = useState<boolean>(false);\r\n\r\n    const popupBodyRef = useRef<HTMLDivElement>(null);\r\n\r\n    const hidePopup = () => {\r\n        setIsPopupVisible(false);\r\n    }\r\n\r\n    const showPopup = () => {\r\n        popupBodyRef.current?.scrollTo(0, 0);\r\n        setIsPopupVisible(true);\r\n    }\r\n\r\n    const clearCart = () => {\r\n        dispatch(clearLocalCartAction());\r\n        dispatch(clearCommerceCart());\r\n    }\r\n\r\n    const history = useHistory();\r\n    \r\n    const goToCheckout = () => {\r\n        history.push(\"/checkout\");    \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cartProducts.length === 0) {\r\n            hidePopup();\r\n        }\r\n    }, [cartProducts]);\r\n\r\n    return (\r\n        <div className=\"cart\"\r\n             onMouseEnter={showPopup} \r\n             onMouseLeave={hidePopup}>\r\n            {\r\n                cartLoading || productsLoading ?\r\n                    <div className=\"user-action\">\r\n                        <PuffLoader color=\"#3E454F\" size={27}/>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        <div className=\"user-action visible-content\">\r\n                            <img className=\"icon\" src={cart} alt=\"cart\" />\r\n                            <span className={`cart-quantity__wrapper ${cartProducts.length === 0 ? \"hidden\" : \"\"}`}>\r\n                                <span className=\"cart-quantity\">{cartProducts.length}</span>\r\n                            </span>\r\n                        </div>\r\n                        {cartProducts.length > 0 ?\r\n                            <div className={`popup-content popup-panel ${isPopupVisible ? \"visible\" : \"hidden\"}`}>\r\n                                <header className=\"popup-panel__header\">\r\n                                    <span className=\"my-cart-label\">My Cart</span>\r\n                                    <span className=\"total-quantity\">{totalQuantity} {totalQuantity === 1 ? \"item\" : \"items\"}</span>\r\n                                </header>\r\n                                <div ref={popupBodyRef} className=\"popup-panel__body\">\r\n                                    <CartProducts />\r\n                                </div>\r\n                                <footer className=\"popup-panel__footer\">\r\n                                    <div className=\"total-price\">\r\n                                        <span className=\"text\">Total price:</span>\r\n                                        <span className=\"value\">${totalPrice}</span>\r\n                                    </div>\r\n                                    <div className=\"buttons\">\r\n                                        <button className=\"clear-cart-button dark\" onClick={clearCart}>Clear Cart</button>\r\n                                        <button className=\"checkout-button green\" onClick={goToCheckout}>Checkout</button>\r\n                                    </div>\r\n                                </footer>\r\n                            </div>\r\n                            :\r\n                            <div className={`popup-empty-content popup-panel ${isPopupVisible ? \"visible\" : \"hidden\"}`}>\r\n                                Cart is empty\r\n                            </div>}\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport gsap from 'gsap';\r\n\r\nconst Wishlist: FC = () => {\r\n    const { products } = useTypedSelector(root => root.wishList);\r\n    const linkRef = useRef<HTMLAnchorElement>(null);\r\n    const tl = gsap.timeline();\r\n\r\n    useEffect(() => {\r\n        tl.to(linkRef.current, { scale: 1.2, color: \"#96525a\", duration: 0.1 });\r\n        tl.to(linkRef.current, { scale: 1, color: \"#3E454F\", duration: 0.1, \r\n                                 onComplete: () => linkRef.current?.removeAttribute(\"style\") });\r\n    }, [products]);\r\n\r\n    return (\r\n        <NavLink to=\"/wishlist\" \r\n                 className=\"wishlist user-action\" \r\n                 activeClassName=\"selected\"\r\n                 ref={linkRef}>\r\n            <FaHeart className=\"icon\"/>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Wishlist\r\n","import React, { FC } from 'react'\r\nimport Account from './Account'\r\nimport Cart from './Cart'\r\nimport Wishlist from './Wishlist'\r\n\r\nconst UserActions: FC = () => {\r\n    return (\r\n        <div className=\"user-actions\">\r\n            <Account />\r\n            <Wishlist />\r\n            <Cart />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserActions\r\n","import { Category } from '@chec/commerce.js/types/category';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { setSelectedCategoryAction } from '../types/category';\r\n\r\nconst ProductCategories: FC = () => {\r\n    const { categories } = useTypedSelector(root => root.category);\r\n    const [currentCategory, setCurrentCategory] = useState<Category>();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (currentCategory) {\r\n            dispatch(setSelectedCategoryAction(currentCategory));\r\n        }\r\n    }, [currentCategory]);\r\n    \r\n    return (\r\n        <div className=\"product-categories\">\r\n            {categories.map(category =>\r\n                <NavLink to={`/${category.slug}`} className=\"product-category\" key={category.id}\r\n                    isActive={(match) => {\r\n                        if (!match) {\r\n                            return false;\r\n                        }\r\n\r\n                        // wrap in setTimeout to avoid warning\r\n                        setTimeout(() => setCurrentCategory(category), 0);\r\n\r\n                        return true;\r\n                    }}>\r\n                    {category.name}\r\n                </NavLink>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCategories\r\n","import React, { FC, SetStateAction, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { IconType } from 'react-icons/lib';\r\n\r\nexport interface DoubleButtonState {\r\n    icon: IconType;\r\n    title: string;\r\n    activeClassName?: string;\r\n    action?: (() => ActionResults) | (() => Promise<ActionResults>);\r\n}\r\n\r\ninterface DoubleStateButtonProps {\r\n    firstState: DoubleButtonState;\r\n    secondState: DoubleButtonState;\r\n    className?: string;\r\n\r\n    // if you want to toggleState() externally, just pass TRUE value as a property\r\n    changeState?: boolean;\r\n    // and do not forget about setting external state to initial (FALSE)\r\n    setChangeState?: React.Dispatch<SetStateAction<boolean>>;\r\n    additionalClickHandler?: () => void;\r\n    beforeAction?: () => Promise<unknown>;\r\n}\r\n\r\nexport enum ActionResults {\r\n    SUCCESS = \"SUCCESS\",\r\n    FAIL = \"FAIL\"\r\n}\r\n\r\nenum ButtonStateNames {\r\n    FIRST = \"first-state\",\r\n    SECOND = \"second-state\"\r\n}\r\n\r\nconst DoubleStateButton: FC<DoubleStateButtonProps> = (props) => {\r\n    const [buttonState, setButtonState] = useState<DoubleButtonState>(props.firstState);\r\n    const [buttonStateName, setButtonStateName] = useState<ButtonStateNames>(ButtonStateNames.FIRST);\r\n    const [buttonStateIcon, setButtonStateIcon] = useState<IconType>(props.firstState.icon);\r\n\r\n    useEffect(() => {\r\n        if (props.changeState && props.setChangeState) {\r\n            toggleState();\r\n            props.setChangeState(false);\r\n        }\r\n    }, [props.changeState]);\r\n\r\n    const toggleState = () => {\r\n        switch (buttonStateName) {\r\n            case ButtonStateNames.FIRST:\r\n                setButtonState(props.secondState);\r\n                setButtonStateName(ButtonStateNames.SECOND);\r\n                setButtonStateIcon(props.secondState.icon);\r\n                break;\r\n            case ButtonStateNames.SECOND:\r\n                setButtonState(props.firstState);\r\n                setButtonStateName(ButtonStateNames.FIRST);\r\n                setButtonStateIcon(props.firstState.icon);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        Promise.resolve(props.beforeAction?.()).then(() => {\r\n            props.additionalClickHandler?.call({});\r\n\r\n            let action;\r\n    \r\n            switch (buttonStateName) {\r\n                case ButtonStateNames.FIRST:\r\n                    action = props.firstState.action;\r\n                    break;\r\n                case ButtonStateNames.SECOND:\r\n                    action = props.secondState.action;\r\n                    break;\r\n            }\r\n    \r\n            if (action) {\r\n                Promise.resolve(action?.()).then(result => {\r\n                    if (result === ActionResults.SUCCESS) {\r\n                        toggleState();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                toggleState();\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={`double-state-button \r\n                        ${props.className} \r\n                        ${buttonState.activeClassName ? buttonState.activeClassName : \"\"}`} \r\n                        onClick={clickHandler}>\r\n           <span className=\"icon-wrapper\">{buttonStateIcon}</span>\r\n           <span className=\"title\">{buttonState.title}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoubleStateButton\r\n","import React, { SetStateAction, useEffect } from 'react';\r\nimport { FC } from 'react';\r\nimport fk_logo from '../icons/fakestore_logo_short.svg';\r\nimport UserActions from './UserActions';\r\nimport ProductCategories from './ProductCategories';\r\nimport { useState } from 'react';\r\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\r\n\r\ninterface BurgerMenuProps {\r\n    isExpanded: boolean;\r\n    setIsExpanded: React.Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst BurgerMenu: FC<BurgerMenuProps> = ({ isExpanded, setIsExpanded }) => {\r\n    const toggleBurger = () => setIsExpanded(!isExpanded);\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        setIsExpanded(false);\r\n    }, [location.pathname]);\r\n\r\n    return (\r\n        <div className={`burger-menu ${isExpanded ? \"expanded\" : \"\"}`}>\r\n            <div className=\"visible-content\">\r\n                <div className=\"burger-icon\" onClick={toggleBurger}>\r\n                    <span className=\"top line\"/>\r\n                    <span className=\"middle line\"/>\r\n                    <span className=\"bottom line\"/>\r\n                </div>\r\n                <UserActions/>\r\n            </div>\r\n\r\n            <div className=\"expandable-content\">\r\n                <div className=\"menu\">\r\n                    <div className=\"home\">\r\n                        <NavLink to=\"/\" exact>\r\n                            <span className=\"text\">Home</span>\r\n                            <img className=\"icon\" src={fk_logo} alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <span className=\"separator\"/>\r\n                    <ProductCategories/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerMenu\r\n","import React from 'react';\r\nimport { FC } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport ScrollBar from './ScrollBar';\r\nimport { useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport BurgerMenu from './BurgerMenu';\r\nimport ProductCategories from './ProductCategories';\r\nimport UserActions from './UserActions';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\n\r\nconst Header: FC = () => {\r\n    const { percent } = useTypedSelector(root => root.scroll);\r\n    const navbarRef = useRef<HTMLDivElement>(null);\r\n    const location = useLocation();\r\n\r\n    const isMobileScreen = useMediaQuery({ query: \"(max-width: 800px)\" });\r\n    const [isBurgerExpanded, setIsBurgerExpanded] = useState<boolean>(false);\r\n\r\n    const [lastScrollTop, setLastScrollTop] = useState<number>(0);\r\n    const [headerState, setHeaderState] = useState<\"hidden\" | \"visible\">(\"hidden\");\r\n\r\n    const showHeader = () => setHeaderState(\"visible\");\r\n    const hideHeader = () => setHeaderState(\"hidden\");\r\n\r\n    const delta = 5;\r\n    const navbarHeight = navbarRef.current?.offsetHeight || 0;\r\n\r\n    useEffect(() => {\r\n        hasScrolled();\r\n    }, [window.scrollY]);\r\n\r\n    useEffect(() => {\r\n        showHeader();\r\n    }, [location.pathname]);\r\n\r\n    const getDocHeight = () => {\r\n        return Math.max(\r\n            document.body.scrollHeight, document.documentElement.scrollHeight,\r\n            document.body.offsetHeight, document.documentElement.offsetHeight,\r\n            document.body.clientHeight, document.documentElement.clientHeight\r\n        );\r\n    }\r\n\r\n    const hasScrolled = () => {\r\n        const scrollTop = window.scrollY;\r\n\r\n        if (Math.abs(lastScrollTop - scrollTop) <= delta) {\r\n            return;\r\n        }\r\n\r\n        if (scrollTop > lastScrollTop && scrollTop > navbarHeight) {\r\n            // scroll down\r\n            hideHeader();\r\n        } else if (scrollTop < getDocHeight()) {\r\n            // scroll up\r\n            showHeader();\r\n        }\r\n\r\n        setLastScrollTop(scrollTop);\r\n    }\r\n\r\n    return (\r\n        <header ref={navbarRef} \r\n                className={`header ${percent > 0 ? \"not-at-the-top\" : \"at-the-top\"} ${isBurgerExpanded ? \"burger-expanded\" : \"\"} ${isMobileScreen ? headerState : \"\"}`}>\r\n            <ScrollBar />\r\n            <div className=\"container\">\r\n                {\r\n                    isMobileScreen ?\r\n                        <BurgerMenu isExpanded={isBurgerExpanded} setIsExpanded={setIsBurgerExpanded} />\r\n                        :\r\n                        <div className=\"default-menu\">\r\n                            <div className=\"main-logo__container\">\r\n                                <NavLink to=\"/\" exact>\r\n                                    <span className=\"main-logo\" />\r\n                                </NavLink>\r\n                            </div>\r\n                            <ProductCategories />\r\n                            <UserActions />\r\n                        </div>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/github-dark.349f7fa5.svg\";","export default __webpack_public_path__ + \"static/media/vk-dark.dba5bedb.svg\";","export default __webpack_public_path__ + \"static/media/facebook-dark.10df22f9.svg\";","export default __webpack_public_path__ + \"static/media/instagram-dark.5aa6c01b.svg\";","import React, { FC } from 'react';\r\nimport github from '../icons/github-dark.svg';\r\nimport vk from '../icons/vk-dark.svg';\r\nimport facebook from '../icons/facebook-dark.svg';\r\nimport instagram from '../icons/instagram-dark.svg';\r\n\r\nconst Footer: FC = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"credits\">\r\n                    <span>&copy; Rustam, {new Date().getFullYear()}</span>\r\n                </div>\r\n                <div className=\"purpose\">\r\n                    <span>📚 Made for <b>educational</b> purposes only</span>\r\n                </div>\r\n                <div className=\"social-links\">\r\n                    <a className=\"vk social-link\" href=\"https://vk.com/id152544760\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={vk} alt=\"\"/>\r\n                    </a>\r\n                    <a className=\"github social-link\" href=\"https://github.com/sanguinesadness\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={github} alt=\"\"/>\r\n                    </a>\r\n                    <a className=\"facebook social-link\" href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={facebook} alt=\"\"/>\r\n                    </a>\r\n                    <a className=\"instagram social-link\" href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={instagram} alt=\"\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/idea.244c5a38.svg\";","export default __webpack_public_path__ + \"static/media/idea-bg.0f340c03.svg\";","export default __webpack_public_path__ + \"static/media/github.986ff804.svg\";","export default __webpack_public_path__ + \"static/media/wheel-cart.dbd0852d.svg\";","import React, { FC, useRef } from 'react';\r\nimport idea from '../icons/idea.svg';\r\nimport idea_bg from '../icons/idea-bg.svg';\r\nimport github from '../icons/github.svg';\r\nimport cart from '../icons/wheel-cart.svg';\r\nimport { useEffect } from 'react';\r\nimport gsap from 'gsap';\r\n\r\ninterface AboutProps {\r\n    onClickScroll: () => void;\r\n}\r\n\r\nconst About: FC<AboutProps> = ({ onClickScroll }) => {\r\n    const infoRef = useRef<HTMLDivElement>(null);\r\n    const pictureRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo([infoRef.current], { xPercent: -200 }, {\r\n            visibility: \"visible\",\r\n            xPercent: 0,\r\n            ease: \"Power3.inOut\"\r\n        });\r\n\r\n        gsap.fromTo([pictureRef.current], { xPercent: 200 }, {\r\n            visibility: \"visible\",\r\n            xPercent: 0,\r\n            ease: \"Power3.inOut\"\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"info-screen\">\r\n            <div className=\"container\">\r\n                <section className=\"info-section\" ref={infoRef}>\r\n                    <h3 className=\"title\">\r\n                        Welcome to our <span className=\"red-text\">fake store</span>, Stranger!\r\n                    </h3>\r\n                    <div className=\"text\">\r\n                        <p>Here you can buy the highest quality and prettiest goods at prices lower than the market average.</p>\r\n                        <p>\r\n                            Our web platform offers four different categories of products: clothing for <b>men</b>, <b>women</b>, <b>jewelry</b> and even <b>electronics</b>. Interested? Then go agead!\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <a className=\"button with-icon blue\" href=\"https://github.com/sanguinesadness/Store-App-React\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <span>View on GitHub</span>\r\n                            <img src={github} alt=\"\" />\r\n                        </a>\r\n                        <button className=\"with-icon green\" onClick={onClickScroll}>\r\n                            <span>Start shopping</span>\r\n                            <img src={cart} alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"picture-section\" ref={pictureRef}>\r\n                    <img className=\"picture\" src={idea} alt=\"\" />\r\n                    <img className=\"background\" src={idea_bg} alt=\"\" />\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","export default __webpack_public_path__ + \"static/media/updated.619f4ccb.svg\";","import React, { FC } from 'react';\r\nimport update from '../icons/updated.svg';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport category_icons from '../category-icons.json';\r\nimport { CategoryIconInfo } from '../types/categoryIcons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setSelectedCategoryAction } from '../types/category';\r\nimport { setScrollPercentAction } from '../types/scroll';\r\n\r\ninterface CategoryPickerProps {\r\n    reference: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst CategoryPicker: FC<CategoryPickerProps> = (props) => {\r\n    const { categories } = useTypedSelector(root => root.category);\r\n    const categoryIcons: CategoryIconInfo[] = category_icons;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"category-picker\" ref={props.reference}>\r\n            <div className=\"container\">\r\n                <h2 className=\"title\">Pick the one you want the most</h2>\r\n                <div className=\"categories-grid\">\r\n                    {categories.map(category => {\r\n                        const icon = categoryIcons.find(c => c.id == category.id)?.icon;\r\n\r\n                        return (<NavLink to={`/${category.slug}`} className=\"category-item\" key={category.id} onClick={() => {\r\n                            dispatch(setSelectedCategoryAction(category));\r\n                            dispatch(setScrollPercentAction(0));\r\n                        }}>\r\n                            <img src={`${process.env.PUBLIC_URL}/assets/category-icons/${icon}`} alt=\"\" />\r\n                            <span>{category.description ? category.description : category.name}</span>\r\n                        </NavLink>)\r\n                    })}\r\n                </div>\r\n                <div className=\"update-label\">\r\n                    <img src={update} alt=\"\"/>\r\n                    <span>The list will be updated...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryPicker\r\n","import React, { FC, useEffect } from 'react';\r\nimport About from '../About';\r\nimport CategoryPicker from '../CategoryPicker';\r\nimport { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setScrollPercentAction } from '../../types/scroll';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst HomePage: FC = () => {\r\n    const categoryRef = useRef<HTMLDivElement>(null);\r\n    const executeScroll = () => categoryRef.current?.scrollIntoView();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setScrollPercentAction(0));\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"home-page\">\r\n            <About onClickScroll={executeScroll}/>\r\n            <CategoryPicker reference={categoryRef}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import { Product } from '@chec/commerce.js/types/product';\r\n\r\nexport interface WishListState {\r\n    products: Product[];\r\n}\r\n\r\nexport enum WishListActionTypes {\r\n    ADD_TO_WISHLIST = \"ADD_TO_WISHLIST\",\r\n    REMOVE_FROM_WISHLIST = \"REMOVE_FROM_WISHLIST\",\r\n    CLEAR_WISH_LIST = \"REMOVE_WISH_LIST\"\r\n}\r\n\r\ninterface AddToWishlistAction {\r\n    type: WishListActionTypes.ADD_TO_WISHLIST;\r\n    payload: Product;\r\n}\r\n\r\ninterface RemoveFromWishlistAction {\r\n    type: WishListActionTypes.REMOVE_FROM_WISHLIST;\r\n    payload: string;\r\n}\r\n\r\ninterface ClearWishListAction {\r\n    type: WishListActionTypes.CLEAR_WISH_LIST;\r\n}\r\n\r\nexport type WishListAction = AddToWishlistAction | RemoveFromWishlistAction | ClearWishListAction;\r\n\r\n// action-wrappers\r\nexport function addToWishlistAction(product: Product): AddToWishlistAction {\r\n    return {\r\n        type: WishListActionTypes.ADD_TO_WISHLIST,\r\n        payload: product\r\n    };\r\n}\r\n\r\nexport function removeFromWishlistAction(productId: string): RemoveFromWishlistAction {\r\n    return {\r\n        type: WishListActionTypes.REMOVE_FROM_WISHLIST,\r\n        payload: productId\r\n    };\r\n}\r\n\r\nexport function clearWishListAction(): ClearWishListAction {\r\n    return { type: WishListActionTypes.CLEAR_WISH_LIST };\r\n}","import { Product } from '@chec/commerce.js/types/product';\r\nimport React, { FC, SetStateAction, useEffect, useState } from 'react';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { HiCheck } from 'react-icons/hi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { addToCommerceCart, removeFromCommerceCart } from '../store/actions/commerceCart';\r\nimport { addToLocalCartAction, removeFromLocalCartAction } from '../types/localCart';\r\nimport DoubleStateButton, { ActionResults, DoubleButtonState } from './DoubleStateButton';\r\n\r\ninterface AddToCartButtonProps {\r\n    product: Product;\r\n    className?: string;\r\n    additionalClickHandler?: () => void;\r\n}\r\n\r\nconst AddToCartButton: FC<AddToCartButtonProps> = ({ product, className, additionalClickHandler }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { lcartProducts: cartProducts } = useTypedSelector(root => root.localCart);\r\n    const cartProduct = cartProducts.find(cp => cp.product.id === product.id);\r\n    const isInCart = Boolean(cartProduct);\r\n\r\n    // initial value of \"isInCart\" variable\r\n    const [wasInCart] = useState<boolean>(isInCart);\r\n\r\n    const addProductToCart = () => {\r\n        dispatch(addToLocalCartAction(product, 1));\r\n        dispatch(addToCommerceCart(product, 1));\r\n        return ActionResults.SUCCESS;\r\n    }\r\n\r\n    const removeAllProductsFromCart = () => {\r\n        dispatch(removeFromLocalCartAction(product.id, cartProduct ? cartProduct.quantity : 0));\r\n        dispatch(removeFromCommerceCart(product));\r\n        return ActionResults.SUCCESS;\r\n    }\r\n\r\n    const cartButtonStates: [DoubleButtonState, DoubleButtonState] = [\r\n        // Cart button state if product is NOT IN the cart\r\n        {\r\n            icon: FiPlus,\r\n            title: \"Add to cart\",\r\n            activeClassName: \"add-to-cart\",\r\n            action: addProductToCart\r\n        },\r\n        // Cart button state if product is IN the cart\r\n        {\r\n            icon: HiCheck,\r\n            title: `In cart`,\r\n            activeClassName: \"in-cart\",\r\n            action: removeAllProductsFromCart\r\n        }\r\n    ]\r\n\r\n    const [isFirstRender, setIsFirstRender] = useState<boolean>(true);\r\n    const [cartButtonChangeState, setCartButtonChangeState] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        setIsFirstRender(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isInCart && !isFirstRender) {\r\n            setCartButtonChangeState(true);\r\n        }\r\n    }, [isInCart]);\r\n\r\n    return (\r\n        <DoubleStateButton changeState={cartButtonChangeState}\r\n                           setChangeState={setCartButtonChangeState}\r\n                           className={`add-to-cart-button ${className}`}\r\n                           firstState={wasInCart ? cartButtonStates[1] : cartButtonStates[0]}\r\n                           secondState={wasInCart ? cartButtonStates[0] : cartButtonStates[1]} \r\n                           additionalClickHandler={additionalClickHandler}/>\r\n    )\r\n}\r\n\r\nexport default AddToCartButton\r\n","import { Product } from '@chec/commerce.js/types/product';\r\nimport React, { FC, useState } from 'react';\r\nimport { IoMdHeart, IoMdHeartEmpty } from 'react-icons/io';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { addToWishlistAction, removeFromWishlistAction } from '../types/wishList';\r\nimport DoubleStateButton, { ActionResults, DoubleButtonState } from './DoubleStateButton';\r\n\r\ninterface SaveProductButtonProps {\r\n    product: Product;\r\n    className?: string;\r\n    additionalClickHandler?: () => void;\r\n    beforeAction?: () => Promise<unknown>;\r\n}\r\n\r\nconst SaveProductButton: FC<SaveProductButtonProps> = ({ product, className, additionalClickHandler, beforeAction }) => {\r\n    const { products: wishlistProducts } = useTypedSelector(root => root.wishList);\r\n    const wishlistProduct = wishlistProducts.find(wp => wp.id === product.id);\r\n    const isInWishlist = Boolean(wishlistProduct);\r\n\r\n    // initial value of \"isInWishlist\" variable\r\n    const [wasInWishlist] = useState<boolean>(isInWishlist);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addProductToWishlist = () => {\r\n        dispatch(addToWishlistAction(product));\r\n        return ActionResults.SUCCESS;\r\n    }\r\n\r\n    const removeProductFromWishlist = () => {\r\n        dispatch(removeFromWishlistAction(product.id));\r\n        return ActionResults.SUCCESS;\r\n    }\r\n\r\n    const saveButtonStates: [DoubleButtonState, DoubleButtonState] = [\r\n        // Save button state if product is NOT IN the Wish list\r\n        {\r\n            icon: IoMdHeartEmpty,\r\n            title: \"Save\",\r\n            activeClassName: \"save\",\r\n            action: addProductToWishlist\r\n        },\r\n        // Save button state if product is IN the Wish list\r\n        {\r\n            icon: IoMdHeart,\r\n            title: \"Saved\",\r\n            activeClassName: \"saved\",\r\n            action: removeProductFromWishlist\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <DoubleStateButton className={`save-product-button ${className}`}\r\n                           firstState={wasInWishlist ? saveButtonStates[1] : saveButtonStates[0]}\r\n                           secondState={wasInWishlist ? saveButtonStates[0] : saveButtonStates[1]} \r\n                           additionalClickHandler={additionalClickHandler}\r\n                           beforeAction={beforeAction}/>\r\n    )\r\n}\r\n\r\nexport default SaveProductButton\r\n","export enum SortingNames {\r\n    PRICE = \"price\",\r\n    CREATED = \"what's new\",\r\n    NAME = \"name\"\r\n}\r\n\r\nexport interface SortingOption {\r\n    name: SortingNames;\r\n    ascending: boolean;\r\n}\r\n\r\nexport interface SortingOptionState {\r\n    availableOptions: SortingOption[];\r\n    activeOption: SortingOption | null;\r\n}\r\n\r\nexport enum SortingActionTypes {\r\n    SET_AVAILABLE_OPTIONS = \"SET_AVAILABLE_OPTIONS\",\r\n    SET_ACTIVE_OPTION = \"SET_ACTIVE_OPTION\"\r\n}\r\n\r\ninterface SetAvailableSortingOptionsAction {\r\n    type: SortingActionTypes.SET_AVAILABLE_OPTIONS;\r\n    payload: SortingOption[];\r\n}\r\n\r\ninterface SetActiveSortingOptionAction {\r\n    type: SortingActionTypes.SET_ACTIVE_OPTION;\r\n    payload: SortingOption;\r\n}\r\n\r\nexport type SortingOptionAction = SetActiveSortingOptionAction | SetAvailableSortingOptionsAction;\r\n\r\n// action-wrappers\r\nexport function setAvailableSortingOptionsAction(sortingOptions: SortingOption[]): SetAvailableSortingOptionsAction {\r\n    return {\r\n        type: SortingActionTypes.SET_AVAILABLE_OPTIONS,\r\n        payload: sortingOptions\r\n    };\r\n}\r\n\r\nexport function setActiveSortingOptionAction(sortingOption: SortingOption): SetActiveSortingOptionAction {\r\n    return {\r\n        type: SortingActionTypes.SET_ACTIVE_OPTION,\r\n        payload: sortingOption\r\n    }\r\n}","import { Product } from '@chec/commerce.js/types/product';\r\nimport React, { FC } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Img } from 'react-image';\r\nimport { PuffLoader } from 'react-spinners';\r\nimport AddToCartButton from './AddToCartButton';\r\nimport SaveProductButton from './SaveProductButton';\r\nimport gsap from 'gsap';\r\nimport { useRef } from 'react';\r\n\r\ninterface ProductCardProps {\r\n    product: Product;\r\n}\r\n\r\nconst ProductCard: FC<ProductCardProps> = ({ product }) => {\r\n    const { pathname } = useLocation();\r\n    const cardRef = useRef<HTMLDivElement>(null);\r\n\r\n    const hideCard = () => gsap.fromTo(cardRef.current, {\r\n        scale: 1,\r\n        opacity: 1\r\n    }, {\r\n        scale: 0,\r\n        opacity: 0,\r\n        duration: 0.5,\r\n        ease: \"back.inOut(2)\"\r\n    });\r\n\r\n    const animateCardHiding = () => new Promise((resolve, reject) => {\r\n        hideCard().then(() => resolve(\"animation completed\"))\r\n                      .catch(() => reject(\"error occured while animating\"));\r\n    });\r\n    \r\n    return (\r\n        <div className=\"product-card\" ref={cardRef}>\r\n            <div className=\"container\">\r\n                <Link to={`${product.categories[0].slug}/${product.id}`} className=\"product-card__body\">\r\n                    <div className=\"product-picture__wrapper\">\r\n                        <Img className=\"product-picture\"\r\n                             src={product.media.source}\r\n                             alt=\"\"\r\n                             loader={<PuffLoader color=\"#00B389\"/>}/>\r\n                    </div>\r\n                    <div className=\"product-title__wrapper\">\r\n                        <span className=\"product-title\">{product.name}</span>\r\n                    </div>\r\n                    <div className=\"product-price\">{product.price.formatted_with_symbol}</div>\r\n                </Link>\r\n                <footer className=\"product-card__footer\">\r\n                    {\r\n                        pathname.includes(\"wishlist\") ?\r\n                            <SaveProductButton className=\"button light\" product={product}\r\n                                               beforeAction={animateCardHiding}/>\r\n                        :\r\n                            <SaveProductButton className=\"button light\" product={product}/>\r\n                    }\r\n                    <AddToCartButton className=\"button light\" product={product}/>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import { Product } from '@chec/commerce.js/types/product'\r\n\r\nexport interface ProductState {\r\n    products: Product[];\r\n    loading: boolean;\r\n    error: string | null;\r\n}\r\n\r\nexport enum ProductActionTypes {\r\n    FETCH_PRODUCTS = \"FETCH_PRODUCTS\",\r\n    FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\",\r\n    FETCH_PRODUCTS_ERROR = \"FETCH_PRODUCTS_ERROR\"\r\n}\r\n\r\ninterface FetchProductsAction {\r\n    type: ProductActionTypes.FETCH_PRODUCTS;\r\n}\r\n\r\ninterface FetchProductsSuccessAction {\r\n    type: ProductActionTypes.FETCH_PRODUCTS_SUCCESS;\r\n    payload: Product[];\r\n}\r\n\r\ninterface FetchProductsErrorAction {\r\n    type: ProductActionTypes.FETCH_PRODUCTS_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type ProductAction = FetchProductsAction | FetchProductsErrorAction | FetchProductsSuccessAction;\r\n\r\n// action-wrappers\r\nexport function fetchProductsAction(): FetchProductsAction {\r\n    return { type: ProductActionTypes.FETCH_PRODUCTS }\r\n}\r\n\r\nexport function fetchProductsSuccessAction(products: Product[]): FetchProductsSuccessAction {\r\n    return { type: ProductActionTypes.FETCH_PRODUCTS_SUCCESS, payload: products }\r\n}\r\n\r\nexport function fetchProductsErrorAction(error: string): FetchProductsErrorAction {\r\n    return { type: ProductActionTypes.FETCH_PRODUCTS_ERROR, payload: error }\r\n}","import React, { FC, SetStateAction, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveSortingOptionAction, SortingOption as SortingOptionType } from '../types/sortingOption';\r\nimport { FaLongArrowAltUp, FaLongArrowAltDown } from 'react-icons/fa';\r\n\r\ninterface SortingOptionProps {\r\n    sortingOption: SortingOptionType;\r\n    setSelectedOption: React.Dispatch<SetStateAction<SortingOptionType | null>>;\r\n    isSelected: boolean;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst SortingOption: FC<SortingOptionProps> = ({ sortingOption, setSelectedOption, isSelected, disabled }) => {\r\n    const dispatch = useDispatch();\r\n    const [optionState, setOptionState] = useState<SortingOptionType>(sortingOption);\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveSortingOptionAction(optionState));\r\n    }, [optionState]);\r\n\r\n    const clickHandler = () => {\r\n        if (disabled) {\r\n            return;\r\n        }\r\n\r\n        if (isSelected) {\r\n            setOptionState({ ...optionState, ascending: !optionState.ascending });\r\n        }\r\n        else {\r\n            setSelectedOption(optionState);\r\n            dispatch(setActiveSortingOptionAction(optionState));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`sorting-option ${disabled ? \"disabled\" : isSelected ? \"selected\" : \"\"}`} onClick={clickHandler}>\r\n            <span className=\"name\">{optionState.name}</span>\r\n            <span className=\"type\">\r\n                {optionState.ascending ? <FaLongArrowAltUp/> : <FaLongArrowAltDown/>}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortingOption\r\n","import React, {FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { SortingOption as SortingOptionType, SortingOptionAction, SortingOptionState } from '../types/sortingOption';\r\nimport SortingOption from './SortingOption';\r\n\r\ninterface SortingOptionsProps {\r\n    disabled?: boolean;\r\n}\r\n\r\nconst SortingOptions: FC<SortingOptionsProps> = ({ disabled }) => {\r\n    const { availableOptions, activeOption } = useTypedSelector(root => root.sorting);\r\n\r\n    const [selectedOption, setSelectedOption] = useState<SortingOptionType | null>(activeOption);\r\n\r\n    useEffect(() => {\r\n        setSelectedOption(activeOption);\r\n    }, [activeOption]);\r\n    \r\n    return (\r\n        <div className=\"sorting-options\">\r\n            {availableOptions.map(option => \r\n                <SortingOption key={option.name} \r\n                               sortingOption={option}\r\n                               setSelectedOption={setSelectedOption}\r\n                               isSelected={Boolean(selectedOption && option.name === selectedOption.name)}\r\n                               disabled={disabled}/>    \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortingOptions","import { Product } from '@chec/commerce.js/types/product';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport ProductCard from './ProductCard';\r\nimport ReactLoading from 'react-loading';\r\nimport { SortingNames } from '../types/sortingOption';\r\nimport { BsInfoSquareFill } from 'react-icons/bs';\r\nimport SortingOptions from './SortingOptions';\r\n\r\ninterface ProductsGridProps {\r\n    name: string;\r\n    products: Product[];\r\n    emptyErrorMsg?: string;\r\n}\r\n\r\nconst ProductsGrid: FC<ProductsGridProps> = ({ name, products, emptyErrorMsg }) => {\r\n    const sortingState = useTypedSelector(root => root.sorting);\r\n    const productState = useTypedSelector(root => root.product);\r\n    const cartState = useTypedSelector(root => root.commerceCart);\r\n\r\n    const sortingHandler = (product1: Product, product2: Product): number => {\r\n        if (!sortingState.activeOption) {\r\n            return 1;\r\n        }\r\n\r\n        let num1, num2;\r\n\r\n        if (sortingState.activeOption.ascending) {\r\n            num1 = 1;\r\n            num2 = -1;\r\n        }\r\n        else {\r\n            num1 = -1;\r\n            num2 = 1;\r\n        }\r\n\r\n        switch (sortingState.activeOption.name) {\r\n            case SortingNames.CREATED:\r\n                return product1.created > product2.created ? num1 : num2;\r\n            case SortingNames.PRICE:\r\n                return product1.price.raw > product2.price.raw ? num1 : num2;\r\n            case SortingNames.NAME:\r\n                return product1.name > product2.name ? num1 : num2;\r\n            default:\r\n                return 1;\r\n        }\r\n    }\r\n\r\n    const [sortingDisabled, setSortingDisabled] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n        if (productState.loading) {\r\n            setSortingDisabled(true);\r\n        }\r\n        else {\r\n            setSortingDisabled(Boolean(products.length === 0));\r\n        }\r\n    }, [productState.products]);\r\n\r\n    useEffect(() => {\r\n        if (products.length === 0) {\r\n            setSortingDisabled(true);\r\n        }\r\n        else {\r\n            setSortingDisabled(false);\r\n        }\r\n    }, [products.length]);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"products-grid-header\">\r\n                <div className=\"info\">\r\n                    <span className=\"title\">{name}</span>\r\n                    <span className=\"amount\">{products.length}</span>\r\n                </div>\r\n                <SortingOptions disabled={sortingDisabled}/>\r\n            </header>\r\n            <div className=\"products-grid__wrapper\">\r\n                {\r\n                    productState.loading || cartState.loading ?\r\n                        <div className=\"page-loading\">\r\n                            <ReactLoading type=\"bubbles\" className=\"products-grid-loading loading-spinner\"/>\r\n                        </div>\r\n                    :\r\n                    productState.error ?\r\n                        <div className=\"page-error products-grid-error\">\r\n                            <BsInfoSquareFill className=\"icon\" />\r\n                            <span className=\"message\">{productState.error}</span>\r\n                        </div>\r\n                    :\r\n                    products.length > 0 ?\r\n                        <div className=\"products-grid\">\r\n                            {products.sort(sortingHandler).map(product =>\r\n                                <ProductCard key={product.id} product={product}/>\r\n                            )}\r\n                        </div>\r\n                    :\r\n                        <div className=\"page-error products-grid-empty-message\">\r\n                            <BsInfoSquareFill className=\"icon\" />\r\n                            <span className=\"text\">{emptyErrorMsg || \"List is empty\"}</span>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductsGrid;","import React, { FC } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport ProductsGrid from '../ProductsGrid';\r\nimport { useEffect } from 'react';\r\nimport { setScrollPercentAction } from '../../types/scroll';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { Product } from '@chec/commerce.js/types/product';\r\nimport { SortingOption, SortingNames, setAvailableSortingOptionsAction, setActiveSortingOptionAction } from '../../types/sortingOption';\r\n\r\n// sorting options for products in the grid\r\nconst categoryPageSortingOptions: SortingOption[] = [\r\n    {\r\n        name: SortingNames.CREATED,\r\n        ascending: true\r\n    },\r\n    {\r\n        name: SortingNames.PRICE,\r\n        ascending: true\r\n    }\r\n]\r\n\r\nconst CategoryPage: FC = () => {\r\n    const { selectedCategory } = useTypedSelector(root => root.category);\r\n    const { products } = useTypedSelector(root => root.product);\r\n\r\n    // products from Selected Category\r\n    const [categoryProducts, setCategoryProducts] = useState<Product[]>([]);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setAvailableSortingOptionsAction(categoryPageSortingOptions));\r\n        dispatch(setActiveSortingOptionAction(categoryPageSortingOptions[0]));\r\n        dispatch(setScrollPercentAction(0));\r\n\r\n        if (selectedCategory) {\r\n            const cProducts: Product[] = [];\r\n\r\n            // select products from Selected Category\r\n            products.forEach(product => {\r\n                product.categories.forEach(category => {\r\n                    if (category.id === selectedCategory.id) {\r\n                        cProducts.push(product);\r\n                    }\r\n                });\r\n            });\r\n\r\n            setCategoryProducts(cProducts);\r\n        }\r\n    }, [products])\r\n\r\n    if (!selectedCategory) {\r\n        history.push(\"/\");\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div id=\"category-page\">\r\n            <ProductsGrid products={categoryProducts} \r\n                          emptyErrorMsg=\"This category is currently empty\"\r\n                          name={selectedCategory?.name || \"\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryPage;","import { Dispatch } from \"react\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { ProductAction, fetchProductsSuccessAction, fetchProductsAction, fetchProductsErrorAction } from \"../../types/product\";\r\n\r\nexport const fetchProducts = () => {\r\n    return async (dispatch: Dispatch<ProductAction>) => {\r\n        try {\r\n            dispatch(fetchProductsAction());\r\n    \r\n            const response = await commerce.products.list();\r\n    \r\n            dispatch(fetchProductsSuccessAction(response.data));\r\n        }\r\n        catch (error) {\r\n            dispatch(fetchProductsErrorAction(error.message));\r\n        }\r\n    }\r\n}","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { setScrollPercentAction } from '../../types/scroll';\r\nimport { setActiveSortingOptionAction, setAvailableSortingOptionsAction, SortingNames, SortingOption } from '../../types/sortingOption';\r\nimport ProductsGrid from '../ProductsGrid';\r\n\r\n// sorting options for products in the grid\r\nconst wishlistPageSortingOptions: SortingOption[] = [\r\n    {\r\n        name: SortingNames.NAME,\r\n        ascending: true\r\n    },\r\n    {\r\n        name: SortingNames.PRICE,\r\n        ascending: true\r\n    }\r\n]\r\n\r\nconst WishlistPage: FC = () => {\r\n    const { products } = useTypedSelector(root => root.wishList);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setAvailableSortingOptionsAction(wishlistPageSortingOptions));\r\n        dispatch(setActiveSortingOptionAction(wishlistPageSortingOptions[0]));\r\n        dispatch(setScrollPercentAction(0));\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"wishlist-page\">\r\n            <ProductsGrid products={products} \r\n                          emptyErrorMsg=\"Wishlist is empty\"\r\n                          name=\"Saved products\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WishlistPage\r\n","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { BsTriangleFill } from 'react-icons/bs';\r\nimport Magnifier from 'react-magnifier';\r\n\r\nexport interface IndexedImage {\r\n    //! index must be unique\r\n    index: number;\r\n    source: string;\r\n}\r\n\r\ninterface ImageViewerProps {\r\n    images: IndexedImage[];\r\n    type: \"switcher\" | \"image-only\";\r\n}\r\n\r\nconst ImageViewer: FC<ImageViewerProps> = ({ images, type }) => {\r\n    const switcherRef = useRef<HTMLDivElement>(null);\r\n\r\n    // Item height in CSS is 100ps by default (with margin)\r\n    const switcherItemHeight = 100;\r\n\r\n    const [selectedImage, setSelectedImage] = useState<IndexedImage>(images[0]);\r\n    const [backArrowDisabled, setBackArrowDisabled] = useState<boolean>(false);\r\n    const [forwardArrowDisabled, setForwardArrowDisabled] = useState<boolean>(false);\r\n\r\n    const isImageSelected = (src: string) => selectedImage.source === src;\r\n\r\n    const updateCarouselArrows = () => {\r\n        setBackArrowDisabled(selectedImage.index === 0);\r\n        setForwardArrowDisabled(selectedImage.index === images.length - 1);\r\n    }\r\n\r\n    const scrollBack = () => {\r\n        if (!switcherRef.current) {\r\n            return;\r\n        }\r\n\r\n        setPrevImage();\r\n\r\n        switcherRef.current.scrollTo({\r\n            top: switcherRef.current.scrollTop - switcherItemHeight,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    const scrollForward = () => {\r\n        if (!switcherRef.current) {\r\n            return;\r\n        }\r\n\r\n        setNextImage();\r\n\r\n        switcherRef.current.scrollTo({\r\n            top: switcherRef.current.scrollTop + switcherItemHeight,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    const setNextImage = () => {\r\n        if (selectedImage.index >= images.length - 1) {\r\n            return;\r\n        }\r\n\r\n        setSelectedImage(images[selectedImage.index + 1]);\r\n    }\r\n    \r\n    const setPrevImage = () => {\r\n        if (selectedImage.index < 1) {\r\n            return;\r\n        }\r\n\r\n        setSelectedImage(images[selectedImage.index - 1]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateCarouselArrows();\r\n    }, [selectedImage]);\r\n\r\n    useEffect(() => {\r\n        setSelectedImage(images[0]);\r\n    }, [images]);\r\n\r\n    return (\r\n        <div className={`image-viewer ${type}`}>\r\n            {\r\n                type === \"switcher\" ? \r\n                    <>\r\n                        <div className=\"carousel\">\r\n                            <span className={`back-arrow__wrapper ${backArrowDisabled ? \"disabled\" : \"\"}`}\r\n                                onClick={scrollBack}>\r\n                                <BsTriangleFill className=\"arrow\" />\r\n                            </span>\r\n                            <div className=\"switcher\" ref={switcherRef}>\r\n                                {images.map(image => (\r\n                                    <div key={image.index} className={`switcher-item ${isImageSelected(image.source) ? \"selected\" : \"\"}`}\r\n                                        onClick={() => setSelectedImage(image)}>\r\n                                        <span className=\"selection-indicator\" />\r\n                                        <img src={image.source} alt=\"\" className=\"image\" />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <span className={`forward-arrow__wrapper ${forwardArrowDisabled ? \"disabled\" : \"\"}`}\r\n                                onClick={scrollForward}>\r\n                                <BsTriangleFill className=\"arrow\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"selected-image__wrapper\">\r\n                            <Magnifier src={selectedImage.source}\r\n                                zoomFactor={1.1}\r\n                                mgShape=\"circle\"\r\n                                mgTouchOffsetX={0}\r\n                                mgMouseOffsetY={0} />\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <span className={`back-arrow__wrapper ${backArrowDisabled ? \"disabled\" : \"\"}`}\r\n                            onClick={setPrevImage}>\r\n                            <BsTriangleFill className=\"arrow\" />\r\n                        </span>\r\n                        <div className=\"selected-image__wrapper\">\r\n                            <Magnifier src={selectedImage.source}\r\n                                zoomFactor={1.1}\r\n                                mgShape=\"circle\"\r\n                                mgTouchOffsetX={0}\r\n                                mgMouseOffsetY={0} />\r\n                        </div>\r\n                        <span className={`forward-arrow__wrapper ${forwardArrowDisabled ? \"disabled\" : \"\"}`}\r\n                            onClick={setNextImage}>\r\n                            <BsTriangleFill className=\"arrow\" />\r\n                        </span>\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer\r\n","import { Product } from '@chec/commerce.js/types/product';\r\nimport React, { FC, useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport AddToCartButton from './AddToCartButton';\r\nimport ImageViewer, { IndexedImage } from './ImageViewer';\r\nimport SaveProductButton from './SaveProductButton';\r\nimport gsap from 'gsap';\r\nimport MediaQuery, { useMediaQuery } from 'react-responsive';\r\n\r\ninterface ProductInfoProps {\r\n    product: Product;\r\n}\r\n\r\nconst ProductInfo: FC<ProductInfoProps> = ({ product }) => {\r\n    let productImages: IndexedImage[] = product.assets.map((asset, index) => (\r\n        { index: index, source: asset.url }\r\n    ));\r\n\r\n    const isMediumScreen = useMediaQuery({ query: \"(max-width: 1120px)\" });\r\n\r\n    const infoRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(infoRef.current, { \r\n            opacity: 0\r\n        }, { \r\n            opacity: 1,\r\n            ease: \"back.inOut(1)\"\r\n        });\r\n    }, [product]);\r\n\r\n    return (\r\n        <div className=\"product-info\" ref={infoRef}>\r\n            <div className=\"sections\">\r\n                <section className=\"left-section\">\r\n                    <MediaQuery maxWidth={800}>\r\n                        <div className=\"price-block\">\r\n                            <h2 className=\"price-value\">{product.price.formatted_with_symbol}</h2>\r\n                            <span className=\"special-offer-label\">no special offers</span>\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <ImageViewer images={productImages} \r\n                                 type={isMediumScreen ? \"image-only\" : \"switcher\"}/>\r\n                </section>\r\n                <section className=\"right-section\">\r\n                    <MediaQuery minWidth={801}>\r\n                        <div className=\"price-block\">\r\n                            <h2 className=\"price-value\">{product.price.formatted_with_symbol}</h2>\r\n                            <span className=\"special-offer-label\">no special offers</span>\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <div className=\"details-block\">\r\n                        <h4 className=\"title\">Details</h4>\r\n                        <div className=\"text__wrapper\">\r\n                            <span className=\"text\" dangerouslySetInnerHTML={{__html: product.description}}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"buttons-block\">\r\n                        <SaveProductButton className=\"button dark\" product={product}/>\r\n                        <AddToCartButton className=\"button green\" product={product}/>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo\r\n","import { Product } from '@chec/commerce.js/types/product';\r\nimport React, { FC, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { BsTriangleFill } from 'react-icons/bs';\r\nimport { Img } from 'react-image';\r\nimport { Link } from 'react-router-dom';\r\nimport { PuffLoader } from 'react-spinners';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport gsap from 'gsap';\r\n\r\ninterface RelatedProductsProps {\r\n    product: Product;\r\n    type: \"switcher\" | \"list\";\r\n}\r\n\r\nconst RelatedProducts: FC<RelatedProductsProps> = ({ product, type }) => {\r\n    const { products: allProducts } = useTypedSelector(root => root.product);\r\n\r\n    const getProductCategorySlug = (prod: Product): string => {\r\n        const result = allProducts.find(p => p.id === prod.id)?.categories[0].slug;\r\n        return result || \"\";\r\n    }\r\n\r\n    const [backArrowDisabled, setBackArrowDisabled] = useState<boolean>(false);\r\n    const [forwardArrowDisabled, setForwardArrowDisabled] = useState<boolean>(false);\r\n\r\n    //* from CSS: Item width is 150px and its Right margin is 50px = 200px\r\n    //! always provide accurate value\r\n    const listItemWidth = 200;\r\n    const listRef = useRef<HTMLDivElement>(null);\r\n\r\n    const updateCarouselArrows = (scrollPos: number) => {\r\n        if (!listRef.current) {\r\n            return;\r\n        }\r\n\r\n        const scrollPercent = scrollPos / (listRef.current?.scrollWidth - listRef.current?.clientWidth) * 100;\r\n        const isPercentNan = isNaN(scrollPercent);\r\n\r\n        setBackArrowDisabled(isPercentNan || scrollPercent <= 0);\r\n        setForwardArrowDisabled(isPercentNan || scrollPercent >= 100);\r\n    }\r\n\r\n    const scrollBack = () => {\r\n        if (!listRef.current || backArrowDisabled) {\r\n            return;\r\n        }\r\n\r\n        listRef.current.scrollTo({\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n\r\n        updateCarouselArrows(0);\r\n    }\r\n\r\n    const scrollForward = () => {\r\n        if (!listRef.current || forwardArrowDisabled) {\r\n            return;\r\n        }\r\n\r\n        let nextPos = listRef.current.scrollLeft + listItemWidth;\r\n\r\n        listRef.current.scrollTo({\r\n            left: nextPos,\r\n            behavior: \"smooth\"\r\n        });\r\n\r\n        updateCarouselArrows(nextPos);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (listRef.current) {\r\n            updateCarouselArrows(listRef.current?.scrollLeft);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        gsap.fromTo(listRef.current, { \r\n            opacity: 0\r\n        }, { \r\n            opacity: 1,\r\n            ease: \"back.inOut(1)\"\r\n        });\r\n    }, [product]);\r\n\r\n    return (\r\n        <div className={`related-products__wrapper ${type}`}>\r\n            <h4 className=\"title\">Related Products</h4>\r\n            <div className=\"container\">\r\n                <span className={`back-arrow__wrapper ${backArrowDisabled ? \"disabled\" : \"\"}`}\r\n                    onClick={scrollBack}>\r\n                    <BsTriangleFill className=\"arrow\" />\r\n                </span>\r\n                <div className=\"related-products\" ref={listRef}>\r\n                    {product.related_products.map((prod, index) => (\r\n                        <Link to={`/${getProductCategorySlug(prod)}/${prod.id}`} key={index} className=\"related-product\">\r\n                            <div className=\"container\">\r\n                                {\r\n                                    type === \"list\" ?\r\n                                        <>\r\n                                            <div className=\"left-section\">\r\n                                                <span className=\"product-name\">{prod.name}</span>\r\n                                                <span className=\"product-price\">{prod.price.formatted_with_symbol}</span>\r\n                                            </div>\r\n                                            <div className=\"right-section\">\r\n                                                <div className=\"product-picture__wrapper\">\r\n                                                    <Img className=\"product-picture\"\r\n                                                        src={prod.media.source}\r\n                                                        alt=\"\"\r\n                                                        loader={<PuffLoader color=\"#DDDDDD\" />} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <div className=\"product-picture__wrapper\">\r\n                                                <Img className=\"product-picture\"\r\n                                                    src={prod.media.source}\r\n                                                    alt=\"\"\r\n                                                    loader={<PuffLoader color=\"#DDDDDD\" />} />\r\n                                            </div>\r\n                                            <span className=\"product-name\">{prod.name}</span>\r\n                                            <span className=\"product-price\">{prod.price.formatted_with_symbol}</span>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                            <span className=\"selection-indicator\" />\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n                <span className={`fading left-side ${backArrowDisabled ? \"hidden\" : \"\"}`}/>\r\n                <span className={`fading right-side ${forwardArrowDisabled ? \"hidden\" : \"\"}`}/>\r\n                <span className={`forward-arrow__wrapper ${forwardArrowDisabled ? \"disabled\" : \"\"}`}\r\n                    onClick={scrollForward}>\r\n                    <BsTriangleFill className=\"arrow\" />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RelatedProducts\r\n","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport ReactLoading from 'react-loading';\r\nimport { useState } from 'react';\r\nimport { Product } from '@chec/commerce.js/types/product';\r\nimport { BsInfoSquareFill } from 'react-icons/bs';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setScrollPercentAction } from '../../types/scroll';\r\nimport { FiChevronRight } from 'react-icons/fi';\r\nimport ProductInfo from '../ProductInfo';\r\nimport RelatedProducts from '../RelatedProducts';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\ninterface ProductPageParams {\r\n    id: string;\r\n}\r\n\r\nconst ProductPage: FC = () => {\r\n    const { pathname } = useLocation();\r\n    const params = useParams<ProductPageParams>();\r\n    const dispatch = useDispatch();\r\n\r\n    const isMobileScreen = useMediaQuery({ query: \"(max-width: 800px)\" });\r\n\r\n    const { products, loading, error } = useTypedSelector(root => root.product);\r\n    const { selectedCategory } = useTypedSelector(root => root.category);\r\n\r\n    const [selectedProduct, setSelectedProduct] = useState<Product>();\r\n\r\n    useEffect(() => {\r\n        setSelectedProduct(products.find(product => product.id === params.id));\r\n    }, [products, pathname]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setScrollPercentAction(0));\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"product-page\">\r\n            {\r\n                loading ?\r\n                    <div className=\"page-loading\">\r\n                        <ReactLoading type=\"bubbles\" className=\"product-page-loading loading-spinner\"/>\r\n                    </div>\r\n                : selectedProduct ?\r\n                    <div className=\"content\">\r\n                        <header className=\"product-page-header\">\r\n                            <NavLink className=\"category-name\" to={`/${selectedCategory?.slug}`}>\r\n                                {selectedCategory?.name || \"\"}\r\n                            </NavLink>\r\n                            <FiChevronRight className=\"separator\"/>\r\n                            <span className=\"product-name\">{selectedProduct.name}</span>\r\n                        </header>\r\n                        <ProductInfo product={selectedProduct}/>\r\n                        <RelatedProducts product={selectedProduct}\r\n                                         type={isMobileScreen ? \"list\" : \"switcher\"}/>\r\n                    </div>\r\n                : \r\n                    <div className=\"product-page-error page-error\">\r\n                        <BsInfoSquareFill className=\"icon\" />\r\n                        <span className=\"message\">{error || \"Error occured while loading product info. Please try again\"}</span>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface ScrollToTopProps {\r\n    isScrollSmooth?: boolean;\r\n}\r\n\r\n// scroll to top on page switch\r\nconst ScrollToTop: FC<ScrollToTopProps> = ({ isScrollSmooth }) => {\r\n    const { pathname } = useLocation();\r\n\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"auto\"\r\n        });\r\n    }\r\n\r\n    const [prevPathname, setPrevPathname] = useState<string>(pathname);\r\n\r\n    // return TRUE if Current pathname and Previous pathname both included \"prod\"\r\n    const isWithinProductPage = () => pathname.includes(\"prod\") && prevPathname.includes(\"prod\");\r\n\r\n    useEffect(() => {\r\n        if (isScrollSmooth || isWithinProductPage()) {\r\n            // enable Smooth-scrolling\r\n            document.querySelector(\"html\")?.setAttribute(\"style\", \"scroll-behavior: smooth;\");\r\n        }\r\n        else {\r\n            // disable Smooth-scrolling\r\n            document.querySelector(\"html\")?.setAttribute(\"style\", \"scroll-behavior: auto;\");\r\n            \r\n        }\r\n\r\n        scrollToTop();\r\n        document.querySelector(\"html\")?.removeAttribute(\"style\");\r\n\r\n        setPrevPathname(pathname);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default ScrollToTop\r\n","import React, { FC } from 'react';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface ContentBlockProps {\r\n    title?: string;\r\n    className?: string;\r\n    children: ReactNode;\r\n}\r\n\r\nconst ContentBlock: FC<ContentBlockProps> = ({ title, className, children } ) => {\r\n    return (\r\n        <div className={`content-block ${className}`}>\r\n            {\r\n                title ?\r\n                <span className=\"content-block__title\">{title}</span>\r\n                :\r\n                <></>\r\n            }\r\n            \r\n            <div className=\"content-block__body\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentBlock\r\n","import React, { FC, SetStateAction } from 'react';\r\nimport { SelectOption } from './SelectInput';\r\n\r\ninterface SelectInputOptionsProps {\r\n    options: SelectOption[];\r\n    selectedOption: SelectOption | undefined;\r\n    setSelectedOption: React.Dispatch<SetStateAction<SelectOption | undefined>>;\r\n}\r\n\r\nconst SelectInputOptions: FC<SelectInputOptionsProps> = ({ options, setSelectedOption, selectedOption }) => {\r\n    return (\r\n        <div className=\"select-options\">\r\n            {\r\n                options.length > 0 ? \r\n                options.map(option => (\r\n                    <span className={`select-option ${selectedOption?.id === option.id ? \"selected\" : \"\"}`}\r\n                          onClick={() => setSelectedOption(option)}\r\n                          key={option.id}>\r\n                        <span className=\"id\" hidden>{option.id}</span>\r\n                        <span className=\"value\">{option.value}</span>\r\n                    </span>\r\n                ))\r\n                :\r\n                <span className=\"empty-label\">Not found</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectInputOptions\r\n","import React, { FC, useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { BsFillCaretDownFill } from 'react-icons/bs';\r\nimport SelectInputOptions from './SelectInputOptions';\r\n\r\nexport interface SelectOption {\r\n    id: number | string;\r\n    value: number | string;\r\n}\r\n\r\ninterface SelectInputProps {\r\n    label?: string;\r\n    options: SelectOption[];\r\n    selectedOptionId?: number | string;\r\n    placeholder?: string;\r\n    onChange?: (event: SelectInputEvent) => void;\r\n}\r\n\r\nexport interface SelectInputEvent {\r\n    option: SelectOption | undefined;\r\n}\r\n \r\nconst SelectInput: FC<SelectInputProps> = ({ label, options, placeholder, selectedOptionId, onChange }) => {\r\n    const [visibleOptions, setVisibleOptions] = useState<SelectOption[]>(options);\r\n    const [selectedOption, setSelectedOption] = useState<SelectOption | undefined>(options.find(op => op.id === selectedOptionId));\r\n    const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n    const [searchValue, setSearchValue] = useState<string>(\"\");\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n    function useOutsideAlerter(ref: React.RefObject<HTMLDivElement>) {\r\n        useEffect(() => {\r\n            // if clicked on outside of element\r\n            function handleClickOutside(event: MouseEvent) {\r\n                if (ref.current && !ref.current.contains(event.target as Node)) {\r\n                    setIsExpanded(false);\r\n                }\r\n            }\r\n    \r\n            // bind the event listener\r\n            document.addEventListener(\"click\", handleClickOutside);\r\n            return () => {\r\n                // unbind the event listener on clean up\r\n                document.removeEventListener(\"click\", handleClickOutside);\r\n            };\r\n        }, [ref]);\r\n    }\r\n\r\n    useOutsideAlerter(wrapperRef);\r\n\r\n    useEffect(() => {\r\n        setVisibleOptions(options);\r\n    }, [options]);\r\n\r\n    useEffect(() => {\r\n        setIsExpanded(false);\r\n\r\n        onChange?.call(null, { option: selectedOption });\r\n    }, [selectedOption]);\r\n\r\n    useEffect(() => {\r\n        const filteredOptions = options.filter(op => \r\n            op.value.toLocaleString().toLowerCase().includes(searchValue.toLowerCase())\r\n        );\r\n\r\n        setVisibleOptions(filteredOptions);\r\n    }, [searchValue]);\r\n\r\n    useEffect(() => {\r\n        if (isExpanded) {\r\n            setSearchValue(\"\");\r\n        }\r\n    }, [isExpanded]);\r\n\r\n    return (\r\n        <div className={`select-input ${isExpanded ? \"expanded\" : \"\"}`}\r\n             ref={wrapperRef}>\r\n            <div className=\"visible-content\">\r\n                {\r\n                    label ?\r\n                        <span className=\"label\">{label}</span>\r\n                    : <></>\r\n                }\r\n                <div className=\"selected-option-area\"\r\n                     onClick={() => setIsExpanded(!isExpanded)}>\r\n                    <span className=\"selected-value\">\r\n                        {\r\n                            selectedOption ?\r\n                                <span className=\"value\">{selectedOption.value}</span>\r\n                            :\r\n                                <span className=\"placeholder\">{placeholder || \"Select one option\"}</span>\r\n                        }\r\n                    </span>\r\n                    <BsFillCaretDownFill className=\"expand-icon\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"expandable-content\">\r\n                <div className=\"content\">\r\n                    <input className=\"search-input\" \r\n                           type=\"text\" \r\n                           placeholder=\"Search\" \r\n                           value={searchValue}\r\n                           onChange={(e) => setSearchValue(e.currentTarget.value)}/>\r\n                    <SelectInputOptions options={visibleOptions} \r\n                                        selectedOption={selectedOption}\r\n                                        setSelectedOption={setSelectedOption}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","import React, { FC, SetStateAction } from 'react';\r\nimport { IconType } from 'react-icons/lib';\r\nimport { RadioOption } from './RadioInput';\r\n\r\ninterface RadioInputOptionsProps {\r\n    options: RadioOption[];\r\n    selectedOption: RadioOption | undefined;\r\n    setSelectedOption: React.Dispatch<SetStateAction<RadioOption | undefined>>;\r\n}\r\n\r\nconst RadioInputOptions: FC<RadioInputOptionsProps> = ({ options, selectedOption, setSelectedOption }) => {\r\n    return (\r\n        <div className=\"radio-options\">\r\n            {\r\n                options.map(option => (\r\n                    <div key={option.id} \r\n                         className={`radio-option ${selectedOption?.id === option.id ? \"selected\" : \"\"}`}\r\n                         onClick={() => setSelectedOption(option)}>\r\n                        <div className=\"check-circle__wrapper\">\r\n                            <div className=\"check-circle\" />\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <div className=\"left-side\">\r\n                                <span className=\"main-title\">{option.title}</span>\r\n                                { option.subTitle ? <span className=\"sub-title\">{option.subTitle}</span> : <></> }\r\n                            </div>\r\n                            <div className=\"right-side\">\r\n                                {\r\n                                    option.icon ?\r\n                                        <span className=\"icon\">\r\n                                            {React.createElement(option.icon as IconType)}\r\n                                        </span>\r\n                                    : <></>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioInputOptions\r\n","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { IconType } from 'react-icons';\r\nimport RadioInputOptions from './RadioInputOptions';\r\n\r\nexport interface RadioOption {\r\n    id: number | string;\r\n    title: number | string;\r\n    subTitle?: number | string;\r\n    icon?: IconType;\r\n}\r\n\r\nexport interface RadioInputEvent {\r\n    option: RadioOption | undefined;\r\n}\r\n\r\ninterface RadioInputProps {\r\n    label?: string;\r\n    options: RadioOption[];\r\n    selectedOptionId?: number | string;\r\n    onChange?: (event: RadioInputEvent) => void;\r\n}\r\n\r\nconst RadioInput: FC<RadioInputProps> = ({ label, options, onChange, selectedOptionId }) => {\r\n    const [selectedOption, setSelectedOption] = useState<RadioOption | undefined>(\r\n        options.find(op => op.id === selectedOptionId)\r\n    );\r\n\r\n    useEffect(() => {\r\n        onChange?.call(null, { option: selectedOption });\r\n    }, [selectedOption]);\r\n\r\n    return (\r\n        <div className=\"radio-input\">\r\n            {\r\n                label ? \r\n                    <span className=\"label\">{label}</span>\r\n                : <></>\r\n            }\r\n            <RadioInputOptions options={options}\r\n                               selectedOption={selectedOption}\r\n                               setSelectedOption={setSelectedOption}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioInput\r\n","import React, { FC } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Cards, { Focused } from 'react-credit-cards';\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\n\r\nexport interface CreditCardEvent {\r\n    number: string | number;\r\n    name: string;\r\n    expiry: string | number;\r\n    cvc: string | number;\r\n}\r\n\r\ninterface CreditCardInputProps {\r\n    onChange?: (event: CreditCardEvent) => void;\r\n}\r\n\r\nconst CreditCardInput: FC<CreditCardInputProps> = ({ onChange }) => {\r\n    const [number, setNumber] = useState<string | number>(\"\");\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [expiry, setExpiry] = useState<string | number>(\"\");\r\n    const [cvc, setCvc] = useState<string | number>(\"\");\r\n    const [focus, setFocus] = useState<Focused>();\r\n\r\n    const onFocusEventHandler = (event: React.FocusEvent<HTMLInputElement>) => {\r\n        setFocus(event.target.name as Focused);\r\n    }\r\n\r\n    useEffect(() => {\r\n        onChange?.call(null, { number, name, expiry, cvc });\r\n    }, [number, name, expiry, cvc]);\r\n\r\n    return (\r\n        <div className=\"credit-card-input\">\r\n            <Cards cvc={cvc}\r\n                expiry={expiry}\r\n                name={name}\r\n                number={number} \r\n                focused={focus}/>\r\n            <form name=\"credit-card-form\">\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"number\">Card Number</label>\r\n                    <input type=\"tel\" \r\n                           name=\"number\" \r\n                           placeholder=\"4242 4242 4242 4242\" \r\n                           pattern=\"[\\d| ]{16,22}\"\r\n                           maxLength={20}\r\n                           required\r\n                           value={number}\r\n                           onFocus={onFocusEventHandler}\r\n                           onChange={(e) => setNumber(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"name\">Cardholder</label> \r\n                    <input type=\"text\" \r\n                           name=\"name\" \r\n                           placeholder=\"John Smith\"\r\n                           required\r\n                           value={name}\r\n                           onFocus={onFocusEventHandler}\r\n                           onChange={(e) => setName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"expires\">Expires</label>\r\n                    <input type=\"text\" \r\n                           name=\"expiry\" \r\n                           pattern=\"\\d\\d/\\d\\d\"\r\n                           placeholder=\"MM / YY\" \r\n                           required\r\n                           maxLength={4}\r\n                           value={expiry}\r\n                           onFocus={onFocusEventHandler}\r\n                           onChange={(e) => setExpiry(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"cvc\">CVC (CVV)</label>\r\n                    <input type=\"text\" \r\n                           name=\"cvc\" \r\n                           placeholder=\"123\" \r\n                           pattern=\"\\d{3,4}\"\r\n                           required\r\n                           maxLength={3}\r\n                           value={cvc}\r\n                           onFocus={onFocusEventHandler}\r\n                           onChange={(e) => setCvc(e.target.value)}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreditCardInput\r\n","export default __webpack_public_path__ + \"static/media/chec_logo.1314b2bc.svg\";","export default __webpack_public_path__ + \"static/media/dude.8a1c71a5.svg\";","import React, { FC } from 'react';\r\nimport fk_logo from '../../icons/fakestore_logo_short.svg';\r\nimport { WiDirectionLeft } from 'react-icons/wi';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ContentBlock from '../ContentBlock';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { Img } from 'react-image';\r\nimport { PuffLoader } from 'react-spinners';\r\nimport { FaInfo, FaLock, FaMoneyCheckAlt } from 'react-icons/fa';\r\nimport SelectInput, { SelectInputEvent, SelectOption } from '../inputs/SelectInput';\r\nimport RadioInput, { RadioInputEvent } from '../inputs/RadioInput';\r\nimport { ImCreditCard } from 'react-icons/im';\r\nimport { Billing, commerce } from '../../lib/commerce';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport CreditCardInput, { CreditCardEvent } from '../inputs/CreditCardInput';\r\nimport checLogo  from '../../icons/chec_logo.svg';\r\nimport { CheckoutCapture } from '@chec/commerce.js/types/checkout-capture';\r\nimport Modal from 'react-modal';\r\nimport ReactLoading from 'react-loading';\r\nimport dudePicture from '../../icons/dude.svg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearLocalCartAction } from '../../types/localCart';\r\nimport TextInput from '../inputs/TextInput';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst emptyBillingObj: Billing = {\r\n    customer: { firstname: \"\", lastname: \"\", email: \"\" },\r\n    country: { id: \"\", name: \"\" },\r\n    zipcode: \"\",\r\n    gateway: \"\",\r\n    card: { number: \"\", cardholder: \"\", cvc: \"\", expiry: \"\" }\r\n}\r\n\r\nconst CheckoutPage: FC = () => {\r\n    const { lcartProducts: cartProducts, totalPrice, totalQuantity } = useTypedSelector(root => root.localCart);\r\n    const { loading: itemsLoading } = useTypedSelector(root => root.loading);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [availableCountries, setAvailableCountries] = useState<SelectOption[]>();\r\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n    const [paymentLoading, setPaymentLoading] = useState<boolean>(false);\r\n    const [paymentError, setPaymentError] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        function getAvailableCountries() {\r\n            let countriesObject: Object;\r\n            let countriesArray: SelectOption[] = [];\r\n\r\n            commerce.services.localeListCountries().then(response => {\r\n                countriesObject = response.countries as Object;\r\n            }).then(() => {\r\n                if (mounted) {\r\n                    let length = Object.values(countriesObject).length;\r\n\r\n                    for (let i = 0; i < length; i++) {\r\n                        const id = Object.keys(countriesObject)[i];\r\n                        const value = Object.values(countriesObject)[i];\r\n\r\n                        countriesArray.push({ id, value });\r\n                    }\r\n\r\n                    setAvailableCountries(countriesArray);\r\n                }\r\n            });\r\n        }\r\n\r\n        getAvailableCountries();\r\n\r\n        return function cleanup() {\r\n            mounted = false;\r\n        }\r\n    }, []);\r\n\r\n    const [billing, setBilling] = useState<Billing>(emptyBillingObj);\r\n\r\n    const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setBilling({ ...billing, customer: { ...billing.customer, email: event.currentTarget.value } });\r\n    }\r\n\r\n    const onCountryChange = (event: SelectInputEvent) => {\r\n        setBilling({ ...billing, country: { id: event.option?.id as string, name: event.option?.value as string } });\r\n    }\r\n\r\n    const onZipcodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setBilling({ ...billing, zipcode: event.currentTarget.value });\r\n    }\r\n\r\n    const onCardChange = (event: CreditCardEvent) => {\r\n        setBilling({ ...billing, card: {\r\n            number: event.number.toString(),\r\n            cardholder: event.name,\r\n            expiry: event.expiry.toString(),\r\n            cvc: event.cvc.toString()\r\n        }, customer: {...billing.customer, \r\n            firstname: event.name.split(\" \")[0],\r\n            lastname: event.name.split(\" \")[1]\r\n        } });\r\n    }\r\n\r\n    const onGatewayChange = (event: RadioInputEvent) => {\r\n        setBilling({ ...billing, gateway: event.option?.id as string });\r\n    }\r\n\r\n    const confirmPayment = () => {\r\n        setPaymentLoading(true);\r\n\r\n        const card: any = {\r\n            number: billing.card.number,\r\n            cvc: billing.card.cvc,\r\n            expiry_month: billing.card.expiry.substr(0, 2),\r\n            expiry_year: billing.card.expiry.substr(2, 2),\r\n            postal_zip_code: billing.zipcode\r\n        }\r\n\r\n        const checkoutData: CheckoutCapture = {\r\n            line_items: {},\r\n            customer: {\r\n                firstname: billing.customer.firstname,\r\n                lastname: billing.customer.lastname,\r\n                email: billing.customer.email\r\n            },\r\n            billing: {\r\n                name: billing.card.cardholder,\r\n                postal_zip_code: billing.zipcode,\r\n                country: billing.country.id\r\n            },\r\n            payment: {\r\n                gateway: 'test_gateway',\r\n                card: card\r\n            },\r\n        }\r\n\r\n        const cartId: string = commerce.cart.id() || \"\";\r\n\r\n        commerce.checkout.generateToken(cartId, { type: \"cart\" }).then(token => {\r\n            commerce.checkout.capture(token.id, checkoutData)\r\n                                .catch(response => {\r\n                                    setPaymentLoading(false);\r\n                                    setPaymentError(response.data.error.message as string);\r\n                                }).then(() => {\r\n                                    setPaymentLoading(false);\r\n                                });\r\n        }).catch(response => {\r\n            setPaymentLoading(false);\r\n            setPaymentError(response.data.error.message as string);\r\n        });\r\n    }\r\n\r\n    const confirmPaymentClick = () => {\r\n        openModal();\r\n        confirmPayment();\r\n    }\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => setIsModalOpen(false);\r\n    const goHome = () => history.push(\"/\");\r\n    \r\n    const successModalButtonClick = () => {\r\n        dispatch(clearLocalCartAction());\r\n        setPaymentError(null);\r\n        setPaymentLoading(false);\r\n        goHome();\r\n    }\r\n\r\n    const isSmallScreen = useMediaQuery({ query: \"(max-width: 700px)\" });\r\n\r\n    // if Cart is empty, redirect to Home page\r\n    if (cartProducts.length === 0) {\r\n        goHome();\r\n    }\r\n\r\n    return (\r\n        <div id=\"checkout-page\">\r\n            <header className=\"checkout-page__header\">\r\n                <div className=\"return-to-store\">\r\n                    <span className=\"fk_logo__wrapper\">\r\n                        <img className=\"fk-logo\" src={fk_logo} alt=\"\"\r\n                             onClick={() => history.push(\"/\")}/>\r\n                    </span>\r\n                    <button className=\"flat-style with-icon icon-left no-hover return-to-store-button\"\r\n                            onClick={() => history.goBack()}>\r\n                        <WiDirectionLeft className=\"icon\"/>\r\n                        <span className=\"text\">Return</span>\r\n                    </button>\r\n                </div>\r\n                <h2 className=\"checkout-label\">Checkout</h2>\r\n            </header> \r\n            {\r\n                cartProducts.length > 0 ?\r\n                    itemsLoading ?\r\n                        <div className=\"page-loading\">\r\n                            <ReactLoading type=\"bubbles\" className=\"checkout-loading loading-spinner\"/>\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div className=\"checkout-page__body\">\r\n                                <ContentBlock title=\"Double-check Your cart\" className=\"cart\">\r\n                                    {\r\n                                        isSmallScreen ?\r\n                                            <div className=\"checkout-cart-list\">\r\n                                                <div className=\"cart-list\">\r\n                                                    {cartProducts.map(cp => (\r\n                                                        <div key={cp.product.id} className=\"cart-list-item\">\r\n                                                            <div className=\"picture__wrapper\">\r\n                                                                <Img className=\"picture\"\r\n                                                                    src={cp.product.media.source}\r\n                                                                    alt=\"\"\r\n                                                                    loader={<PuffLoader color=\"#00B389\" />} />\r\n                                                            </div>\r\n                                                            <div className=\"info\">\r\n                                                                <span className=\"name\">{cp.product.name}</span>\r\n                                                                <div className=\"quantity-block\">\r\n                                                                    <span className=\"label\">Quantity: </span>\r\n                                                                    <span className=\"quantity\">{cp.quantity}</span>\r\n                                                                </div>\r\n                                                                <span className=\"price\">${cp.price}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                                <div className=\"cart-summary\">\r\n                                                    <span className=\"total-label\">Total</span>\r\n                                                    <div className=\"quantity-block\">\r\n                                                        <span className=\"label\">Qty: </span>\r\n                                                        <span className=\"quantity\">{totalQuantity}</span>\r\n                                                    </div>\r\n                                                    <span className=\"price\">${totalPrice}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <table className=\"checkout-cart-table\">\r\n                                                <thead>\r\n                                                    <tr className=\"table-header-row\">\r\n                                                        <th colSpan={3} className=\"product-cell\">Product</th>\r\n                                                        <th className=\"quantity-cell\">Quantity</th>\r\n                                                        <th className=\"price-cell\">Price</th>\r\n                                                        <th className=\"empty-cell\" colSpan={2} />\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {cartProducts.map(cp => (\r\n                                                        <tr key={cp.product.id} className=\"product-row\">\r\n                                                            <td className=\"empty-cell\" />\r\n                                                            <td className=\"picture-cell\">\r\n                                                                <Img className=\"picture\"\r\n                                                                    src={cp.product.media.source}\r\n                                                                    alt=\"\"\r\n                                                                    loader={<PuffLoader color=\"#00B389\" />} />\r\n                                                            </td>\r\n                                                            <td className=\"name-cell\">{cp.product.name}</td>\r\n                                                            <td className=\"quantity-cell\">{cp.quantity}</td>\r\n                                                            <td className=\"price-cell\">${cp.price}</td>\r\n                                                            <td className=\"lock-cell\"><FaLock className=\"lock-icon\" /></td>\r\n                                                            <td className=\"empty-cell\" />\r\n                                                        </tr>\r\n                                                    ))}\r\n                                                    <tr className=\"summary\">\r\n                                                        <td className=\"empty-cell\" colSpan={2} />\r\n                                                        <td className=\"label-cell\">Total</td>\r\n                                                        <td className=\"quantity-cell\">{totalQuantity}</td>\r\n                                                        <td className=\"price-cell\">${totalPrice}</td>\r\n                                                        <td className=\"empty-cell\" colSpan={2} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                    }\r\n                                </ContentBlock>\r\n                                <ContentBlock title=\"Fill out Your information\" className=\"billing\">\r\n                                    <div className=\"contact-info\">\r\n                                        <form name=\"contact-info-form\">\r\n                                            <div className=\"input-block\">\r\n                                                <TextInput\r\n                                                    label=\"Email Address\"\r\n                                                    onValueChange={onEmailChange}\r\n                                                    placeholder=\"myemail@example.com\"\r\n                                                    type=\"email\" />\r\n                                            </div>\r\n                                            <div className=\"input-block\">\r\n                                                <RadioInput label=\"Payment Method\" options={[\r\n                                                    { id: \"test_gateway\", title: \"Credit Card\", subTitle: \"(Test Gateway)\", icon: ImCreditCard }\r\n                                                ]} selectedOptionId={\"test_gateway\"} onChange={onGatewayChange} />\r\n                                            </div>\r\n                                            <div className=\"input-block\">\r\n                                                <SelectInput label=\"Billing Country\"\r\n                                                    options={availableCountries ? availableCountries : []}\r\n                                                    onChange={onCountryChange} />\r\n                                            </div>\r\n                                            <div className=\"input-block\">\r\n                                                <TextInput\r\n                                                    label=\"Zip/Post Code\"\r\n                                                    onValueChange={onZipcodeChange}\r\n                                                    placeholder=\"94107\"\r\n                                                    type=\"text\" />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                    <div className=\"credit-card-info\">\r\n                                        <CreditCardInput onChange={onCardChange} />\r\n                                    </div>\r\n                                </ContentBlock>\r\n                                <ContentBlock className=\"confirmation\">\r\n                                    <div className=\"total-block\">\r\n                                        <span className=\"label\">Total</span>\r\n                                        <span className=\"price\">\r\n                                            <span className=\"value\">${totalPrice}</span>\r\n                                            <span className=\"tag green\">USD</span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"confirm-block\">\r\n                                        <button className=\"confirm-payment-button green with-icon icon-left\"\r\n                                                onClick={confirmPaymentClick}>\r\n                                            <FaMoneyCheckAlt />\r\n                                            <span>Confirm Payment</span>\r\n                                        </button>\r\n                                        <span className=\"extra-info\">\r\n                                            All transactions are safe & secured by 2048 bit SSL encryption.\r\n                                        </span>\r\n                                    </div>\r\n                                </ContentBlock>\r\n                            </div>\r\n                            <footer className=\"checkout-page__footer\">\r\n                                <a className=\"powered-by-chec\" href=\"https://commercejs.com/\" target=\"_blank\">\r\n                                    <img className=\"logo\" src={checLogo} alt=\"\" />\r\n                                    <span className=\"text\">Powered by <span className=\"chec\">Chec</span></span>\r\n                                </a>\r\n                            </footer>\r\n                        </>\r\n                : \r\n                    <div className=\"page-error checkout-empty-message\">\r\n                        <FaInfo className=\"icon\" />\r\n                        <span className=\"text\">\r\n                            <p>Your Shopping cart is empty.</p>\r\n                            <p>\r\n                                <span className=\"link\" onClick={() => history.goBack()}>Return to store</span>\r\n                                <span>and try again.</span>\r\n                            </p>\r\n                        </span>\r\n                    </div>\r\n            }\r\n\r\n            <Modal className=\"checkout-modal\" isOpen={isModalOpen}>\r\n                {\r\n                    paymentLoading ? \r\n                        <div className=\"loading-modal__wrapper\">\r\n                            <h3 className=\"modal-title\">Loading...</h3>\r\n                            <div className=\"modal-body\">\r\n                                <ReactLoading type=\"spin\" className=\"loading-spinner\" />\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                    paymentError ?\r\n                        <div className=\"checkout-modal__error\">\r\n                            <h3 className=\"modal-title red\">An error occured</h3>\r\n                            <div className=\"modal-body\">\r\n                                <span className=\"error-text\">{paymentError}</span>\r\n                                <span className=\"error-advice\">Double-check the input and try again.</span>\r\n                            </div>\r\n                            <div className=\"modal-buttons\">\r\n                                <button className=\"close-modal-button flat-style red\" onClick={closeModal}>Try again</button>\r\n                            </div>\r\n                        </div>\r\n                    :\r\n                        <div className=\"checkout-modal__success\">\r\n                            <h3 className=\"modal-title green\">Successful Payment</h3>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"left-side\">\r\n                                    <span className=\"info\">\r\n                                        <p>The transaction was successful.</p>\r\n                                        <p>Payment details have been sent to your email.</p>\r\n                                    </span>\r\n                                    <span className=\"nice-day-label\">Have a nice day!</span>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <img className=\"dude-picture\" alt=\"\" src={dudePicture}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-buttons\">\r\n                                <button className=\"close-modal-button flat-style green\" onClick={successModalButtonClick}>Close</button>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutPage","export default __webpack_public_path__ + \"static/media/account_front.d6e39c60.svg\";","export default __webpack_public_path__ + \"static/media/account_bg.aae04ef3.svg\";","export default __webpack_public_path__ + \"static/media/checked_sign.7446fd9f.svg\";","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { FaShoppingCart, FaUser } from 'react-icons/fa';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport account_front from '../../icons/account_front.svg';\r\nimport account_bg from '../../icons/account_bg.svg';\r\nimport checked_sign from '../../icons/checked_sign.svg';\r\nimport { useState } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { BsInfoSquareFill } from 'react-icons/bs';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchCustomer } from '../../store/actions/customer';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\ninterface LoginResultPageParams {\r\n    token: string;\r\n}\r\n\r\nconst LoginResultPage = () => {\r\n    const params = useParams<LoginResultPageParams>();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { login, customer } = useTypedSelector(root => root.customer);\r\n    const [isRendered, setIsRendered] = useState<boolean>(false);\r\n\r\n    const goHome = () => history.push(\"/\");\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCustomer(params.token));\r\n        setIsRendered(true);\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"successful-login-page\">\r\n            {\r\n                login.loading || !isRendered ?\r\n                    <div className=\"page-loading\">\r\n                        <ReactLoading type=\"bubbles\" className=\"loading-spinner\" />\r\n                    </div>\r\n                    : customer ?\r\n                        <div className=\"info-screen\">\r\n                            <div className=\"container\">\r\n                                <section className=\"info-section\">\r\n                                    <div className=\"title\">\r\n                                        <img className=\"icon\" src={checked_sign} alt=\"\" />\r\n                                        <h3 className=\"text\">Successful Login</h3>\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <p>Congratulations! You have successfully signed in to your fake store account. Now you have access to your personal info and order history.</p>\r\n                                        <p><b>Keep shopping with us!</b></p>\r\n                                    </div>\r\n                                    <div className=\"buttons\">\r\n                                        <button className=\"with-icon icon-right blue\">\r\n                                            <span>View Profile</span>\r\n                                            <FaUser />\r\n                                        </button>\r\n                                        <button className=\"with-icon green\" onClick={goHome}>\r\n                                            <span>Continue shopping</span>\r\n                                            <FaShoppingCart />\r\n                                        </button>\r\n                                    </div>\r\n                                </section>\r\n                                <section className=\"picture-section\">\r\n                                    <img className=\"picture\" src={account_front} alt=\"\" />\r\n                                    <img className=\"background\" src={account_bg} alt=\"\" />\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"page-error\">\r\n                            <BsInfoSquareFill className=\"icon\" />\r\n                            <span className=\"text\">\r\n                                <p>\r\n                                    {\r\n                                        login.error ?\r\n                                            login.error\r\n                                            :\r\n                                            \"Unknown error. Try again\"\r\n                                    }\r\n                                </p>\r\n                            </span>\r\n                        </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginResultPage\r\n","import React, { FC, useEffect } from 'react';\nimport Header from './components/Header';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport HomePage from './components/pages/HomePage';\nimport CategoryPage from './components/pages/CategoryPage';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { useDispatch } from 'react-redux';\nimport { fetchCategories } from './store/actions/category';\nimport { fetchProducts } from './store/actions/product';\nimport WishlistPage from './components/pages/WishlistPage';\nimport ProductPage from './components/pages/ProductPage';\nimport ScrollToTop from './components/ScrollToTop';\nimport Modal from 'react-modal';\nimport CheckoutPage from './components/pages/CheckoutPage';\nimport { commerceCartToLocal, fetchCommerceCart } from './store/actions/commerceCart';\nimport LoginResultPage from './components/pages/LoginResultPage';\nimport { commerce } from './lib/commerce';\nimport settings from '../package.json'\n\nModal.setAppElement(\"#root\");\n\nconst App: FC = () => {\n    const { selectedCategory } = useTypedSelector(root => root.category);\n    const { lineItems } = useTypedSelector(root => root.commerceCart);\n    const { products } = useTypedSelector(root => root.product);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchCategories());\n        dispatch(fetchProducts());\n        dispatch(fetchCommerceCart());\n    }, []);\n\n    useEffect(() => {\n        dispatch(commerceCartToLocal(products, lineItems));\n    }, [products, lineItems]);\n\n    useEffect(() => {\n        dispatch(fetchCommerceCart());\n    }, [commerce.customer.isLoggedIn()]);\n\n    const appGitName = settings['git-name'];\n\n    return (\n        <BrowserRouter>\n            <ScrollToTop />\n            <Switch>\n                <Route path=\"/checkout\" exact component={CheckoutPage}/>\n                <Route path=\"/\" render={() =>\n                    <>\n                        <Header />\n                        <div id=\"main-container\">\n                            <Switch>\n                                <Route path=\"/\" exact component={HomePage} />\n                                <Route path={`/${selectedCategory?.slug}`} exact component={CategoryPage} />\n                                <Route path={`/${selectedCategory?.slug}/:id`} exact component={ProductPage} />\n                                <Route path=\"/wishlist\" exact component={WishlistPage} />\n                                <Route path=\"/login/callback/:token\" exact component={LoginResultPage}/>\n                            </Switch>\n                        </div>\n                        <Footer />\n                    </>} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default App;\n","import { Dispatch } from \"react\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport { CategoryAction, fetchCategoriesAction, fetchCategoriesErrorAction, fetchCategoriesSuccessAction } from \"../../types/category\";\r\n\r\nexport const fetchCategories = () => {\r\n    return async (dispatch: Dispatch<CategoryAction>) => {\r\n        try {\r\n            dispatch(fetchCategoriesAction());\r\n    \r\n            const response = await commerce.categories.list();\r\n    \r\n            dispatch(fetchCategoriesSuccessAction(response.data));\r\n        }\r\n        catch (error) {\r\n            dispatch(fetchCategoriesErrorAction(error));\r\n        }\r\n    }\r\n}","import { ProductState, ProductActionTypes, ProductAction } from '../../types/product';\r\n\r\nconst initialState: ProductState = {\r\n    products: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const productReducer = (state = initialState, action: ProductAction): ProductState => {\r\n    switch (action.type) {\r\n        case ProductActionTypes.FETCH_PRODUCTS:\r\n            return { products: [], loading: true, error: null };\r\n        case ProductActionTypes.FETCH_PRODUCTS_ERROR:\r\n            return { products: [], loading: false, error: action.payload };\r\n        case ProductActionTypes.FETCH_PRODUCTS_SUCCESS:\r\n            return { products: action.payload, loading: false, error: null };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CategoryState, CategoryActionTypes, CategoryAction } from '../../types/category';\r\n\r\nconst initialState: CategoryState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null,\r\n    selectedCategory: null\r\n}\r\n\r\nexport const categoryReducer = (state = initialState, action: CategoryAction): CategoryState => {\r\n    switch (action.type) {\r\n        case CategoryActionTypes.FETCH_CATEGORIES:\r\n            return { categories: [], loading: true, error: null };\r\n        case CategoryActionTypes.FETCH_CATEGORIES_ERROR:\r\n            return { categories: [], loading: false, error: action.payload };\r\n        case CategoryActionTypes.FETCH_CATEGORIES_SUCCESS:\r\n            return { categories: action.payload, loading: false, error: null };\r\n        case CategoryActionTypes.SET_SELECTED_CATEGORY:\r\n            return { ...state, selectedCategory: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ScrollAction, ScrollActionTypes, ScrollState } from \"../../types/scroll\";\r\n\r\nconst initialState: ScrollState = {\r\n    percent: 0\r\n}\r\n\r\nexport const scrollReducer = (state = initialState, action: ScrollAction): ScrollState => {\r\n    switch (action.type) {\r\n        case ScrollActionTypes.SET_SCROLL_PERCENT:\r\n            return { percent: action.payload };\r\n        default: \r\n            return state;\r\n    }\r\n}","import { Product } from \"@chec/commerce.js/types/product\";\r\nimport { LocalCartAction, LocalCartActionTypes, LCartProduct, LocalCartState } from \"../../types/localCart\";\r\n\r\nconst initialState: LocalCartState = {\r\n    lcartProducts: [],\r\n    totalPrice: 0,\r\n    totalQuantity: 0\r\n};\r\n\r\nconst calculateCartPrice = (cartProducts: LCartProduct[]) => {\r\n    const price = cartProducts.reduce((a, b) => a + (b.price || 0), 0);\r\n    return Math.round(price * 100) / 100;\r\n};\r\n\r\nconst countItemsInCart = (cartProducts: LCartProduct[]) => (\r\n    cartProducts.reduce((a, b) => a + (b.quantity || 0), 0)\r\n);\r\n\r\nconst calculateProductPrice = (product: Product, quantity: number) => {\r\n    const price = product.price.raw * quantity;\r\n    return Math.round(price * 100) / 100;\r\n};\r\n\r\nexport const localCartReducer = (state = initialState, action: LocalCartAction): LocalCartState => {\r\n    let lCartProduct: LCartProduct | undefined;\r\n    let newLCartProducts: LCartProduct[];\r\n\r\n    switch (action.type) {\r\n        case LocalCartActionTypes.ADD_TO_CART:\r\n            lCartProduct = state.lcartProducts.find(cp => cp.product.id === action.payload.product.id);\r\n\r\n            // if CartProduct with given Id exists\r\n            if (lCartProduct) {\r\n                // increase quantity of CartProduct by given value (and calculate new Totals)\r\n\r\n                newLCartProducts = state.lcartProducts.map((cp) =>\r\n                    cp.product.id === action.payload.product.id ? {\r\n                        ...cp, quantity: cp.quantity + action.payload.quantity\r\n                    }\r\n                        : cp);\r\n\r\n                newLCartProducts.forEach(cp => (\r\n                    cp.price = calculateProductPrice(cp.product, cp.quantity)\r\n                ));\r\n\r\n                return {\r\n                    ...state,\r\n                        lcartProducts: newLCartProducts,\r\n                        totalPrice: calculateCartPrice(newLCartProducts),\r\n                        totalQuantity: countItemsInCart(newLCartProducts)\r\n                }\r\n            }\r\n            else {\r\n                // add CartProduct in Cart (and calculate price)\r\n\r\n                newLCartProducts = [...state.lcartProducts, {\r\n                    ...action.payload,\r\n                    price: calculateProductPrice(action.payload.product, action.payload.quantity)\r\n                }];\r\n\r\n                return {\r\n                    ...state,\r\n                        lcartProducts: newLCartProducts,\r\n                        totalPrice: calculateCartPrice(newLCartProducts),\r\n                        totalQuantity: countItemsInCart(newLCartProducts)\r\n                };\r\n            }\r\n        case LocalCartActionTypes.REMOVE_FROM_CART:\r\n            lCartProduct = state.lcartProducts.find(cp => cp.product.id === action.payload.productId);\r\n\r\n            if (lCartProduct) {\r\n                // if CartProduct with given Id exists\r\n                if (lCartProduct.quantity - action.payload.quantity <= 0) {\r\n                    // remove CartProduct from Cart\r\n\r\n                    newLCartProducts = state.lcartProducts.filter(cp => cp.product.id !== lCartProduct?.product.id);\r\n                    \r\n                    newLCartProducts.forEach(cp => (\r\n                        cp.price = calculateProductPrice(cp.product, cp.quantity)\r\n                    ));\r\n\r\n                    return {...state, \r\n                        lcartProducts: newLCartProducts,\r\n                        totalPrice: calculateCartPrice(newLCartProducts),\r\n                        totalQuantity: countItemsInCart(newLCartProducts)\r\n                    };\r\n                }\r\n                else {\r\n                    // decrease quantity of CartProduct by given value (and calculate new Totals)\r\n\r\n                    newLCartProducts = state.lcartProducts.map((cp) =>\r\n                        cp.product.id === action.payload.productId ?\r\n                            { ...cp, quantity: cp.quantity - action.payload.quantity }\r\n                            : cp\r\n                    );\r\n\r\n                    newLCartProducts.forEach(cp => (\r\n                        cp.price = calculateProductPrice(cp.product, cp.quantity)\r\n                    ));\r\n\r\n                    return {\r\n                        ...state, \r\n                        lcartProducts: newLCartProducts,\r\n                        totalPrice: calculateCartPrice(newLCartProducts),\r\n                        totalQuantity: countItemsInCart(newLCartProducts)\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        case LocalCartActionTypes.FILL_CART: \r\n            return { \r\n                lcartProducts: action.payload, \r\n                totalPrice: calculateCartPrice(action.payload), \r\n                totalQuantity: countItemsInCart(action.payload) \r\n            };\r\n        case LocalCartActionTypes.CLEAR_CART:\r\n            return {\r\n                lcartProducts: [],\r\n                totalPrice: 0,\r\n                totalQuantity: 0 \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { WishListState, WishListAction, WishListActionTypes } from \"../../types/wishList\"\r\n\r\nconst initialState: WishListState = {\r\n    products: []\r\n}\r\n\r\nexport const wishListReducer = (state = initialState, action: WishListAction): WishListState => {\r\n    switch (action.type) {\r\n        case WishListActionTypes.ADD_TO_WISHLIST:\r\n            if (state.products.find(p => p.id === action.payload.id)) {\r\n                return state;\r\n            }\r\n            else {\r\n                return {...state, products: [ ...state.products, action.payload ]};\r\n            }\r\n        case WishListActionTypes.REMOVE_FROM_WISHLIST:\r\n            return {...state, products: state.products.filter(p => p.id !== action.payload)};\r\n        case WishListActionTypes.CLEAR_WISH_LIST:\r\n            return {...state, products: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SortingActionTypes, SortingOptionAction, SortingOptionState } from \"../../types/sortingOption\";\r\n\r\nconst initialState: SortingOptionState = {\r\n    availableOptions: [],\r\n    activeOption: null\r\n}\r\n\r\nexport const sortingReducer = (state = initialState, action: SortingOptionAction): SortingOptionState => {\r\n    switch (action.type) {\r\n        case SortingActionTypes.SET_ACTIVE_OPTION:\r\n            // set Active option ONLY if Available option list contains it\r\n            if (state.availableOptions.find(option => option.name === action.payload.name))\r\n                return { ...state, activeOption: action.payload };\r\n            else\r\n                return state;\r\n        case SortingActionTypes.SET_AVAILABLE_OPTIONS:\r\n            return { availableOptions: action.payload, activeOption: null };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { LoadingAction, LoadingActionTypes, LoadingState } from \"../../types/loading\";\r\n\r\nconst initialState: LoadingState = {\r\n    numOfLoadings: 0,\r\n    loading: false\r\n}\r\n\r\nexport const loadingReducer = (state = initialState, action: LoadingAction): LoadingState => {\r\n    switch (action.type) {\r\n        case LoadingActionTypes.SET_LOADINGS:\r\n            if (action.payload < 0) {\r\n                return { numOfLoadings: 0, loading: false };\r\n            }\r\n            else {\r\n                return { numOfLoadings: action.payload, loading: action.payload > 0 };\r\n            }\r\n        case LoadingActionTypes.CLEAR_LOADINGS:\r\n            return { numOfLoadings: 0, loading: false };\r\n        case LoadingActionTypes.INC_LOADINGS: \r\n            return { numOfLoadings: state.numOfLoadings + 1, loading: true };\r\n        case LoadingActionTypes.DEC_LOADINGS:\r\n            if (state.numOfLoadings === 0) {\r\n                return state;\r\n            }\r\n            else {\r\n                return { numOfLoadings: state.numOfLoadings - 1, loading: state.numOfLoadings > 1 };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CommerceCartState, CommerceCartAction, CommerceCartActionTypes } from \"../../types/commerceCart\";\r\n\r\nconst initialState: CommerceCartState = {\r\n    lineItems: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const commerceCartReducer = (state = initialState, action: CommerceCartAction): CommerceCartState => {\r\n    switch (action.type) {\r\n        case CommerceCartActionTypes.FETCH_CART:\r\n            return { lineItems: [], loading: true, error: null };\r\n        case CommerceCartActionTypes.FETCH_CART_SUCCESS:\r\n            return { lineItems: action.payload, loading: false, error: null };\r\n        case CommerceCartActionTypes.FETCH_CART_ERROR:\r\n            return { lineItems: [], loading: false, error: action.payload };\r\n        default: \r\n            return state;\r\n    }\r\n}","import { CustomerState, CustomerAction, CustomerActionTypes } from \"../../types/customer\";\r\n\r\nconst initialState: CustomerState = {\r\n    login: { loading: false }\r\n}\r\n\r\nexport const customerReducer = (state = initialState, action: CustomerAction): CustomerState => {\r\n    switch (action.type) {\r\n        case CustomerActionTypes.FETCH_CUSTOMER:\r\n            return { ...state, login: { loading: true } };\r\n        case CustomerActionTypes.FETCH_CUSTOMER_SUCCESS:\r\n            return { \r\n                customer: action.payload.customer, \r\n                jwt: action.payload.jwt,\r\n                login: { loading: false }\r\n            };\r\n        case CustomerActionTypes.FETCH_CUSTOMER_ERROR:\r\n            return { ...state, login: { loading: false, error: action.payload } };\r\n        case CustomerActionTypes.CLEAR_STATE:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { productReducer } from \"./productReducer\";\r\nimport { categoryReducer } from \"./categoryReducer\";\r\nimport { scrollReducer } from \"./scrollReducer\";\r\nimport { localCartReducer } from \"./localCartReducer\";\r\nimport { wishListReducer } from \"./wishListReducer\";\r\nimport { sortingReducer } from \"./sortingOptionReducer\";\r\nimport { loadingReducer } from \"./loadingReducer\";\r\nimport { commerceCartReducer } from \"./commerceCartReducer\";\r\nimport { customerReducer } from \"./customerReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    product: productReducer,\r\n    category: categoryReducer,\r\n    scroll: scrollReducer,\r\n    localCart: localCartReducer,\r\n    commerceCart: commerceCartReducer,\r\n    wishList: wishListReducer,\r\n    sorting: sortingReducer,\r\n    loading: loadingReducer,\r\n    customer: customerReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { applyMiddleware, createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './styles/style.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>     \n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}